{"data": [{"id": 29078006, "name": "\uc815\uacbd\ud638", "x": -7.742470741271973, "y": 9.946944236755371, "label": 0, "group": 0, "code": "TestCase=int(input())\n\nfor t in range(TestCase):\n    N,M = list(map(int,input().split(' ')))\n    importance=list()\n    queue=[]\n    for i in range(9):\n        importance.append([])\n\n    string=input()\n    for i in range(N):\n        importance[int(string[i*2])-1].append(i+1)\n\n    last=0\n    ll=int()\n    for i in range(8,-1,-1):\n        for j in range(len(importance[i])):\n            if last<importance[i][j]:\n                queue.append(importance[i][j])\n                ll=importance[i][j]\n        for j in range(len(importance[i])):\n            if last>importance[i][j]:\n                queue.append(importance[i][j])\n                ll=importance[i][j]\n        last=ll\n\n    for i in range(len(queue)):\n        if queue[i]==M+1:\n            print(i+1)\n            break"}, {"id": 18500777, "name": "\uad8c\ubb38\uc815", "x": -14.302413940429688, "y": -6.421823978424072, "label": 0, "group": 0, "code": "def solution(test_cases):\n    for _ in range(test_cases):\n        count=0\n        queue=[]\n        doc_num,track_doc=list(map(int,input().split(' ')))\n        priorities=list(map(int,input().split(' ')))\n        for doc in range(doc_num):\n            queue.append(doc)\n\n        while len(queue) !=0:\n            if max(priorities) > priorities[queue[0]]:\n                queue.append(queue.pop(0))\n            elif max(priorities) == priorities[queue[0]]:\n                count+=1\n                item=queue.pop(0)\n                priorities[item]=-1\n                if item==track_doc:\n                    print(count)\n                    break\n\nif __name__ == \"__main__\":\n    test_cases=int(input())\n    solution(test_cases)"}, {"id": 11574354, "name": "\ud669\uc8fc\ud604", "x": -11.913546562194824, "y": 2.2214579582214355, "label": 0, "group": 0, "code": "test=int(input())\nfor i in range(test):\n    N,M=map(int,input().split())       #N=\uc218, M=\uc54c\uace0\uc790 \ud558\ub294 \ubb38\uc11c\uc758 \uc704\uce58\n    imp=list(map(int,input().split())) #\uc911\uc694\ub3c4\n    cnt=0\n    while True:\n        if imp[0]<max(imp):\n            a=imp.pop(0)\n            imp.append(a)\n            if M==0:\n                M=N-1\n            else:\n                M-=1\n            continue\n        elif imp[0]==max(imp):\n            del imp[0]\n            cnt+=1\n            N-=1\n            if M==0:\n                break\n            else:\n                M-=1\n        if not imp:\n            break\n    print(cnt)\n        \n"}, {"id": 31033560, "name": "\uc624\uc6b0\uc131", "x": -7.5483503341674805, "y": -5.688095569610596, "label": 0, "group": 0, "code": "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    a, b = map(int, sys.stdin.readline().split())\n    nums = list(map(int, sys.stdin.readline().split()))\n    lst = [0 for i in range(a)]\n    lst[b] = 1\n    count = 0\n    while True:\n        if nums[0] == max(nums):\n            count += 1\n            if lst[0] == 1:\n                print(count)\n                break\n            else:\n                del nums[0]\n                del lst[0]\n        else:\n            nums.append(nums[0])\n            del nums[0]\n            lst.append(lst[0])\n            del lst[0]"}, {"id": 27538593, "name": "\uc774\uad11\uc218", "x": -18.150426864624023, "y": 1.9081865549087524, "label": 0, "group": 1, "code": "def solution(n, m, priorities):\n    order = sorted(priorities, reverse=True)\n    p = priorities*n\n\n    stack = []\n\n    ord_idx = 0\n    cnt = 0\n\n    answer = -1\n\n    for i in range(len(p)):\n        if order[ord_idx] == p[i]:\n            real_idx = i % n\n            stack.append(real_idx)\n            ord_idx += 1\n            cnt += 1\n            if real_idx == m:\n                answer = cnt\n                break\n    return answer\n\n\ntest_cases = []\nt = int(input().strip())\nfor _ in range(t):\n    n, m = map(int, input().strip().split())\n    priorities = list(map(int, input().strip().split()))\n    test_cases.append([n, m, priorities])\n\nfor test_case in test_cases:\n    print(solution(*test_case))"}, {"id": 31037853, "name": "\ubcf5\ud6a8\uc120", "x": -2.122145891189575, "y": 7.015885829925537, "label": 0, "group": 1, "code": "N = int(input())\nprtList = [0] * N\n\nfor i in range(N) :\n    length, searchIndex = map(int, input().split(\" \"))\n    l = list(map(int, input().split(\" \")))\n    sortList = []\n    for j in range(length) :\n        sortList.append(l[j])\n    l.sort()\n    startIndex = 0\n    while True :\n        if startIndex >= len(sortList) :\n            startIndex = 0\n        if sortList[startIndex] == l[len(l)-1] :\n            prtList[i] += 1\n            if startIndex == searchIndex :\n                break\n            del l[len(l)-1]\n        startIndex += 1\n\nfor i in prtList:\n    print(i)"}, {"id": 32733284, "name": "\uc7a5\uadfc\uc11d", "x": -16.9606876373291, "y": 11.107762336730957, "label": 0, "group": 1, "code": "import sys\n\nif __name__ == '__main__':\n    t = int(sys.stdin.readline().strip())\n    nmLst = []\n    ipLst = []\n\n    for _ in range(t):\n        nm = []\n        n, m = map(int, sys.stdin.readline().strip().split())\n        nm.append(n)\n        nm.append(m)\n        nmLst.append(nm)\n\n        ip = list(map(int, sys.stdin.readline().strip().split()))\n        ipLst.append(ip)\n\n    for i in range(t):\n        lst1 = ipLst[i]\n        lst2 = []\n        locate = int(nmLst[i][1])\n\n        while 1:\n            if lst1[0] == max(lst1): #\ub9e8\uc55e\uc774 \uc81c\uc77c \ud074 \ub54c\n                tmp = lst1[0]\n                del lst1[0]\n                lst2.append(tmp)\n                locate -= 1\n                if locate == -1:\n                    print(len(lst2))\n                    break\n\n            else: #\ub9e8\uc55e\uc774 \uc81c\uc77c \ud06c\uc9c0 \uc54a\uc744 \ub54c\n                tmp = lst1[0]\n                del lst1[0]\n                lst1.append(tmp)\n                locate -= 1\n                if locate == -1:\n                    locate = len(lst1) - 1\n"}, {"id": 38831949, "name": "\ubcf5\uc2dc\uc6d0", "x": 18.688087463378906, "y": 9.937507629394531, "label": 0, "group": 1, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, input().rstrip().split())\n    docs = list(map(int, input().rstrip().split()))\n    order_docs = sorted(docs, reverse=True)\n    count = 1\n    a = docs[M]\n    docs[M] = 'x'\n    while docs:\n        if docs[0] == 'x':\n            if order_docs[0] == a:\n                print(count)\n                break\n            else:\n                docs.append(docs.pop(0))\n\n        elif docs[0] == order_docs[0]:\n            docs.pop(0)\n            order_docs.pop(0)\n            count += 1\n        else:\n            docs.append(docs.pop(0))\n"}, {"id": 34378771, "name": "\ud558\uc9c4\ud601", "x": -18.268098831176758, "y": 5.239005088806152, "label": 0, "group": 2, "code": "from sys import stdin as st\ndef nQ(a,b,c):\n    ks=iter(sorted(list(set(b)),reverse=True))\n    oQ,curI,lastI,frstI=0,0,-1,0\n    while True:\n        if frstI==curI:\n            curK=next(ks)\n            curI=(lastI+1)%c\n            frstI=curI\n        if b[curI]==curK:\n            oQ+=1\n            lastI=curI\n            if curI==a:\n                return oQ\n        curI+=1\n        curI%=c\ncaseN=int(st.readline())\nfor i in range(caseN):\n    N, Loc=map(int,st.readline().split())\n    que=list(map(int,st.readline().split()))\n    print(nQ(Loc,que,N))"}, {"id": 36526576, "name": "\uc2ec\uc601\ud604", "x": -11.862617492675781, "y": 15.767695426940918, "label": 0, "group": 2, "code": "testCase = int(input())\n\nfor _ in range(testCase):\n    N, M = map(int,input().split())\n\n    printList = list(map(int,input().split()))\n    checkList = [0 for _ in range(N)] \n    checkList[M] = 1 # \uad81\uae08\ud55c \ubb38\uc11c\uc704\uce58 \uc800\uc7a5\n\n    count=0\n    while True:\n        if printList[0] == max(printList):\n            count+=1\n\n            if checkList[0] != 1:\n                del printList[0]\n                del checkList[0]\n            else:\n                print(count)\n                break\n        else:\n            printList.append(printList[0])\n            checkList.append(checkList[0])\n            del printList[0]\n            del checkList[0]"}, {"id": 39644296, "name": "\uae40\ub2e4\ube48", "x": 24.357994079589844, "y": 40.36919403076172, "label": 0, "group": 2, "code": "import sys \ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T) :\n\tn, m = map(int, input().split())\n\tweight = list(map(int, input().split()))\n\tidx = [i for i in range(n)]\n\tresult = 0\n\n\twhile weight :\n\t\tif max(weight) != weight[0] :\n\t\t\tweight.append(weight.pop(0))\n\t\t\tidx.append(idx.pop(0))\n\t\telse :\n\t\t\tresult += 1\n\t\t\tif idx[0] == m :\n\t\t\t\tprint(result)\n\t\t\t\tbreak\n\t\t\tweight.pop(0)\n\t\t\tidx.pop(0)"}, {"id": 42223843, "name": "\uc81c\uac08\ud558\ud604", "x": -21.875099182128906, "y": -1.310779333114624, "label": 0, "group": 2, "code": "def IntArrInput():\n    return [int(v) for v in input().split(\" \")]\ndef findBiggestIdx(arr):\n    bigVal=bigIdx=0\n    for (idx,val) in enumerate(arr):\n        if bigVal<val:\n            bigVal=val\n            bigIdx=idx\n    return bigIdx\ndef findRequireIdx(arr):\n    for (i,v) in enumerate(arr):\n        if v==-1: return i\ndef run():\n    loopRange=int(input())\n\n    for _ in range(loopRange):\n        [docCnt,requireIdx]=IntArrInput()\n        docArr=IntArrInput()\n        docArr=docArr[:docCnt]\n        cnt=0\n        while True:\n            biggestIdx=findBiggestIdx(docArr)\n            cnt+=1\n            if biggestIdx==requireIdx:\n                print(cnt)\n                break\n            else:\n                requireIdxNum=docArr[requireIdx]\n                docArr[requireIdx]=-1\n                docArr=docArr[biggestIdx+1:]+docArr[:biggestIdx]\n                requireIdx=findRequireIdx(docArr)\n                docArr[requireIdx]=requireIdxNum\nrun()"}, {"id": 18323942, "name": "\ucd94\uc720\ube48", "x": -11.763187408447266, "y": 22.22548484802246, "label": 0, "group": 3, "code": "case = int(input())\n\nfor _ in range(case):\n    N, M = map(int, input().split())\n    print_list = list(map(int, input().split()))\n    prior_number = []\n    \n    #\uc6b0\uc120 \uc21c\uc704\ub97c \ud0d0\uc0c9\ud558\uae30 \uc704\ud55c \ub9ac\uc2a4\ud2b8\n    for doc in print_list:\n        prior_number.append(doc)\n    \n    #\ud050 \uc548\uc5d0 index\ub97c \ub123\uc5b4 \ud0d0\uc0c9\n    result = [0 for _ in range(N)]\n    queue = [i for i in range(N)]\n    sequence = 1\n    while queue:\n        if print_list[queue[0]] == max(prior_number):\n            prior_number.remove(max(prior_number))\n            result[queue.pop(0)] = sequence\n            sequence += 1\n        else:\n            queue.append(queue.pop(0))              \n    print(result[M])"}, {"id": 27280221, "name": "\uc815\ub3c4\uc601", "x": 21.64620590209961, "y": 14.129785537719727, "label": 0, "group": 3, "code": "tk = int(input())\nresult = []\n\nfor i in range(tk):\n    N, M = map(int, input().split())\n    imp = list(map(int, input().split()))\n\n    impLoc = [0]*N\n    impLoc[M] = 'x'\n    count = 0\n\n    while True:\n        if imp[0] == max(imp):\n            count += 1\n\n            if impLoc[0] == 'x':\n                result.append(count)\n                break\n\n            imp.pop(0)\n            impLoc.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            impLoc.append(impLoc.pop(0))\n\nprint('\\n'.join(map(str, result)))"}, {"id": 24424712, "name": "\uacf5\uc2b9\uc5f0", "x": -17.81296157836914, "y": 0.7327685356140137, "label": 0, "group": 3, "code": "number_of_testcases=int(input())\nanswer_list=[]\ndef organize(importance,location):\n    answer=0\n    while True:\n        if importance[0]==max(importance):\n            answer=answer+1\n            if location==0:\n                return answer\n                break\n            else:\n                importance.remove(importance[0])\n                location=location-1\n        else:\n            importance.append(importance[0])\n            importance.remove(importance[0])\n            if location==0:\n                location=len(importance)-1\n            else:\n                location=location-1\nfor k in range(0,number_of_testcases):\n    location=int(input().split(\" \")[1])\n    importance=input().split(\" \")\n    answer_list.append(organize(importance,location))\nfor k in answer_list:\n    print(k)"}, {"id": 21820031, "name": "\uc2e0\uc9c0\ubbfc", "x": -1.871626615524292, "y": -9.396652221679688, "label": 0, "group": 3, "code": "case = int(input())\nfor _ in range(case):\n    n, m = map(int, input().split())\n    imp = list(map(int, input().split()))\n    temp = [0 for _ in range(n)]\n    temp[m] = 1\n    cnt = 0\n\n    while imp:\n        if imp[0] == max(imp):\n            cnt += 1\n            if temp[0] == 1:\n                print(cnt)\n                break\n            else:\n                imp.pop(0)\n                temp.pop(0)\n        else:\n            imp.append(imp[0])\n            temp.append(temp[0])\n            del(imp[0])\n            del(temp[0])\n"}, {"id": 16430885, "name": "\uae40\ubbfc\uc885", "x": 13.794842720031738, "y": -13.645060539245605, "label": 0, "group": 4, "code": "import sys\n\nT=int(sys.stdin.readline().strip())\nanswers=[]\nfor _ in range(T):\n\n    N, I = map(int, sys.stdin.readline().strip().split(' '))\n    value=list(map(int, sys.stdin.readline().strip().split(' ')))\n    idxx=[i for i in range(N)]\n\n    c=0\n\n  \n\n    while True:\n        idx=idxx.pop(0)\n        v=value.pop(0)\n      \n\n        if len(value)>0 and v < max(value):\n            idxx.append(idx)\n            value.append(v)\n        else:\n            c+=1\n            if idx == I:\n                answers.append(c)\n                break\nfor i in answers:\n    print(i)"}, {"id": 14000522, "name": "\ucd5c\uc2dc\uc5f0", "x": -20.053096771240234, "y": -15.489262580871582, "label": 0, "group": 4, "code": "def wow(find,arr):\n    index = find\n    delcase = max(arr)\n    cnt = 0\n    while True:\n        if arr[0] == delcase:\n            if index==0:\n                cnt+=1\n                break\n            else:\n                cnt+=1\n                arr.pop(0)\n                index -=1\n                delcase = max(arr)\n        else :\n            if index==0:\n                arr.append(arr.pop(0))\n                index = len(arr)-1\n            else :\n                index -=1\n                arr.append(arr.pop(0))\n    return cnt\n\ntestcase = int(input())\n\nfor _ in range(testcase):\n    n,find = map(int,input().split())\n    arr = list(map(int,input().split()))\n    print(wow(find,arr))"}, {"id": 42642873, "name": "\ubc15\uc11c\uc900", "x": 1.1175531148910522, "y": -0.6477455496788025, "label": 0, "group": 4, "code": "import sys\n\ninput = sys.stdin.readline\n\nnum = int(input())\n\nfor _ in range(num):\n    n, m = map(int, input().split())\n    print_queue = list(map(int, input().split()))\n    index = [i for i in range(n)]\n    target = index[m]\n    cnt = 0\n\n    while print_queue:\n        if print_queue[0] == max(print_queue):\n            cnt += 1\n            if index[0] == target:\n                print(cnt)\n                break\n            print_queue.pop(0)\n            index.pop(0)\n        else:\n            print_queue.append(print_queue.pop(0))\n            index.append(index.pop(0))"}, {"id": 33365990, "name": "\uc124\uc2dc\uc6d0", "x": 25.747488021850586, "y": 6.653427600860596, "label": 0, "group": 4, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    N, M = map(int, input().split())\n    document_list = list(map(int, input().split()))\n    document_list = [(index, document_list[index]) for index in range(N)]\n    sorted_list = sorted(document_list, key=lambda x: x[1], reverse=True)\n    count, num = 0, 0\n\n    while num < N+1:\n        if document_list[0][1] != sorted_list[num][1]:\n            document_list.append(document_list[0])\n            del document_list[0]\n        else:\n            count += 1\n            if document_list[0][0] == M:\n                print(count)\n                break\n            document_list.pop(0)\n            num += 1"}, {"id": 26242889, "name": "\uc720\uc601\uae30", "x": -38.389404296875, "y": -4.709616184234619, "label": 0, "group": 5, "code": "import sys\n\nclass Queue:\n    class Node:\n        def __init__(self, data):\n            self.next = None\n            self.data = data\n    \n    def __init__(self):\n        self.front = None\n        self.rear = None\n        self.size = 0\n    \n    def top(self):\n        return self.front.data\n\n    def enqueue(self, data):\n        if self.size == 0:\n            self.front = Queue.Node(data)\n            self.rear = self.front\n        else:\n            self.rear.next = Queue.Node(data)\n            self.rear = self.rear.next\n        self.size += 1\n    \n    def dequeue(self):\n        node = self.front\n        self.front = self.front.next\n        self.size -= 1\n        return node.data\n\n    def rotate(self):\n        self.rear.next = self.front\n        self.front = self.front.next\n        self.rear = self.rear.next\n\nclass Data:\n    def __init__(self, doc_num, priority):\n        self.number = doc_num\n        self.priority = priority\n\nfor t in range(int(sys.stdin.readline())):\n    N, M = map(int, sys.stdin.readline().split())\n    answer = 0\n    queue = Queue()\n    stack = [] # \uc6b0\uc120 \uc21c\uc704 \uae30\uc5b5\uc6a9\n    for n, p in enumerate(map(int, sys.stdin.readline().split())):\n        data = Data(n, p)\n        queue.enqueue(data)\n        stack.append(data.priority)\n    stack.sort()\n    while True:\n        data = queue.top()\n        if data.priority < stack[-1]:\n            queue.rotate()\n        elif data.number == M:\n            answer += 1\n            break\n        else:\n            stack.pop()\n            queue.dequeue()\n            answer += 1\n    print(answer)"}, {"id": 28599978, "name": "\ucd94\ud76c\uc790", "x": -36.0948486328125, "y": -6.796242713928223, "label": 0, "group": 5, "code": "class PrinterQueue:\n    def __init__(self, q):\n        self.q = q\n        self.priorities = sorted(q, reverse=True)\n\n    def get(self, target):\n        idx = 0\n        cnt = 0\n        while True:\n            if idx == target:\n                if self.__is_popable(idx):\n                    return cnt + 1\n                else:\n                    self.q.append(self.q[idx])\n                    target = len(self.q) - 1\n            if not self.__is_popable(idx):\n                self.q.append(self.q[idx])\n            else:\n                cnt += 1\n            idx += 1\n\n    def __is_popable(self, index):\n        if self.q[index] == self.priorities[0]:\n            del self.priorities[0]\n            return True\n        return False\n\n\ndef solution(N, M, docs):\n    pq = PrinterQueue(docs)\n    return pq.get(M)\n\n\nif __name__ == \"__main__\":\n    test_num = int(input())\n    for _ in range(test_num):\n        N, M = map(int, input().split(\" \"))\n        docs = list(map(int, input().split(\" \")))\n        print(solution(N, M, docs))\n"}, {"id": 45784923, "name": "\uc5ec\uc9c4\uad6c", "x": 10.679447174072266, "y": 19.58550453186035, "label": 0, "group": 5, "code": "n = int(input())\n\nfor i in range(n):\n  num, index= input().split()\n  k = input().split()\n\n  index = int(index)\n  q = [int(i) for i in k]\n  t = [int(i) for i in k]\n\n  t.sort()\n  place=1\n  while q != []:\n    if q[0]==t[-1]:\n      if index==0:\n        print(place)\n        break\n      else:\n        index-=1\n        q.pop(0)\n        t.pop()\n        place+=1\n    else:   #\uc911\uc694\ub3c4\uac00 \ubd80\uc871\n      if index==0:\n        index=len(q)-1\n      else:\n        index-=1\n      q.append(q.pop(0))\n      "}, {"id": 6457132, "name": "\uc774\uc5b8\uc815", "x": -1.1234090328216553, "y": -25.327747344970703, "label": 0, "group": 5, "code": "for i in range(int(input())):\n    p,q=map(int,input().split())\n    lst=list(map(int,input().split()))\n    lst[q]=float(lst[q])\n    ord=0\n    while True:\n        while True:\n            temp=lst[0]\n            done=True\n            for j in lst:\n                if j>temp:\n                    lst.append(temp)\n                    del lst[0]\n                    done = False\n                    break\n            if done==True:\n                break\n        del lst[0]\n        ord+=1\n        if type(temp)==float:\n            print(ord)\n            break\n"}, {"id": 44929130, "name": "\uc774\ub2e4\ud61c", "x": 5.341853141784668, "y": -5.587449073791504, "label": 0, "group": 6, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    idx = [0 for _ in range(n)]\n    idx[m] = 1\n    cnt = 0\n    que = []\n    while q:\n        if q[0] == max(q):\n            cnt += 1\n            if idx[0] == 0:\n                q.pop(0)\n                idx.pop(0)\n            else:\n                break\n        else:\n            q.append(q.pop(0))\n            idx.append(idx.pop(0))\n    print(cnt)"}, {"id": 24849208, "name": "\uc548\uc18c\uc5f0", "x": 13.684379577636719, "y": -11.325241088867188, "label": 0, "group": 6, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    M ,S =map(int,input().split())\n    data = list(map(int,input().split()))\n    comp = sorted(data)\n    data = [(idx,T) for idx,T in enumerate(data)]\n    cnt = 1\n    while data:        \n        if data[0][1]<comp[-1]:\n            data.append(data.pop(0))\n        else:\n            if data[0][0] == S:\n                print(cnt)\n                break\n            else:\n                data.pop(0)\n                comp.pop()\n                cnt+=1\n"}, {"id": 17498069, "name": "\ucd5c\ud0dc\uc724", "x": -27.039154052734375, "y": 2.327739953994751, "label": 0, "group": 6, "code": "Case = int(input())\n\ndef priority_print(queue, M, print_count):\n    priority = max(queue.values())\n    \n    for key, item in queue.items():\n        if(priority == item):\n            if(M == key):\n                return print_count\n            else:\n                queue.pop(key)\n                return priority_print(queue, M, print_count + 1)\n        else:\n            cur_key = key\n            cur_item = item\n            queue.pop(cur_key)\n            queue.update({cur_key: cur_item})\n            return priority_print(queue, M, print_count)\n\nfor _ in range(Case):\n    # N : \ubb38\uc11c\uc758 \uc218 \n    # M : \uba87\ubc88\uc9f8\ub85c \uc778\uc1c4\ub420\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc704\uce58\n    N, M = map(int, input().split())\n    \n    if(N == 1):\n        dummy = input()\n        print(1)\n        continue\n    \n    num_list = map(int, input().split())\n    \n    queue = dict()\n    for i, num in enumerate(num_list):\n        queue[i] = num\n        \n    print(priority_print(queue, M, 1))"}, {"id": 22343376, "name": "\uc815\uc740\ucc44", "x": 26.97899627685547, "y": 7.541622161865234, "label": 0, "group": 6, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    li = list(map(int, input().split()))\n    li2 = [(li[i], i) for i in range(n)]\n    answer, idx = 0, 0\n    while True:\n        idx = li.index(max(li))\n        if idx == 0:\n            answer += 1\n            if li2[idx][1] == m:\n                break\n            del li[0], li2[0]\n        else:\n            li.append(li[0])\n            li2.append(li2[0])\n            del li[0], li2[0]\n    print(answer)"}, {"id": 14097101, "name": "\uc720\uc900\uc0c1", "x": 12.982072830200195, "y": 9.746352195739746, "label": 0, "group": 7, "code": "num = int(input())\nfor i in range(num):\n    c=[]\n    count=0\n    M , N = map(int, input().split())\n    c = list(input().split())\n    ans=[0]*M\n    ans[N] = 1\n    while (1):\n        if c.index(max(c)) == 0:\n            del c[0]\n            count+=1\n            if ans[0] == 1:\n                print(count)\n                break\n            else:\n                del ans[0]\n        else:\n            c.append(c[0])\n            del c[0]\n            ans.append(ans[0])\n            del ans[0]\n"}, {"id": 40253439, "name": "\uc591\uaddc\uc6d0", "x": 14.395723342895508, "y": -3.2575583457946777, "label": 0, "group": 7, "code": "from sys import stdin\nT = int(stdin.readline().rstrip())\n\nfor _ in range(T):\n    N, M = map(int, stdin.readline().rstrip().split())\n    Arr = list(map(int, stdin.readline().rstrip().split()))\n    cnt = list(Arr.count(x) for x in range(0, 10))\n    start = 0\n    Flag = False\n    c = 0\n    for p in range(9, 0, -1):\n        while cnt[p] and not Flag:\n            if p in Arr[start:]:\n                start = Arr[start:].index(p) + start\n                c += 1\n                cnt[p] -= 1\n                if start == M:\n                    Flag = True\n                    print(c)\n                start += 1\n            else: start = 0\n        if Flag: break\n"}, {"id": 28272923, "name": "\ucc28\ud0dc\ud604", "x": -9.069172859191895, "y": -1.5715622901916504, "label": 0, "group": 7, "code": "import sys\nimport math\nfor i in range(0, int(input())):\n    count=0\n    n,m = map(int, sys.stdin.readline().split())\n    papers = list(map(int,sys.stdin.readline().split()))\n    mres=m\n    while papers:\n        if max(papers)!=papers[0]:\n            papers.append(papers[0])\n            del papers[0]\n            if mres==0:\n                mres=len(papers)-1\n            else:\n                mres-=1\n        else:\n            count+=1\n            del papers[0]\n            if 0==mres:\n                print(count)\n                break;\n            mres-=1"}, {"id": 33943130, "name": "\uad8c\uc2b9\ub0a8", "x": 1.5565292835235596, "y": 0.27025872468948364, "label": 0, "group": 7, "code": "import sys\n\nt = int(input())\nfor _ in range(t):\n    pages, what_page = map(int, input().split())\n    priority = list(map(int, sys.stdin.readline().split()))\n    page_list = [i for i in range(pages)]\n    page_list[what_page] = 'target'\n    cnt = 0\n    while True:\n        if priority[0] == max(priority):\n            cnt += 1\n            if page_list[0] == 'target':\n                print(cnt)\n                break\n            else:\n                priority.pop(0)\n                page_list.pop(0)\n        else:\n            priority.append(priority.pop(0))\n            page_list.append(page_list.pop(0))\n"}, {"id": 29824982, "name": "\uc0ac\uacf5\ucca0\ud76c", "x": -23.195833206176758, "y": 20.90131950378418, "label": 0, "group": 8, "code": "from sys import stdin\n\nnum = stdin.readline() # \uc5ec\ub7ec \uc904\uc758 \uc785\ub825\uc744 \ubc1b\uc544\uc57c \ud560 \ub584 input\ubcf4\ub2e4 stdin\uc774 \ub354 \ud6a8\uc728\uc801\n\n\nfor _ in range(int(num)):\n    N,M = map(int,stdin.readline().split())\n    my_list = list(map(int, stdin.readline().split())) # \ub371\uc73c\ub85c \uc120\uc5b8\ud558\uba74 map \uc0ac\uc6a9 \ubd88\uac00\n    goal = list(range(len(my_list))) # \ud574\ub2f9 \uc778\ub371\uc2a4\ub97c \uad00\ub9ac\ud558\uae30 \uc704\ud574 \ub9ac\uc2a4\ud2b8 \uc0dd\uc131\n    goal[M] = 'goal'\n  \n    idx = 0 # \ub098\uac00\ub294 \uc21c\uc11c\n    while True:\n        if my_list[0] == max(my_list):\n            idx += 1 # \ube60\uc838\ub098\uac08 \ub54c\ub9cc +1\n            if goal[0] == 'goal':\n                print(idx)\n                break\n            else:\n                my_list.pop(0)\n                goal.pop(0)\n                \n        else:\n            my_list.append(my_list.pop(0)) # \ud574\ub2f9 \ub9ac\uc2a4\ud2b8\ub0b4\uc5d0 \uac00\uc7a5 \ud070 \uac12\uc544\ub2c8\uba74 \ub4a4\uc5d0 \ubd99\uc774\uae30\n            goal.append(goal.pop(0))"}, {"id": 25755423, "name": "\ub178\ud0dc\ud638", "x": 29.144153594970703, "y": 4.48247766494751, "label": 0, "group": 8, "code": "for _ in range(int(input())):\n    N,M = map(int,input().split())\n    vI = list(map(int,input().split()))\n    kI = list(range(N))\n\n    r = 0\n    while True:\n        if vI[0] == max(vI):\n            r += 1\n            if kI[0] == M:\n                print(r)\n                break\n            else:\n                vI.pop(0)\n                kI.pop(0)\n        else:\n            vI.append(vI[0])\n            vI.pop(0)\n            kI.append(kI[0])\n            kI.pop(0)\n"}, {"id": 46887109, "name": "\ud55c\ud604\ud638", "x": 0.8857067823410034, "y": 0.48802152276039124, "label": 0, "group": 8, "code": "import sys\n\nn = int(sys.stdin.readline())\n\nfor _ in range(n):\n    doc_cnt, target = map(int,sys.stdin.readline().split())\n    doc_list = list(enumerate(map(int, sys.stdin.readline().split())))\n    priority_list = [doc_list[i][1] for i in range(doc_cnt)]\n    answer = 0\n\n    while True:\n        if priority_list[0] == max(priority_list):\n            answer += 1\n            if doc_list[0][0] == target:\n                print(answer)\n                break\n            else:                \n                priority_list.pop(0)\n                doc_list.pop(0)\n        else:\n            priority_list.append(priority_list.pop(0))\n            doc_list.append(doc_list.pop(0))"}, {"id": 44076602, "name": "\uc784\uc131\ucca0", "x": -7.41516637802124, "y": -17.342763900756836, "label": 0, "group": 8, "code": "from sys import stdin\ninput = stdin.readline\nTimes = int(input())\ndef append(n, m, l):\n    l.append(l.pop(0))\n    if m == 0:\n        m = len(l) - 1\n    else:\n        m -= 1\n    return n, m, l\ndef remove(n, m, l):\n    l.pop(0)\n    m -= 1\n    return n, m, l\n\nfor i in range(Times):\n    n, m = map(int, input().split(' '))\n    l = list(map(int, input().split(' ')))\n    ans = 0\n    while True:\n        if l[0] == max(l):\n            n, m, l = remove(n, m, l)\n            ans += 1\n        else:\n            n, m, l = append(n, m, l)\n        if m == -1:\n            break\n    print(ans)"}, {"id": 18579801, "name": "\uc190\ud604\ud0dc", "x": -22.629911422729492, "y": -14.497735023498535, "label": 0, "group": 9, "code": "t=int(input())\nresult=[]\nfor i in range(t):\n    paper,position=map(int,input().split())\n    \n    if paper==1:\n        result.append(1)\n        null=input()\n        continue\n    else:\n        arr=input().split()\n        arr=[int(j) for j in arr]\n        count=0\n        out=arr[0]\n        m=max(arr[1:])\n\n        while(True):\n            if out>=m and position==0:\n                count+=1\n                result.append(count)\n                break\n            elif out>=m and position!=0:\n                position-=1\n                count+=1\n                arr=arr[1:]\n                out=arr[0]\n                m=max(arr)\n            elif out<m and position==0:\n                position=len(arr)-1\n                temp=arr[1:]\n                arr=temp+[out]\n                out=arr[0]\n                m=max(arr[1:])\n            else: #out<m abd position!=0:\n                position-=1\n                temp=arr[1:]\n                arr=temp+[out]\n                out=arr[0]\n                m=max(arr[1:])\n                \nfor i in range(t):\n    print(result[i])\n\n"}, {"id": 20688163, "name": "\ub958\ub355\ud658", "x": -8.214475631713867, "y": -26.658649444580078, "label": 0, "group": 9, "code": "T = int(input())\nfor test in range(T):\n    N, M = map(int, input().split())\n    prefer = list(map(int, input().split()))\n\n    counting = 0\n\n    while True:\n        if M == 0:\n            if prefer[0] == max(prefer):\n                counting += 1\n                break\n            else:\n                prefer.append(prefer[0])\n                del prefer[0]\n                M = len(prefer)-1\n                \n        else:\n            if prefer[0] == max(prefer):\n                del prefer[0]\n                counting += 1\n                M -= 1\n            else:\n                prefer.append(prefer[0])\n                del prefer[0]\n                M -= 1\n \n    print(counting)"}, {"id": 24180276, "name": "\ud5c8\uc815\uc218", "x": -4.632363796234131, "y": -20.55726432800293, "label": 0, "group": 9, "code": "n = int(input())\nfor i in range(n):\n    k, num = map(int, input().split())\n    L = list(map(int, input().split()))\n    loop = 0\n    flag = 0\n    count = 0\n    while L:\n        if loop == num:\n            flag = 1\n        if L[0] != max(L):\n            L.append(L.pop(0))\n            if flag:\n                num = len(L)\n                loop = 0\n            flag = 0\n        else:\n            L.pop(0)\n            count += 1\n            if flag:\n                print(count)\n                break\n        loop += 1\n"}, {"id": 47532028, "name": "\ud669\ubcf4\uc6a9\uc131", "x": 1.041606068611145, "y": -22.282634735107422, "label": 0, "group": 9, "code": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor i in range(n):\n\n    doc_num, doc_index = map(int, input().split())\n    ip = list(map(int, input().split()))\n\n    order = 1\n\n    while True:\n        if ip[0] == max(ip):\n            if doc_index == ip.index(max(ip)):\n                print(order)\n                break\n            else:\n                ip.pop(0)\n                order += 1\n                doc_index -= 1\n        \n        else:\n            a = ip.pop(0)\n            ip.append(a)\n            doc_index -= 1\n        \n        if doc_index < 0:\n            doc_index += len(ip)"}, {"id": 25690556, "name": "\uc1a1\uc77c\uad6d", "x": -11.355300903320312, "y": 1.8013083934783936, "label": 0, "group": 10, "code": "import sys\ninput=sys.stdin.readline\n\nT=int(input())\n\nfor _ in range(T):\n    N,M=map(int,input().split())\n    Q=list(map(int,input().split()))\n    cnt=0\n    while True:\n        #\uc6b0\uc120\uc21c\uc704 \uc824 \ub192\uc73c\uba74 pop\n        if Q[0]>=max(Q):\n            Q.pop(0)\n            cnt+=1\n            if M==0:\n                print(cnt)\n                break\n            else:\n                M-=1\n        else:\n            tmp=Q.pop(0)\n            Q.append(tmp)\n            if M==0:\n                M=len(Q)-1\n            else:\n                M-=1\n"}, {"id": 35873588, "name": "\uac15\ub3d9\uc6d0", "x": -25.807350158691406, "y": 21.73420524597168, "label": 0, "group": 10, "code": "import sys\ntest_case = int(sys.stdin.readline())\n\nfor _ in range(test_case):\n    n, m = list(map(int, sys.stdin.readline().split()))\n    imp = list(map(int, sys.stdin.readline().split()))\n    # idx \ubcc0\uc218 \uc0dd\uc131: \ubb38\uc11c\ub9c8\ub2e4 \uace0\uc720 \uc778\ub371\uc2a4\ub97c \uc0dd\uc131\n    idx = list(range(len(imp)))\n    # m\ubc88\uc9f8 \uc778\ub371\uc2a4\ub97c target\uc73c\ub85c \ub460\n    idx[m] = 'target'\n\n    # order \ucd08\uae30\ud654(\uc21c\uc11c)\n    order = 0\n\n    # while True\uc774\ubbc0\ub85c \ubb34\ud55c \ubc18\ubcf5\uc778\ub370 break\uac00 \uc788\uae30 \ub54c\ubb38\uc5d0 if\uc808\uc5d0 \uac78\ub9ac\ub294 \uc870\uac74\uc774 \ub9de\uc73c\uba74 \ubc18\ubcf5\uc774 \uc911\ub2e8\ub41c\ub2e4.\n    while True:\n         # \ub9cc\uc57d imp\uc758 \uccab \ubc88\uc9f8 \uac12\uc774 \uac00\uc7a5 \ud06c\ub2e4\uba74 order\ub97c \ud558\ub098 \uc99d\uac00\uc2dc\ud0a8\ub2e4.\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # idx\uc758 \uccab \ubc88\uc9f8 \uac12\uc774 target\uc774\ub77c\uba74\n            if idx[0]=='target':\n                # order\ub97c \ucd9c\ub825\ud558\uace0 \ubc18\ubcf5\uc744 \uc911\ub2e8\ud55c\ub2e4.\n                print(order)\n                break\n            # \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 imp\uc640 idx\uc758 \uccab \ubc88\uc9f8 \uac12\uc744 \uc81c\uac70\ud55c\ub2e4.\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n         # idx\uc758 \uccab\ubc88\uc9f8 \uac12\uc774 target\uc774 \ub420 \ub54c\uae4c\uc9c0 \ubc18\ubcf5\ub41c\ub2e4.\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))  "}, {"id": 21619488, "name": "\ud45c\ud558\uc900", "x": -11.70943832397461, "y": -22.434144973754883, "label": 0, "group": 10, "code": "testcase = int(input())\nfor i in range(testcase):\n    queue = []\n    count = 0\n    docx_total, target_index = map(int, input().split())\n    prior = input().split()\n    for i in range(docx_total):\n        queue.append(int(prior[i]))\n    while True:\n        if max(queue) > queue[0]:\n            if target_index == 0:\n                target_index = len(queue) - 1\n                temp = queue[0]\n                del queue[0]\n                queue.append(temp)\n            else:\n                target_index -= 1\n                temp = queue[0]\n                del queue[0]\n                queue.append(temp)\n        elif max(queue) == queue[0]:\n            if target_index == 0:\n                print(count + 1)\n                break\n            else:\n                target_index -= 1\n                count += 1\n                del queue[0]"}, {"id": 26183996, "name": "\ud45c\uc18c\uc601", "x": -12.502167701721191, "y": -26.432092666625977, "label": 0, "group": 10, "code": "case = int(input())\n\nfor i in range(case) :\n    a, b = map(int, input().split())\n    count = 1\n    \n    lst = list(map(int, input().split()))\n\n    while 1 :\n        if lst[0] != max(lst) :\n            lst.append(lst[0])\n            lst.remove(lst[0])\n            # count += 1\n            if b == 0 :\n                b = int(len(lst)-1)\n                continue\n            else :\n                b -= 1\n        else :\n            if b == 0 :\n                print(count)\n                break\n            else :\n                lst.remove(lst[0])\n                count += 1\n                b -= 1\n                \n                \n                    \n            \n\n    \n"}, {"id": 16863148, "name": "\uc720\uc18c\uc601", "x": -3.3836870193481445, "y": -26.236642837524414, "label": 0, "group": 11, "code": "N = int(input())\nfor i in range(N):\n    aNumber, theNumber = map(int, input().split())\n    importanceList = list(map(int, input().split()))\n    answer = 0\n    while theNumber >= 0:\n        firstPopFlag = 0\n        for c in range(len(importanceList)):\n            if importanceList[0] < importanceList[c]:\n                temp = importanceList.pop(0)\n                importanceList.append(temp)\n                theNumber -= 1\n                if theNumber < 0:\n                    theNumber = len(importanceList)-1\n                break\n            if c == len(importanceList)-1:\n                firstPopFlag = 1\n        if firstPopFlag == 1:\n            importanceList.pop(0)\n            theNumber -= 1\n            answer += 1\n\n    print(answer)"}, {"id": 26680803, "name": "\ub0a8\uad81\ud6a8\uacbd", "x": 12.319284439086914, "y": -12.212257385253906, "label": 0, "group": 11, "code": "import sys\n\nclass node:\n    def __init__(self, key):\n        self.key = key\n        self.mark = None\n\nfor _ in range(int(input())):\n    n, tar = map(int, input().split())\n    data = list(map(int, sys.stdin.readline().split()))\n    d = list(map(lambda x: node(x), data))\n    d[tar].mark = True\n    seq = sorted(data, reverse=True)\n    res, s_flag, u = 1, 0, d[0]\n    while not u.mark or seq[s_flag] != u.key:\n        if u.key == seq[s_flag]:\n            res += 1\n            s_flag += 1\n        else:\n            d.append(u)\n        del d[0]\n        u = d[0]\n    print(res)"}, {"id": 44708418, "name": "\uc8fc\uc9c4\ubaa8", "x": 20.16661262512207, "y": 7.1878743171691895, "label": 0, "group": 11, "code": "for i in range(int(input())):\n    order = []\n    n, m = map(int, input().split())\n    imp = list(map(int, input().split()))\n    idx = [0] * n\n    idx[m] = 1\n    count = 0\n\n    while 1:\n        if imp[0] == max(imp):\n            count += 1\n            if idx[0] == 1:\n                print(count)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 17741413, "name": "\uac15\uc9c0\uc12d", "x": -16.176626205444336, "y": -4.1569952964782715, "label": 0, "group": 11, "code": "def docsCheck():\n    global docs, cnt\n    L = len(docs)\n    for i in range(1, L):\n        if docs[i][0] > docs[0][0]:\n            temp = docs.pop(0)\n            docs.append(temp)\n            return False\n    else:\n        temp = docs.pop(0)\n        cnt += 1\n        return temp\n\nT = int(input())\n\nfor tc in range(T):\n    N, M = map(int, input().split())\n    importance = list(map(int, input().split()))\n    docs = []\n\n    for i in range(N):\n        docs.append([importance[i], i])\n\n    if N == 1:\n        print(1)\n    else:\n        cnt = 0\n        while True:\n            result = docsCheck()\n            if result != False:\n                if result[1] == M:\n                    print(cnt)\n                    break"}, {"id": 19152922, "name": "\ucd5c\uc900\ud604", "x": -18.18604850769043, "y": -25.17779541015625, "label": 0, "group": 12, "code": "cases = int(input())\n\nfor c in range(cases):\n    N, M = map( int , input().split() )\n    q = list(map( int, input().split() ))\n    \n    m_idx = M; loop = 0\n    \n    while(len(q) != 0):\n        loop += 1\n        for i in q[0:q.index(max(q))]:\n            q.append(q.pop(q.index(i)))\n            #print(q)\n            if m_idx == 0:\n                m_idx = len(q)-1\n            else :\n                m_idx -= 1\n            #print(m_idx)\n\n            \n        if m_idx == 0:\n            cnt = loop\n            #print('cnt')\n                    \n        q.pop(0)\n        m_idx -= 1\n        #print('end')\n    print(cnt)"}, {"id": 18979908, "name": "\uc720\uc2b9\ud638", "x": 24.865657806396484, "y": 9.892926216125488, "label": 0, "group": 12, "code": "t = int(input())\n\nfor i in range(t):\n    n,m = map(int, input().split())\n    importance = list(map(int, input().split()))\n\n    dict = {}\n    for i in range(0, len(importance)):\n        dict[i] = importance[i]\n    \n    queue = [i for i in range(n)]\n\n\n    cnt = 1\n    result = [0] * n\n\n    while queue:\n        first = queue.pop(0)\n        if dict[first] == max(importance):\n            importance.remove(max(importance))\n            result[first] = cnt\n            cnt += 1\n        else:\n            queue.append(first)\n    \n    print(result[m])\n"}, {"id": 26489635, "name": "\ubc15\uc720\ud658", "x": 6.1853532791137695, "y": 14.778218269348145, "label": 0, "group": 12, "code": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    q = []\n    for x in input().split():\n        q.append((int(x), True if m == 0 else False))\n        m -= 1\n    c = 1\n    while len(q):\n        if max(q)[0] != q[0][0]:\n            q.append(q[0])\n        else:\n            if q[0][1]:\n                print(c)\n                break\n            c += 1\n        del q[0]"}, {"id": 22477428, "name": "\uac15\ud61c\uc815", "x": -6.507732391357422, "y": -18.691152572631836, "label": 0, "group": 12, "code": "import sys\n\n\n#sys.stdin = open('input.txt', 'r')\n\ncase = int(input())\n\nfor x in range(case):\n    n,m = list(map(int, input().split(' ')))\n    data = list(map(int, input().split(' ')))\n    reverse = sorted(data,reverse=True)\n    count = 0\n    while data:\n        tmp = data.pop(0)\n        if tmp == reverse[0]:\n            reverse.pop(0)\n            count+=1\n            if m==0:\n                break\n            else:\n                m-=1\n                \n        else:\n            data.append(tmp)\n            if m == 0:\n                m = len(data)-1\n            else:\n                m-=1\n    print(count)"}, {"id": 31635757, "name": "\ub0a8\ubcf4\ub77c", "x": -16.236265182495117, "y": -18.320783615112305, "label": 0, "group": 13, "code": "import sys\n\nA = int(sys.stdin.readline())\nresult = []\nfor i in range(A):\n    n,m = map(int, sys.stdin.readline().split())\n    k = list(map(int,sys.stdin.readline().split()))\n   \n    a = 1\n    if n ==1:\n        result.append(a)\n    else :\n        for i in range(n):\n            if m == k.index(max(k)):\n                result.append(a)\n                break\n            else :\n                for i in range(k.index(max(k))+1):\n                    k.append(k[0])\n                    k.pop(0)\n                    if m == 0:\n                        m = len(k)-1\n                    else :\n                        m -=1\n                k.pop()\n                a += 1\n            \nfor i in result:\n    print(i)"}, {"id": 31452353, "name": "\ub0a8\uc8fc\ud601", "x": 20.71842384338379, "y": 11.168935775756836, "label": 0, "group": 13, "code": "import sys\n\ntestCases = int(sys.stdin.readline().strip())\n\nfor i in range(testCases):\n    n, index = tuple(map(int, sys.stdin.readline().strip().split()))\n\n    queue = list(map(int, sys.stdin.readline().strip().split()))\n\n    cnt = 0\n    while True:\n        max_num = max(queue)\n\n        item = queue[0]\n        queue = queue[1:]\n        if item == max_num and index == 0:\n            cnt += 1\n            break\n        elif item == max_num:\n            cnt += 1\n        else:\n            queue.append(item)\n\n        index -= 1\n        if index < 0:\n            index += len(queue)\n\n    sys.stdout.write(str(cnt) + '\\n')\n"}, {"id": 22196099, "name": "\ud0c1\ub300\ud76c", "x": -12.950703620910645, "y": 14.752544403076172, "label": 0, "group": 13, "code": "for _ in range(int(input())):\n    arr_size, index = map(int, input().split(' '))\n    q = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(arr_size)]\n    chk[index] = 'T' #\ud0c0\uac9f \uc124\uc815\n\n    count = 0\n    while True:\n        if q[0] == max(q): #\ud604\uc7ac \uac12\uc774 \ucd9c\ub825 \ub300\uc0c1\uc774\ub77c\uba74\n            count += 1\n            if chk[0] == 'T': #\ud0c0\uac9f\uc774 \ub9de\ub294\uc9c0\n                print(count)\n                break\n            else:\n                q.pop(0)\n                chk.pop(0)\n        else:\n            q.append(q.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 26947799, "name": "\ubc31\uc724\uc218", "x": 5.986632823944092, "y": -25.226051330566406, "label": 0, "group": 13, "code": "import sys\n\ndef main():\n\n    case_count = int(sys.stdin.readline())\n    cases = []\n    for i in range(case_count):\n        n, m = map(int, sys.stdin.readline().split())\n        seq = list(map(int, sys.stdin.readline().split()))\n        cases.append((m, seq))\n\n    for case in cases:\n        seq = [num for num in enumerate(case[1])]\n        m = case[0]\n\n        pop_counter = 0\n        while(len(seq) > 0):\n            appended = False\n            k = seq.pop(0)\n\n            for t in seq:\n                if k[1] < t[1]:\n                    appended = True\n                    seq.append(k)\n                    break\n\n            if appended != True:\n                pop_counter += 1\n\n            if k[0] == m and appended == False:\n                print(pop_counter)\n                break\n        \n\nif __name__ == '__main__':\n    main()\n"}, {"id": 7188950, "name": "\ud5c8\uba85\uc120", "x": -5.684055328369141, "y": 7.7728142738342285, "label": 0, "group": 14, "code": "n = int(input())\n\ndata1 = []\ndata2 = []\nfor i in range(n):\n    data1.append(input())\n    data2.append(input())\n\nfor j in range(n):\n    N = int(data1[j].split(' ')[0])\n    M = int(data1[j].split(' ')[1])\n    priority = []\n    for k in range(N):\n        priority.append(int(data2[j].split(' ')[k]))\n    p_index = list(range(N))\n    v = 0\n    while True:\n        if priority[0] == max(priority):\n            priority.pop(0)\n            m = p_index.pop(0)\n            v = v + 1\n            if m == M:\n                print(v)\n                break\n        else:\n            priority.append(priority.pop(0))\n            p_index.append(p_index.pop(0))"}, {"id": 26865056, "name": "\ubc31\ud604\uc790", "x": -23.0964412689209, "y": -10.347879409790039, "label": 0, "group": 14, "code": "def merge_sort(array):\n    n = len(array)\n    if n <= 1:\n        return\n    mid = n // 2\n    g1 = array[:mid]\n    g2 = array[mid:]\n    merge_sort(g1)\n    merge_sort(g2)\n\n    i1 = 0\n    i2 = 0\n    ia = 0\n    while i1 < len(g1) and i2 < len(g2):\n        if g1[i1] > g2[i2]:\n            array[ia] = g1[i1]\n            i1 += 1\n        else:\n            array[ia] = g2[i2]\n            i2 += 1\n        ia += 1\n\n    for i in range(i1, len(g1)):\n        array[ia] = g1[i]\n        ia += 1\n    for i in range(i2, len(g2)):\n        array[ia] = g2[i]\n        ia += 1\n\nn = int(input())\n\nfor _ in range(n):\n    m, printer = map(int, input().split())\n    priorities = list(map(int, input().split()))\n    queue = []\n    for i in range(m):\n        queue.append((i, priorities[i]))\n    merge_sort(priorities)\n    count = 0\n    index = 0\n    while True:\n        value = queue.pop(0)\n        if value[1] == priorities[index]:\n            index = (index + 1) % m\n            count += 1\n            if value[0] == printer:\n                break\n        else:\n            queue.append(value)\n    print(count)"}, {"id": 49165890, "name": "\uc774\ubbfc\ud658", "x": -3.5932507514953613, "y": 6.402178764343262, "label": 0, "group": 14, "code": "#1966 - \ud504\ub9b0\ud130 \ud050\n\n\nn = int(input())\nqueue = [0 for k in range(n)]\nfor a in range(n):\n    l,k = map(int, input().split())\n    L = list(map(int, input().split()))\n    i = 0\n    M = max(L)\n    found = False\n    while L[k] != 0:\n        while M in L:\n            if L[i] == M:\n                queue[a] += 1\n                L[i] = 0\n                if i == k:\n                    break\n            else:\n                i += 1\n            i %= l\n        M -= 1\n\nfor i in queue:\n    print(i)"}, {"id": 20183330, "name": "\uace0\uc724\uc625", "x": 29.330467224121094, "y": 6.134298324584961, "label": 0, "group": 14, "code": " \nfor _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))\n"}, {"id": 18930578, "name": "\uc11c\ud604\uc9c4", "x": -3.259066581726074, "y": -28.27190399169922, "label": 0, "group": 15, "code": "from sys import stdin\n\ncase = int(stdin.readline())\n\nfor c in range(case):\n    docu_count, target_inx = [int(i) for i in stdin.readline().split()]\n    documents = [int(i) for i in stdin.readline().split()]\n    p_num = 0\n    while len(documents) != 0:\n        p = documents.pop(0)\n        for d in documents:\n            if p < d:\n                documents.append(p)\n                if target_inx == 0:\n                    target_inx = len(documents) - 1\n                else:\n                    target_inx -= 1\n                break\n        else:\n            p_num += 1\n            if target_inx == 0:\n                print(p_num)\n                break\n            else:\n                target_inx -= 1\n"}, {"id": 21078031, "name": "\uac15\ud558\ub298", "x": 16.395742416381836, "y": 23.480165481567383, "label": 0, "group": 15, "code": "t=int(input())\nfor i in range(t):\n n,m=map(int,input().split())\n p=[*enumerate(map(int,input().split()))]\n c=0\n while len(p):\n  t=max(p,key=lambda x:x[1])\n  while p[0][1]!=t[1]:\n   p.append(p.pop(0))\n  c+=1\n  o=p.pop(0)\n  if o[0]==m:\n   break\n print(c)"}, {"id": 37301463, "name": "\uae40\uc9c0\ud6c8", "x": 24.125652313232422, "y": 12.42923641204834, "label": 0, "group": 15, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor i in range(t):\n    N, check = map(int, input().split())\n    M = list(map(int, input().split()))\n    idx = list(range(len(M)))\n    idx[check] = 'target'\n\n    for j in range(N):\n        while max(M) != M[0]:\n            M.append(M.pop(0))\n            idx.append(idx.pop(0))\n\n        M.pop(0)\n        if idx[0] == 'target':\n            print(j + 1)\n        idx.pop(0)"}, {"id": 38435319, "name": "\uc774\uc815\uc7ac", "x": 21.023818969726562, "y": 10.192069053649902, "label": 0, "group": 15, "code": "from sys import stdin\n\n\ntest_cases = int(stdin.readline())\n\nfor _ in range(test_cases):\n    n, m = list(map(int, stdin.readline().split()))\n    important = list(map(int, stdin.readline().split()))\n    idx = list(range(len(important)))\n    idx[m] = \"target\"\n\n    order = 0\n\n    while True:\n        if important[0] == max(important):\n            order += 1\n\n            if idx[0] == \"target\":\n                print(order)\n                break\n            else:\n                important.pop(0)\n                idx.pop(0)\n        else:\n            important.append(important.pop(0))\n            idx.append(idx.pop(0))\n"}, {"id": 36386262, "name": "\uc774\uc2dc\uc5b8", "x": 5.09709358215332, "y": 8.614378929138184, "label": 0, "group": 16, "code": "from sys import stdin\n\ninput = lambda : stdin.readline().rstrip()\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        n_docs, highlight = map(int, input().split())\n        docs = list(map(int, input().split()))\n        print(sol(n_docs, highlight, docs))\n    return\n\ndef sol(n_docs, highlight, docs):\n    ans = 0\n    while True:\n        tray = docs[0]\n        if max(docs) > tray:\n            docs.pop(0)\n            docs.append(tray)\n            if highlight == 0:\n                highlight = len(docs)\n        else:\n            docs.pop(0)\n            ans += 1\n            if highlight == 0:\n                return ans\n        highlight -= 1\n\nif __name__ == \"__main__\":\n    main()"}, {"id": 47235592, "name": "\uc804\uc6b0\uc815", "x": -22.63689422607422, "y": -1.7416561841964722, "label": 0, "group": 16, "code": "\n\ndef print_selected_docu():\n    global importance, print_cnt\n    flag = 0\n\n    while flag == 0:\n        important_docu_value = -1\n        important_docu_index = -1\n\n        for i in range(importance,len(docu_list)):\n            if docu_list[i] > important_docu_value:\n                important_docu_value = docu_list[i]\n                important_docu_index = i\n\n        for i in range(importance):\n            if docu_list[i] > important_docu_value:\n                important_docu_value = docu_list[i]\n                important_docu_index = i\n\n        if important_docu_index == selected_num :\n            flag = 1\n        else:\n            docu_list[important_docu_index] = -1\n            print_cnt +=1\n            importance = important_docu_index\n\n\ntest_case_num = int(input())\nfor test_case in range(test_case_num):\n    docu_num, selected_num = map(int,input().split(' '))\n    docu_list = list(map(int,input().split(' ')))\n    importance = 0\n    print_cnt = 1\n    print_selected_docu()\n    print(print_cnt)\n"}, {"id": 24906494, "name": "\uc1a1\uc0c1\uc900", "x": 24.075124740600586, "y": -6.998034954071045, "label": 0, "group": 16, "code": "T = int(input())\nfor _ in range(T):\n    N, target = map(int, input().split())\n    q = list(map(int, input().split()))\n\n    sorted_q = sorted(q, reverse=True)\n\n    i = 0\n    nth = 0\n    tn = q[target]\n    while True:\n        if q[i] == sorted_q[nth]:\n            nth += 1\n            if i == target:\n                break\n        i += 1\n        if i == N:\n            i = 0\n\n    print(nth)"}, {"id": 40400841, "name": "\uc720\uc624\uc131", "x": -20.094507217407227, "y": 15.268537521362305, "label": 0, "group": 16, "code": "import sys\n\ninput = sys.stdin.readline\n\ntest_cases = int(input())\n\nfor _ in range(test_cases):\n    n, m = list(map(int, input().split()))\n    imp = list(map(int, input().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n\n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0] == max(imp):\n            order += 1\n\n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0] == 'target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))\n# Question ?! \uc2dc\uac04 \ubcf5\uc7a1\ub3c4 \uac1c \uc2a4\ub808\uae30\uc77c\uac70\uac19\uc740\ub514\uc5ec\n"}, {"id": 36825690, "name": "\ub9c8\ub974\ucf54", "x": -24.25758934020996, "y": 24.90443992614746, "label": 0, "group": 17, "code": "num = int(input())\nfor i in range(num):\n    document_count, location = list(map(int,input().split()))\n    if document_count==1:\n        document=[int(input())]\n    else:\n        document=list(map(int,input().split()))\n\n    new_priorities = document # \uc0c8\ub85c\uc6b4 \ubc30\uc5f4 \uc0dd\uc131\n    highest_priority = max(new_priorities) # \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \ubb38\uc11c \uc120\ud0dd\n    my_document = document[location] # \ub0b4\uac00 \uc694\uccad\ud55c \ubb38\uc11c\n    my_index = location # \ub0b4\uac00 \uc18d\ud574\uc788\ub294 \ubb38\uc11c \uc704\uce58\n    cnt = 0 # \uc778\uc1c4 \ubc88\uc9f8\ub97c \ub354\ud574\uc904 \ubcc0\uc218 \uc0dd\uc131\n    high_index = 0  #\uc81c\uc77c \uc911\uc694\ud55c \ud504\ub9b0\ud130 \uc778\ub371\uc2a4\n\n    while highest_priority != my_document:\n        # \ud504\ub9b0\ud130\ub97c \ubf51\uae30 \uc704\ud574\uc120 \ud56d\uc0c1 \ubb38\uc11c \uc21c\uc11c\ub97c \uae30\uc5b5\ud574\uc57c\ud568\n        try:\n            high_index = new_priorities.index(highest_priority, high_index)\n        # \ub300\uae30 \ubaa9\ub85d\uc5d0 \uc5c6\uc744 \uacbd\uc6b0 \ub2e4\uc74c \uc21c\uc11c\ub85c \ub118\uc5b4\uac10\n        except:\n            high_index = new_priorities.index(highest_priority)\n        # \uc6b0\uc120\uc21c\uc704 \uc704\uce58\uac00 \ub0b4 \ubb38\uc11c \uc704\uce58\ubcf4\ub2e4 \ub4a4\uc5d0 \uc788\uc73c\uba74 \ub098\uc758 \ubb38\uc11c \uc704\uce58\ub294 \ubc14\ub00c\uc9c0 \uc54a\ub294\ub2e4.\n        if high_index > my_index:\n            new_priorities.pop(high_index)\n            highest_priority = max(new_priorities)\n            cnt += 1\n        # \uc55e\uc5d0 \uc788\uc744 \uacbd\uc6b0 \ub0b4 \ubb38\uc11c\ub294 \ud55c\uce78 \uc55e\uc73c\ub85c \uc774\ub3d9\n        else:\n            new_priorities.pop(high_index)\n            highest_priority = max(new_priorities)\n            my_index -= 1\n            cnt += 1\n\n    if high_index > my_index:\n        # high_index\ub97c \uae30\uc900\uc73c\ub85c \uc591\ucabd\uc73c\ub85c \ub098\ub220\uc11c my_document\uc640 \uac19\uc740 \uac12\ub4e4\uc744 \ube44\uad50\n        high_index_list = new_priorities[high_index:]\n        high_index_list = list(filter(lambda x: x == my_document, high_index_list))\n        my_index_list = new_priorities[:my_index]\n        my_index_list = list(filter(lambda x: x == my_document, my_index_list))\n        cnt += (len(high_index_list) + len(my_index_list))\n    elif high_index < my_index:\n        # high_index\uc640 my_index\uc758 \uc0ac\uc774 \uac12\uc73c\ub85c \uacc4\uc0b0\n        result_list = new_priorities[high_index:my_index]\n        result_list = list(filter(lambda x: x == my_document, result_list))\n        cnt += len(result_list)\n    print(cnt+1)\n"}, {"id": 5657759, "name": "\uc624\uc778\ud5e4", "x": 25.009017944335938, "y": 38.4493522644043, "label": 0, "group": 17, "code": "for _ in range(int(input())):\n\tsize, pos = map(int, input().split())\n\tqu = list(map(int, input().split()))\n\tnum = 1\n\twhile True:\n\t\tif max(qu) == qu[0]:\n\t\t\tif pos == 0:\n\t\t\t\tprint(num)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tnum += 1\n\t\t\t\tpos -= 1\n\t\t\t\tdel(qu[0])\n\t\telse:\n\t\t\tqu = qu[1:]+qu[0:1]\n\t\t\tpos -= 1\n\t\t\tif pos < 0:\n\t\t\t\tpos += len(qu)"}, {"id": 21365114, "name": "\uae40\uc8fc\ud601", "x": 21.615909576416016, "y": -5.538651466369629, "label": 0, "group": 17, "code": "T = int(input())\nfor _ in range(T):\n    n, p = map(int,input().split())\n    l = list(map(int,input().split()))\n    key = l[p]\n    l.insert(p+1,-1)\n    ans = 0\n    while 1:\n        #print(l)\n        M = max(l)\n        if key==M:\n            i = l.index(M)\n            if l[i+1]==-1: break\n        else:\n            i = 0\n            while 1:\n                if l[i]==M: break\n                i+=1\n        l = l[i+1:]+l[:i]\n        ans += 1\n    print(ans+1)"}, {"id": 30373761, "name": "\uc774\ub300\uc900", "x": 20.826282501220703, "y": 12.491151809692383, "label": 0, "group": 17, "code": "import sys\n\nn = int(input())\n\nfor _ in range(n):\n    length, idx = map(int, input().split())\n    temp_list = list(map(int, input().split()))\n    wanted_max = temp_list[idx]\n    #print(temp_list, length, idx)\n\n    answer = 0\n    while(1):\n        current_max = max(temp_list)\n        while(current_max != temp_list[0]):\n            temp_list = temp_list[1:] + [temp_list[0]]\n            if idx == 0: idx = len(temp_list) - 1\n            else: idx -= 1\n        if((max(temp_list) == wanted_max) and (idx == 0)):\n           break;\n        temp_list = temp_list[1:]; answer+= 1; idx -= 1\n     #   print(temp_list, answer, idx)\n    print(answer + 1)"}, {"id": 17137358, "name": "\ucd5c\uc5ec\uc9c4", "x": 0.24852228164672852, "y": -13.88944149017334, "label": 0, "group": 18, "code": "def printer(location, data):\n    index = list(range(0, len(data)))\n    count = 1\n    \n    while True:\n        max_importance = max(data)\n        if data[0] != max_importance:\n            data.append(data.pop(0))\n            index.append(index.pop(0))\n            \n        elif data[0] == max_importance:\n            if index[0] == location:\n                print(count)\n                break\n            else:\n                data.pop(0)\n                index.pop(0)\n                count += 1\n                \nsamples = int(input())\nfor ha in range(samples):\n    \n    length, location = list(map(int, input().split(' ')))\n    data = list(map(int, input().split(' ')))\n    printer(location, data)"}, {"id": 19883165, "name": "\uc815\uc740\uc2dd", "x": -21.326204299926758, "y": -8.529653549194336, "label": 0, "group": 18, "code": "testcase = int(input())\n\ndef test(a):\n    for i in range(1, len(a)):\n        if a[0] < a[i]:\n            return 1\n    return 0\n\ndef change():\n    a.append( a.pop(0) )\n    b.append( b.pop(0) )\n    \nfor i in range(testcase):\n    N, M = map(int, input().split())\n    a = list(map(int, input().split()))\n    k = a[M]\n    if len(a) == len(set(a)):\n        a.sort()\n        a.reverse()\n        print(a.index(k)+1)\n    else:\n        b = [i for i in range(N)]\n        s = 1\n        while True:\n            \n            while (test(a) != 0):\n                change()\n                \n            if b[0] == M:\n                print(s)\n                break\n            \n            a.pop(0)\n            b.pop(0)\n            s += 1"}, {"id": 40604303, "name": "\ud669\uc601\uadfc", "x": 5.634214878082275, "y": -17.030860900878906, "label": 0, "group": 18, "code": "import sys\nT=int(input())\nfor _ in range(T):\n    N,M=map(int,sys.stdin.readline().split())\n    queue=list(map(int,sys.stdin.readline().split()))\n    a=0\n    n=0\n    while True:\n        if queue[a]!=max(queue[a:]):\n            if a==M:\n                M+=len(queue[a:])\n            queue.append(queue[a])\n            a+=1\n        else:\n            n+=1\n            if a==M:\n                break\n            a+=1\n    print(n)"}, {"id": 20493103, "name": "\uc608\uc11d\ud76c", "x": -8.012773513793945, "y": 4.565858364105225, "label": 0, "group": 18, "code": "import sys\n\nqueue = []\npri = []\nans = 0\n\n\ndef queue_pop():\n    global queue, pri, ans\n    can_pop = True\n\n    for i in range(queue[0][1] + 1, 10):\n        if pri[i] != 0:\n            can_pop = False\n            break\n\n    if can_pop:\n        pri[queue[0][1]] -= 1\n        temp2 = queue[0][0]\n        queue.pop(0)\n        ans += 1\n        return temp2\n\n    else:\n        temp2 = queue[0]\n        queue.pop(0)\n        queue.append(temp2)\n        return -1\n\n\ncount = int(sys.stdin.readline().strip())\n\nfor i in range(count):\n    queue = []\n    ans = 0\n    pri = [0] * 10 # 1 ~ 9 \uc911\uc694\ub3c4\n\n    a, b = map(int, sys.stdin.readline().strip().split())\n\n    temp = list(map(int, sys.stdin.readline().strip().split()))\n\n    for index in range(a):\n        pri[temp[index]] += 1\n        queue.append((index, temp[index]))\n\n    while True:\n        if queue_pop() == b:\n            print(ans)\n            break\n\n\n"}, {"id": 32693390, "name": "\uc804\ub3c4\uc5f0 ", "x": -11.81096076965332, "y": -4.698750019073486, "label": 0, "group": 19, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    printer_q = list(map((lambda x : (int(x), False)), input().split()))\n    printer_q[M] = (printer_q[M][0], True)\n    \n    stop = False\n    sorted_q = []\n    last_printed_index, last_printed_index_temp = 0, 0\n    for i in range(9, 0, -1):\n        for j in range(len(printer_q)):\n            ind = (last_printed_index + j) % len(printer_q)\n            val = printer_q[ind]\n            if val[0] == i:\n                sorted_q.append(val)\n                last_printed_index_temp = ind\n                if val[1]:\n                    stop = True\n                    break\n        last_printed_index = last_printed_index_temp\n        if stop:\n            break\n    print(len(sorted_q))"}, {"id": 12691721, "name": "\ub0a8\uc601\uc120", "x": -17.91973114013672, "y": -16.414854049682617, "label": 0, "group": 19, "code": "import sys\ntest_num = int(sys.stdin.readline().rstrip())\nfor i in range(test_num):\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n    queue = list(sys.stdin.readline().rstrip().split())\n    queue = [int(i) for i in queue]\n    interest = queue[M]\n    order = 0\n    \n    while queue:\n    \n        important = max(queue)\n        \n        if (M == 0 and queue[0] == important):\n            order += 1\n            break\n        else:\n            pass\n        \n        if queue[0] != important:\n            queue.append(queue.pop(0))\n    \n        else:\n            queue.pop(0)\n            order += 1\n            if queue == []:\n                break\n            else:\n                pass\n    \n        M -= 1\n    \n        if M == -1:\n            M = len(queue) - 1\n        else:\n            pass\n    print(order)"}, {"id": 27339235, "name": "\ucc44\uc2dc\ub77c", "x": -15.032800674438477, "y": -21.032686233520508, "label": 0, "group": 19, "code": "case = int(input())\nans = list()\n\nfor i in range(case):\n    N, M = map(int, input().split())\n    importance = list(map(int, input().split()))\n    score = 0\n    pos = M\n\n    if N == 1:\n        ans.append(1)\n    else:\n        while True:\n            #print(importance, pos)\n\n            if importance[0] == max(importance):\n                del(importance[0])\n                score += 1\n                \n                if pos == 0:\n                    break\n                pos -= 1\n\n            else:\n                importance.append(importance[0])\n                del(importance[0])\n                if pos == 0:\n                    pos = len(importance) - 1\n                else:\n                    pos -= 1\n\n            if len(importance) == 0:\n                break\n\n        ans.append(score)\n\nfor _ in ans:\n    print(_)\n"}, {"id": 12225866, "name": "\uc2e0\ud604\ube48", "x": 28.539138793945312, "y": -4.642714023590088, "label": 0, "group": 19, "code": "test_m = int(input())\nfor i in range(test_m):\n    seq = 1\n    doc_num, target = input().split()\n    #for j in range(int(doc_num)):\n    target = int(target)\n    doc_num = int(doc_num)\n    line = input()\n    queue = line.split()\n    while(1):\n        #print(target,seq)\n        max_prior = max(queue)\n        poped = queue.pop(0)\n        if(int(poped) >= int(max_prior)):\n            if(target == 0):\n                print(seq)\n                break\n            seq += 1\n        else :\n            queue.append(poped)\n        #print(queue)\n        target -= 1\n        target = target % (len(queue))\n        #print(tokens)\n"}, {"id": 38241899, "name": "\uace0\uc11c\uc900", "x": 15.044233322143555, "y": 14.075413703918457, "label": 0, "group": 20, "code": "import sys\nT = int(sys.stdin.readline())\nQueue = []\nwhere = []\nloop = 1\nfor _ in range(T):\n    N, W = map(int, sys.stdin.readline().split())\n    Queue = list(map(int, sys.stdin.readline().split()))\n    while Queue:\n            wh = Queue.index(max(Queue))\n            where.append(wh)\n            Queue = Queue[wh + 1::] + Queue[0:wh:1]\n            if W == wh:\n                print(loop)\n                break\n            loop += 1\n            if wh > W:\n                W = N - loop + 1 - (wh - W)\n            else:\n                W = (W - wh) - 1\n    where = []\n    Queue = []\n    loop = 1"}, {"id": 25720777, "name": "\ubc31\uad11\ud76c", "x": -7.403676986694336, "y": -4.064698219299316, "label": 0, "group": 20, "code": "import sys\n\n\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    a,b = map(int,sys.stdin.readline().split())\n    pr = list(map(int, sys.stdin.readline().split()))\n    idx = [0 for i in range(a)]\n    idx[b] = 1\n    cnt = 0\n    \n    while True:\n        \n        if pr[0] == max(pr):\n            cnt+=1\n            if idx[0] == 1:\n                print(cnt)\n                break\n            else:\n                del pr[0]\n                del idx[0]\n\n        else:\n            pr.append(pr[0])\n            del pr[0]\n            idx.append(idx[0])\n            del idx[0]"}, {"id": 12914747, "name": "\uc815\uacbd\ud558", "x": -25.92546272277832, "y": -4.793004989624023, "label": 0, "group": 20, "code": "import sys\n\n\nT = int(sys.stdin.readline().rstrip())\nN = []\nM = []\nDOC_INDEX = []\nPRIORITY = []\nanswer = [0]*T\n\nfor i in range(0, T):\n    N_M = sys.stdin.readline().rstrip().split()\n    N.append(int(N_M[0]))\n    M.append(int(N_M[1]))\n    DOC_INDEX.append([j for j in range(0, N[i])])\n    p = list(map(int, sys.stdin.readline().rstrip().split()))\n    PRIORITY.append(p)\n\nfor i in range(0, T):\n    printed_no = 0\n    target_index = DOC_INDEX[i][M[i]]\n    P_LEN = N[i]\n    while PRIORITY[i]:\n        rearranged = False\n        for j in range(1, P_LEN):\n            if PRIORITY[i][0] < PRIORITY[i][j]:\n                PRIORITY[i].append(PRIORITY[i][0])\n                DOC_INDEX[i].append(DOC_INDEX[i][0])\n                del (PRIORITY[i][0])\n                del (DOC_INDEX[i][0])\n                rearranged = True\n                break\n        if not rearranged:\n            printed_no += 1\n            P_LEN -= 1\n            if DOC_INDEX[i][0] == target_index:\n                answer[i] = printed_no\n                break\n            del (PRIORITY[i][0])\n            del (DOC_INDEX[i][0])\n\nfor a in answer:\n    print(a)\n"}, {"id": 32004113, "name": "\uc2e0\uc138\uacbd", "x": 21.946542739868164, "y": 5.208950042724609, "label": 0, "group": 20, "code": "import sys\ntestCase = int(input())\n\nfor _ in range(testCase):\n    num, idx = tuple(map(int, sys.stdin.readline().split()))\n    arr = list(map(int, sys.stdin.readline().split()))\n    cnt = 0\n    max_arr = sorted(arr, reverse=True)\n    j = 0\n    k = 0\n    while True:\n        if arr[j] == max_arr[k]:\n            cnt += 1\n            if j == idx:\n                print(cnt)\n                break\n            k += 1\n        j = (j+1) % num"}, {"id": 19938971, "name": "\uc0ac\uacf5\ubcf4\uc601", "x": 25.13149070739746, "y": 7.058424949645996, "label": 0, "group": 21, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    N, M = map(int, input().split())\n    priority = [int(x) for x in input().split()]\n    queue = [(i, p) for i, p in enumerate(priority)]\n    \n    count = 0\n    \n    while True:\n        max_value = max(queue, key=lambda x:x[1])[1]\n        \n        while queue[0][1] != max_value:\n            queue.append(queue.pop(0))\n        \n        doc = queue.pop(0)\n        \n        if doc[0] == M:\n            count += 1\n            print(count)\n            break\n            \n        else:\n            count += 1"}, {"id": 12286121, "name": "\uc774\uc131\uc7ac", "x": 2.6921181678771973, "y": -17.889381408691406, "label": 0, "group": 21, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    queue = input().split()\n    queue = [int(i) for i in queue]\n    count = 1\n    while queue:\n        if queue[0] == max(queue):\n            if m == 0:\n                print(count)\n                break\n            else:\n                queue = queue[1:]\n                m -= 1\n                count += 1\n        else:\n            queue = queue[1:] + [queue[0]]\n            if m == 0:\n                m = len(queue) - 1\n            else:\n                m -= 1"}, {"id": 19664812, "name": "\ud558\uc601\ube48", "x": 7.865142822265625, "y": -1.5550541877746582, "label": 0, "group": 21, "code": "case = int(input())\nfor j in range(case):\n    n, m = map(int,input().split())\n    imp = list(map(int,input().split()))\n    queue = [0 for i in range(n)]\n    queue[m] = 1\n    count = 0\n    while True:\n        if imp[0] == max(imp):\n            count += 1\n            if queue[0] == 1:\n                print(count)\n                break\n            else:\n                del imp[0]\n                del queue[0]\n        else:\n            imp.append(imp.pop(0))\n            queue.append(queue.pop(0))"}, {"id": 5047391, "name": "\uc124\uc778\uc6a9", "x": 25.909955978393555, "y": 38.790626525878906, "label": 0, "group": 21, "code": "T = int(input())\nfor i in range(0,T):\n\tinfo = list(map(int,input().split()))\n\tQueue = list(map(int,input().split()))\n\tQueue_ori = [0 for i in range(info[0])]\n\tfor j in range(0,info[0]):\n\t\tQueue_ori[j] = [Queue[j],j]\n\tcnt = 0;\n\twhile(True):\n\t\tif(max(Queue) == Queue[0]):\n\t\t\tcnt = cnt +1\n\t\t\tif(Queue_ori[0][1] == info[1]):\n\t\t\t\tprint(cnt)\n\t\t\t\tbreak;\n\t\t\telse:\n\t\t\t\tdel Queue[0]\n\t\t\t\tdel Queue_ori[0]\n\t\telse:\n\t\t\tQueue.append(Queue[0])\n\t\t\tQueue_ori.append(Queue_ori[0])\n\t\t\tdel Queue[0]\n\t\t\tdel Queue_ori[0]\n"}, {"id": 19756747, "name": "\uc784\uc601\uc625", "x": -27.112436294555664, "y": 2.3590011596679688, "label": 0, "group": 22, "code": "Case = int(input())\n\ndef priority_print(queue, M, print_count):\n    priority = max(queue.values())\n    \n    for key, item in queue.items():\n        if(priority == item):\n            if(M == key):\n                return print_count\n            else:\n                queue.pop(key)\n                return priority_print(queue, M, print_count + 1)\n        else:\n            cur_key = key\n            cur_item = item\n            queue.pop(cur_key)\n            queue.update({cur_key: cur_item})\n            return priority_print(queue, M, print_count)\n\nfor _ in range(Case):\n    N, M = map(int, input().split())\n    \n    if(N == 1):\n        dummy = input()\n        print(1)\n        continue\n    \n    num_list = map(int, input().split())\n    \n    queue = dict()\n    for i, num in enumerate(num_list):\n        queue[i] = num\n        \n    print(priority_print(queue, M, 1))"}, {"id": 22154622, "name": "\ub178\uc815\uc8fc", "x": 13.125420570373535, "y": 16.468141555786133, "label": 0, "group": 22, "code": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n    file, idx = map(int, input().split())\n    weight = list(map(int, input().split()))\n\t\n    cnt = 0\n    pop = 0\n    while weight:\n\t    if weight[cnt] == max(weight[cnt:]):\n\t        pop += 1\n\t        if cnt == idx:\n\t            print(pop)\n\t            break\n\t        cnt += 1\n\t    else:\n\t        if cnt == idx:\n\t            idx += len(weight) - cnt\n\t        weight.append(weight[cnt])\n\t        cnt += 1"}, {"id": 35252491, "name": "\ud5c8\uc11c\uc724", "x": 0.7454510927200317, "y": 4.173649787902832, "label": 0, "group": 22, "code": "case = int(input())\nresult = []\nfor i in range(case):\n    n, m = list(map(int, input().split()))\n    li = list(map(int, input().split()))\n    tmp = list(range(len(li)))\n    tmp[m] = 'target'\n\n    order = 0\n    while True:\n        if li[0] == max(li):\n            order += 1\n\n            if tmp[0] == 'target':\n                result.append(order)\n                break\n\n            else:\n                li.pop(0)\n                tmp.pop(0)\n\n        else:\n            li.append(li.pop(0))\n            tmp.append(tmp.pop(0))\n\nfor i in result:\n    print(i)"}, {"id": 15368995, "name": "\uc6d0\ube48", "x": 11.642681121826172, "y": 14.781882286071777, "label": 0, "group": 22, "code": "import sys\n\ncase = int(input())\n\nfor _ in range(case):\n    N, M = map(int, input().split())\n    print_list = list(map(int, input().split()))\n    priority_docs = []\n    result = [0 for _ in range(N + 1)]\n    queue = [i for i in range(N)]\n    \n    for doc in print_list:\n        priority_docs.append(doc)\n    \n    sequence = 1\n    while queue:\n        if print_list[queue[0]] == max(priority_docs):\n            priority_docs.remove(max(priority_docs))\n            result[queue.pop(0)] = sequence\n            sequence += 1\n        else:\n            queue.append(queue.pop(0))              \n    print(result[M])"}, {"id": 15608562, "name": "\uc124\uc2b9\ud61c", "x": -6.426342487335205, "y": -0.076449453830719, "label": 0, "group": 23, "code": "import sys\n\nT = int(sys.stdin.readline())\nwhile T:\n    N, idx = map(int, sys.stdin.readline().split(' '))\n    q = list(map(int, sys.stdin.readline().split(' ')))\n    c = 1\n    while q:\n        if q[0] != max(q):\n            q.append(q[0])\n            del q[0]\n            idx -= 1\n        elif q[0] == max(q) and idx == 0:\n            print(c)\n            c += 1\n            break\n        elif q[0] == max(q):\n            del q[0]\n            idx -= 1\n            c += 1\n        if idx == -1: idx = len(q) - 1\n    T -= 1"}, {"id": 41894313, "name": "\ub178\uc9c4\ud638", "x": 3.934332847595215, "y": -14.761098861694336, "label": 0, "group": 23, "code": "test_case = int(input())\nresult_list = []\nfor _ in range(test_case):\n    num, seq = map(int, input().split())\n    queue = list(map(int, input().split()))\n    result = 0\n    while True:\n        if queue[0] == max(queue):\n            queue.pop(0)\n            result+=1\n            if seq == 0:\n                result_list.append(result)\n                break\n        else:\n            queue.append(queue.pop(0))\n        if seq == 0:\n            seq = len(queue)-1\n        else:\n            seq -= 1\nfor i in result_list:\n    print(i)"}, {"id": 46146312, "name": "\uc870\uc740\uc9c0", "x": -15.489033699035645, "y": -15.922935485839844, "label": 0, "group": 23, "code": "nn = int(input())\nresult = []\nfor i in range(nn):\n    ms, qmn = map(int,input().split())\n    q = list(map(int,input().split()))\n    fl = len(q)\n    p = qmn\n    a = 'F'\n    while a=='F':\n        m = max(q)\n        while q[0]!=m:\n            q.append(q.pop(0))\n            if p>0:\n                p=p-1\n            else:\n                p=len(q)-1\n        if p==0:\n            result.append(fl-len(q)+1)\n            a='T'\n            break\n        q.pop(0)\n        if p>0:\n            p=p-1\n        else:\n            p=len(q)-1\nfor i in range(nn):\n    print(result[i])"}, {"id": 47995498, "name": "\ubc15\uc2e0\ud61c", "x": 8.2730073928833, "y": 16.82514762878418, "label": 0, "group": 23, "code": "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n, i = [*map(int,sys.stdin.readline().split())]\n    priors = [*map(int,sys.stdin.readline().split())]\n    tags = list(range(n))\n    count = 0\n    while 1:\n        count += 1\n        j = priors.index(max(priors))\n        if tags[j]==i: print(count); break\n        priors = priors[j:]+priors[:j]; del priors[0]\n        tags = tags[j:]+tags[:j]; del tags[0]"}, {"id": 20305442, "name": "\ud55c\ucc44\uc601", "x": -11.449292182922363, "y": 18.372098922729492, "label": 0, "group": 24, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    n, m = list(map(int, input().split(' ')))\n    queue = list(map(int, input().split(' ')))\n    #enumerate : \uc778\ub371\uc2a4 \ubc88\ud638\uc640 \uceec\ub809\uc158\uc758 \uc6d0\uc18c\ub97c tuple\ud615\ud0dc\ub85c \ubc18\ud658\n    queue_idx = [(i, idx) for idx, i in enumerate(queue)]\n    count = 0\n    while True:\n        if queue_idx[0][0] == max(queue):\n            count += 1\n            if queue_idx[0][1] == m:\n                print(count)\n                break\n            else:\n                queue_idx.pop(0)\n                queue.pop(0)\n        else:\n            queue_idx.append(queue_idx.pop(0))\n            queue.append(queue.pop(0))"}, {"id": 47959803, "name": "\ubc15\uc6a9\ud558", "x": -19.237417221069336, "y": -11.828827857971191, "label": 0, "group": 24, "code": "from sys import stdin\n\ncases = int(stdin.readline().strip())\nfor _ in range(cases):\n    N,M = map(int,stdin.readline().strip().split())\n    docu = tuple(map(int,stdin.readline().strip().split()))\n    target = sorted(set([i for i in set(docu) if i>=docu[M]]),reverse=True)\n    orders = [None]*N\n    order = 1\n    last = 0\n    tmp = 0\n    \n    for i in target:\n        for j in range(last,N):\n            if docu[j] == i:\n                orders[j] = order\n                order += 1\n                tmp = j\n                \n        for j in range(0,last):\n            if docu[j] == i:\n                orders[j] = order\n                order += 1\n                tmp = j\n\n        last = tmp\n    \n    print(orders[M])"}, {"id": 30049156, "name": "\ucd94\uc0c1\ubbf8", "x": 12.343774795532227, "y": -8.295217514038086, "label": 0, "group": 24, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    arr = input().split()\n\n    queue = []\n    value = sorted(arr, reverse=True)\n\n    for i in range(N):\n        queue.append([i, arr[i]])\n\n    i = 0\n    cnt = 1\n    while True:\n        index, num = queue.pop(0)\n        if num == value[i]:\n            if index == M:\n                break\n            i += 1\n            cnt += 1\n        else:\n            queue.append([index, num])\n\n    print(cnt)"}, {"id": 24706899, "name": "\uae40\ud76c\uc815", "x": 9.894092559814453, "y": -5.402880668640137, "label": 0, "group": 24, "code": "a = int(input())\nfor i in range(a) :\n    n, m = map(int, input().split())\n    l = list(map(int, input().split()))\n    ll = [False] * n\n    ll[m] = True\n    p = 1\n    while True :\n        k = l.index(max(l))\n        if k != 0 :\n            l = l[k:]+l[:k]\n            ll = ll[k:] + ll[:k]\n        l.pop(0)\n        if ll.pop(0) :\n            print(p)\n            break\n        p += 1"}, {"id": 29077681, "name": "\uc0ac\uacf5\ud76c\uc724", "x": -7.421586036682129, "y": -17.671329498291016, "label": 0, "group": 25, "code": "num = int(input())\nN,M,importances=[],[],[]\nfor _ in range(num):\n    n, m = list(map(int, input().split()))\n    importance = list(map(int, input().split()))\n    N.append(n)\n    M.append(m)\n    importances.append(importance)\n\nfor i in range(num):\n    n, m, importance = N[i], M[i], importances[i]\n    count = 0\n\n    while 1:\n        most = max(importance)\n        if importance[0] >= most:\n            importance.pop(0)\n            count += 1\n            if m==0:\n                break\n        else:\n            importance.append(importance.pop(0))\n            if m==0:\n                m=len(importance)-1\n                continue\n        m-=1\n\n    print(count)"}, {"id": 27222609, "name": "\uc2e0\uc724\uc8fc", "x": 26.68597984313965, "y": 16.29584312438965, "label": 0, "group": 25, "code": "\"\"\"\n3\n1 0\n5\n4 2\n1 2 3 4\n6 0\n1 1 9 1 1 1\n\n\"\"\"\n\nn = int(input())\n\nfor _ in range(n):\n    number_of_doc, wanted = map(int, input().split())\n    queue = list(enumerate(list(map(int, input().split()))))\n    cnt = 0\n    find = False\n    most_important = max(queue, key=lambda x: x[1])[1]\n\n    while not find:\n        first_in = queue.pop(0)\n        if first_in[1] == most_important:\n            cnt += 1\n            if first_in[0] == wanted:\n                find=True\n            else:\n                most_important = max(queue, key=lambda x: x[1])[1]\n        else:\n            queue.append(first_in)\n    print(cnt)\n        \n"}, {"id": 11323404, "name": "\uae40\uc218\ud604", "x": 26.134004592895508, "y": -2.483156681060791, "label": 0, "group": 25, "code": "import sys\nfor x in range(int(input())):\n    n, m = map(int, sys.stdin.readline().split())\n    printerque = [int(x) for x in sys.stdin.readline().split()]\n    count = 0\n    while printerque:\n        if printerque[0] < max(printerque):\n            printerque.append(printerque.pop(0))\n            m = (m - 1 + len(printerque)) % len(printerque)\n        elif printerque.index(max(printerque)) == m:\n            count = count + 1\n            break\n        else:\n            printerque.pop(0)\n            count = count + 1\n            m = m - 1\n    print(count)\n"}, {"id": 27188841, "name": "\uc548\ubcf4\ud604", "x": -0.3340190649032593, "y": -24.741514205932617, "label": 0, "group": 25, "code": "for _ in range(int(input())):\n    a,index_Q = map(int,input().split())\n    lst = list(map(int,input().split()))\n    count = 0\n\n    while 1:\n        if max(lst) == lst[0]:\n            if index_Q == 0:\n                count += 1\n                break\n            del lst[0]\n            count += 1\n            index_Q -= 1\n        \n        else:\n            if index_Q == 0:\n                index_Q = len(lst)\n            lst.append(lst[0])\n            del lst[0]\n            index_Q -= 1\n\n    print(count)"}, {"id": 39971549, "name": "\ub178\ud76c\uc6b1", "x": 20.887441635131836, "y": 15.028467178344727, "label": 0, "group": 26, "code": "# https://www.acmicpc.net/problem/1966\n# Data structure\nimport sys\n\ninput = sys.stdin.readline\nT = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    data = list(map(int, input().split()))\n    data_idx = [i for i in range(N)]\n    data_idx[M] = 'M'\n    count = 0\n    while count < N:\n        if max(data) == data[0]:\n            count += 1\n            if data_idx[0] == 'M':\n                print(count)\n                break\n            data.pop(0)\n            data_idx.pop(0)\n        else:\n            data.append(data.pop(0))\n            data_idx.append(data_idx.pop(0))\n"}, {"id": 40457302, "name": "\uae40\uc131\ub839", "x": -22.865863800048828, "y": 18.04973030090332, "label": 0, "group": 26, "code": "# https://www.acmicpc.net/problem/1966\n\n# \ud050\ub97c \uc774\uc6a9\ud558\uc5ec \ud480\uc5b4\uc57c\ud55c\ub2e4.\n# \uc870\uc2ec\ud574\uc57c\ud560 \ubd80\ubd84\uc740 \uc6b0\uc120\uc21c\uc704\uac00 \ub0ae\uc740\ub370 \uc55e\uc11c \uc788\ub294 \uacbd\uc6b0 \uac00\uc7a5 \ub4a4\ub85c \ubc00\ub824\ub098\uc57c\ud55c\ub2e4.\n\ndef main():\n\n    testCaseNum = int(input())\n    for _ in range(testCaseNum):\n        pageCnt, targetPageIndex = map(int, input().split())\n        pageList = list(map(int, input().split()))\n\n        pageList = [i * 10 for i in pageList]\n        sortedPageList = sorted(pageList, reverse=True)\n        pageList[targetPageIndex] += 1\n\n        cnt = 0\n        while True:\n            if pageList[0] == sortedPageList[0] or (pageList[0] - 1) == sortedPageList[0]:\n                if pageList[0] % 10 == 1:\n                    cnt += 1\n                    break\n                pageList.pop(0)\n                sortedPageList.pop(0)\n                cnt += 1\n            else:\n                pageList.append(pageList.pop(0))\n\n        print(cnt)\n\n\nif __name__ == '__main__':\n    main()\n"}, {"id": 34723759, "name": "\uc7a5\uc724\uc625", "x": 25.562091827392578, "y": 38.41404724121094, "label": 0, "group": 26, "code": "t = int(input())\n\nfor _ in range(t):\n\tn, m = map(int, input().split())\n\tarr = list(map(int, input().split()))\n\tindex_arr = list(range(len(arr)))\n\ttarget = index_arr[m]\n\tcount = 0\n\twhile 1:\n\t\tif arr[0] == max(arr):\n\t\t\tcount += 1\n\t\t\tif index_arr[0] == target:\n\t\t\t\tprint(count)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tarr.pop(0)\n\t\t\t\tindex_arr.pop(0)\n\t\telse:\n\t\t\tarr.append(arr.pop(0))\n\t\t\tindex_arr.append(index_arr.pop(0))"}, {"id": 36962197, "name": "\ubc31\ud558\uc9c4", "x": 2.9869070053100586, "y": 2.7839066982269287, "label": 0, "group": 26, "code": "import sys\ninput = sys.stdin.readline\n\n\nfor tc in range(int(input())):\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    idx = list(range(len(arr)))\n    idx[m] = 'tmp'\n    cnt = 0\n\n    while True:\n\n        if arr[0] == max(arr):\n            cnt += 1\n\n            if idx[0] == 'tmp':\n                print(cnt)\n                break\n            arr.pop(0)\n            idx.pop(0)\n\n        else:\n            arr.append(arr.pop(0))\n            idx.append(idx.pop(0))\n\n"}, {"id": 40803945, "name": "\ud45c\ud615\ud0dc", "x": 4.587409019470215, "y": -18.614273071289062, "label": 0, "group": 27, "code": "import sys\n\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    imp = list(map(int, sys.stdin.readline().split()))\n\n    result = 0\n    position = m\n    while True:\n        if max(imp) > imp[0]:\n            imp.append(imp.pop(0))\n            if position != 0:\n                position -= 1\n            else:\n                position = len(imp)-1\n        else:\n            imp.pop(0)\n            result += 1\n            if position == 0:\n                break\n            else:\n                position -= 1\n\n    print(result)\n"}, {"id": 24994827, "name": "\uad8c\uc11c\uc5b8", "x": -2.815373659133911, "y": 0.5444610714912415, "label": 0, "group": 27, "code": "from sys import stdin\n\nT = int(stdin.readline().strip())\n\nwhile T>0:\n    T -= 1\n\n    n, m = map(int, stdin.readline().split())\n    queue = list(map(int, stdin.readline().split()))\n    idx = list(range(len(queue)))\n    idx[m] = \"target\"\n\n    ans = 0\n    while True:\n        if queue[0] == max(queue):\n            ans += 1\n\n            if idx[0] == \"target\":\n                print(ans)\n                break\n            else:\n                queue.pop(0)\n                idx.pop(0)\n        \n        else:\n            queue.append(queue.pop(0))\n            idx.append(idx.pop(0))\n        \n"}, {"id": 30091156, "name": "\uc124\ud61c\uc218", "x": -24.30881690979004, "y": 21.258129119873047, "label": 0, "group": 27, "code": "# 1966\ubc88: \ud504\ub9b0\ud130 \ud050\n\nimport sys\n\ncase = int(sys.stdin.readline()) # \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uac1c\uc218\nwhile case:\n    order = 0 # \ubb38\uc11c\uac00 \ucd9c\ub825\ub418\ub294 \uc21c\uc11c\n    count, index = map(int, sys.stdin.readline().split())\n    # count = \ubb38\uc11c \uac1c\uc218, target = \uba87\ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\uc5c8\ub294\uc9c0 \ucc3e\uc544\uc57c\ud558\ub294 \ubb38\uc11c\n    queue = list(map(int, sys.stdin.readline().split())) # \ubb38\uc11c \uc911\uc694\ub3c4 \uc785\ub825\ubc1b\uc74c\n    tmplist = list(range(len(queue)))\n    tmplist[index] = \"target\"\n    target = queue[index]\n    while True:\n    # \uc911\uc694\ub3c4\uac00 \uc911\ubcf5\ub418\ub294 \ubb38\uc11c\ub4e4\uc740 \uc5b4\ub5bb\uac8c \ud574\uacb0\ud560\uae4c??\n        if queue[0] == max(queue):\n            order += 1\n\n            if tmplist[0] == \"target\":\n                print(order)\n                break\n            else:\n                queue.pop(0)\n                tmplist.pop(0)\n        else:\n            queue.append(queue.pop(0))\n            tmplist.append(tmplist.pop(0))\n    case -= 1"}, {"id": 28737703, "name": "\uc131\ucca0\uc6b0", "x": 4.799595832824707, "y": -19.421722412109375, "label": 0, "group": 27, "code": "from sys import stdin\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, stdin.readline().split())\n    d = list(map(int, stdin.readline().split()))\n    idx = m\n    c = 0\n    while True:\n        x = max(d)\n        if d[0] == x:\n            d.pop(0)\n            c += 1\n            idx -=1\n            if idx == -1:\n                break\n        else:\n            d.append(d.pop(0))\n            idx -= 1\n            if idx < 0:\n                idx = len(d) - 1\n    print(c)"}, {"id": 41115688, "name": "\uc2ec\uc131\ud61c", "x": -22.924171447753906, "y": 21.072887420654297, "label": 0, "group": 28, "code": "import sys\ntestcase = int(input())\nfor _ in range(testcase):\n    # \uac01 \ud14c\uc2a4\ud2b8\ucf00\uc774\uc2a4 \uc2e4\ud589\n    N, M = map(int, sys.stdin.readline().split())\n    que = list(sys.stdin.readline().split())\n    cnt = 0\n    while True:\n        # \ub9e8\uc55e \uac12\uc774 \uac00\uc7a5 \ud070 \uac12\uc774\ub77c\uba74, \uadf8\ub0e5 pop\n        if que[0]==max(que):\n            cnt += 1\n            que.pop(0)\n            # \uc704\uce58 M \uc5c5\ub370\uc774\ud2b8\n            if M==0:\n                print(cnt)\n                break\n            else: M -= 1\n        # \ub354 \ud070 \uac12\uc774 \ub4a4\uc5d0 \uc874\uc7ac\ud55c\ub2e4\uba74, pop \ud6c4 append\n        else:\n            que.append(que.pop(0))\n            # \uc704\uce58 M \uc5c5\ub370\uc774\ud2b8\n            if M == 0:  M = len(que)-1\n            else:       M -= 1"}, {"id": 26246039, "name": "\ud604\uc601", "x": -26.485559463500977, "y": -18.045372009277344, "label": 0, "group": 28, "code": "case=int(input())\nfor _ in range(case):\n    n,m=list(map(int,input().split()))\n    imp=list(map(int,input().split()))\n    idx=list(range(len(imp)))\n    idx[m]='target'\n    \n    order=0\n    \n    while True:\n        if imp[0]==max(imp):\n            order+=1\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))\n        "}, {"id": 27021409, "name": "\ud669\ud558\ud604", "x": 4.507721900939941, "y": -4.005725860595703, "label": 0, "group": 28, "code": "import sys\ninput = sys.stdin.readline\nnum=int(input())\nfor i in range(num):\n    t_num,target=map(int,input().split())\n    printer=list(map(int,input().split()))\n    index=list(range(t_num))\n    count=0\n    while True:\n        if printer[0]==max(printer):\n            count+=1\n            if index[0]==target:\n                print(count)\n                break\n            else:\n                printer.pop(0)\n                index.pop(0)\n        else:\n            a=printer.pop(0)\n            b=index.pop(0)\n            printer.append(a)\n            index.append(b)"}, {"id": 27430476, "name": "\ucd5c\ubbfc\uc218", "x": 22.579240798950195, "y": -13.12755012512207, "label": 0, "group": 28, "code": "num_case = int(input())\nfor _ in range(num_case):\n    num_docs, target_index = map(int, input().split())\n    priorities = list(map(int, input().split()))\n    docs = [i for i in range(num_docs)]\n    count = 1\n    while True:\n        max_prior = max(priorities)\n        max_index = priorities.index(max_prior)\n        priorities = [*priorities[max_index+1:], *priorities[:max_index]]\n        if docs[max_index] == target_index:\n            print(count)\n            break\n        else:\n            docs = [*docs[max_index+1:], *docs[:max_index]]\n            count += 1"}, {"id": 11788593, "name": "\uae40\ubbfc\uc7ac", "x": 8.251871109008789, "y": -0.8385506272315979, "label": 0, "group": 29, "code": "for i in range(int(input())):\n    size, target = map(int, input().split())\n    que = list(map(int, input().split()))\n    check = [0 for i in range(len(que))]\n    check[target] = 1\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if check[0] == 1:\n                print(count)\n                break\n            else:\n                que.pop(0)\n                check.pop(0)\n        else:\n            que.append(que.pop(0))\n            check.append(check.pop(0))"}, {"id": 17448927, "name": "\ubd09\uba85\uc6b0", "x": 9.052353858947754, "y": -11.05316162109375, "label": 0, "group": 29, "code": "from collections import deque\nfrom sys import stdin\n\ncount = int(input())\nwhile count:\n    n, index = map(int, stdin.readline().split())\n    documents = list(map(int, stdin.readline().split()))\n    marked = deque([(v, True) if i == index else (v, False) for i, v in enumerate(documents)])\n    priorities = sorted(documents)\n    max_p = priorities[-1]\n    printed = 1\n    while True:\n        if marked[0][0] == max_p:\n            d = marked.popleft()\n            if d[1]:\n                print(printed)\n                break\n            else:\n                printed += 1\n                priorities.pop()\n                max_p = priorities[-1]\n        else:\n            marked.rotate(-1)\n    count -= 1"}, {"id": 46203722, "name": "\uc124\uae30\uc5f0", "x": -4.036806106567383, "y": -12.208525657653809, "label": 0, "group": 29, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]\n"}, {"id": 29783543, "name": "\uc624\uc6d0\ucca0", "x": 25.191173553466797, "y": 39.31315994262695, "label": 0, "group": 29, "code": "import sys\ntc = int(input())\nfor _ in range(tc):\n\tn, m  = map(int, input().split())\n\tp = list(map(int, sys.stdin.readline().split()))\n\tdoc = [0 for _ in range(n)]\n\tdoc[m] = 1\n\t\n\tret = 0\n\twhile True:\n\t\tif p[0] == max(p):\n\t\t\tret += 1\n\t\t\tif doc[0] != 1:\n\t\t\t\tdel p[0]\n\t\t\t\tdel doc[0]\n\t\t\telse:\n\t\t\t\tprint(ret)\n\t\t\t\tbreak\n\t\telse:\n\t\t\tp.append(p.pop(0))\n\t\t\tdoc.append(doc.pop(0))"}, {"id": 29536422, "name": "\ud669\ubcf4\uc218\ubbf8", "x": 17.032123565673828, "y": 12.204938888549805, "label": 0, "group": 30, "code": "import sys\ninput=sys.stdin.readline\n\nt=int(input())\n\nfor i in range(t):\n    n,m=map(int,input().split())\n    print_list=list(map(int,input().split()))\n    chk_list=[0 for _ in range(n)]\n    chk_list[m]=1\n    count = 0\n\n    while True:\n        if print_list[0]==max(print_list):\n            count+=1\n\n            if chk_list[0]!=1:\n                del print_list[0]\n                del chk_list[0]\n            else:\n                print(count)\n                break\n        else:\n            print_list.append(print_list[0])\n            chk_list.append(chk_list[0])\n            del print_list[0]\n            del chk_list[0]\n"}, {"id": 16338215, "name": "\ud45c\uc2dc\uc6c5", "x": -34.791358947753906, "y": -6.739882469177246, "label": 0, "group": 30, "code": "from sys import stdin\nfrom collections import deque\n\n\nclass Solution:\n\n    def __init__(self, n, m, p):\n        self.N = n\n        self.M = m\n        self.P = p\n\n    def get_answer(self):\n        que = deque((i, self.P[i]) for i in range(self.N))\n        c = 0\n        self.P.sort()\n        max_i = self.N - 1\n        while que:\n            top = que[0]\n            if top[1] != self.P[max_i]:\n                que.rotate(-1)\n                continue\n            max_i -= 1\n            que.popleft()\n            c += 1\n            if top[0] == self.M:\n                break\n        print(c)\n\n\nif __name__ == \"__main__\":\n    T = int(stdin.readline().rstrip())\n    for _ in range(T):\n        N, M = map(int, stdin.readline().rstrip().split())\n        P = list(map(int, stdin.readline().rstrip().split()))\n        s = Solution(N, M, P)\n        s.get_answer()\n"}, {"id": 32441637, "name": "\ubc15\uc2e0\uc591", "x": 26.379621505737305, "y": 4.617790699005127, "label": 0, "group": 30, "code": "number_of_case = int(input())\n\nanswer = []\n\nfor _ in range(number_of_case):\n    n, m = list(map(int, input().split(' ')))\n    queue = list(map(int, input().split(' ')))\n    greatest = max(queue)\n    queue = [(i, idx) for idx, i in enumerate(queue)]\n\n    cnt = 0\n    while True:\n        pop_data = queue.pop(0)\n        if pop_data[0] == greatest:\n            cnt += 1\n            if pop_data[1] == m:\n                answer.append(cnt)\n                break\n            greatest = max(queue, key=lambda x: x[0])[0]\n        else:\n            queue.append(pop_data)\nprint(*answer, sep='\\n')"}, {"id": 11791718, "name": "\ucd94\uc601\uc6b0", "x": 0.19687926769256592, "y": -15.391358375549316, "label": 0, "group": 30, "code": "if __name__ == \"__main__\":\n    testNum = int(input())\n    for i in range(testNum):\n        totalNum, indexGiven = map(int,input().split())\n        numList = list(map(int,input().split()))\n        positionList = [0 for i in range(totalNum)]\n        positionList[indexGiven] = 1 \n        count = 0\n\n        while True:\n            if numList[0] == max(numList):\n                count += 1\n                if positionList[0] == 1:\n                    print(count)\n                    break\n                else:\n                    numList.pop(0)\n                    positionList.pop(0)\n            else:\n                numList.append(numList.pop(0))\n                positionList.append(positionList.pop(0))"}, {"id": 36043882, "name": "\ub0a8\uad81\uc8fc\uc5f0", "x": -23.3096866607666, "y": -11.345731735229492, "label": 0, "group": 31, "code": "import sys\ninput=sys.stdin.readline\n\nn=int(input())\n\ndef loca(lst, n):\n    for i in range(len(lst)-1,-1,-1):\n        if lst[i]==n:\n            return i\n    return -1\n\nfor i in range(n):\n    m, idx=map(int, input().split())\n    lst=list(map(int, input().split()))\n    std=lst[idx]\n    cnt=0\n\n    lst[idx]=[lst[idx]]\n    for i in range(9, std, -1):\n        newlst=[]\n        loc=loca(lst, i)\n        for j in range(loc+1):\n            if isinstance(lst[j], list):\n                newlst.append(lst[j])\n                continue\n            if lst[j]==i:\n                cnt+=1\n            else:\n                newlst.append(lst[j])\n        newlst=lst[loc+1:]+newlst\n        lst=newlst\n    for i in lst:\n        if isinstance(i, list):\n            cnt+=1\n            break\n        else:\n            if i==std:\n                cnt+=1\n    print(cnt)\n"}, {"id": 35463672, "name": "\ucd5c\uc900\uc7ac", "x": 3.1354262828826904, "y": 9.459309577941895, "label": 0, "group": 31, "code": "import sys\n\n\ndef main():\n    n = int(sys.stdin.readline())\n    for _ in range(n):\n        x, y = map(int, sys.stdin.readline().split())\n        queue = list(map(lambda x:(int(x),\"oth\"), sys.stdin.readline().split()))\n        queue[y] = (queue[y][0],\"ans\")\n        start = 0\n        ans = 0\n        ma = max(queue)[0]\n        while True:\n            while queue[start][0]!=ma:\n                queue.append(queue[start])\n                start +=1\n            start +=1\n            ans += 1\n            if queue[start-1][1] == \"ans\":\n                print(ans)\n                break\n            ma = max(queue[start:])[0]\n\n\nif __name__ == \"__main__\":\n    main()"}, {"id": 20360904, "name": "\ucd94\ud574\uc77c", "x": -11.494755744934082, "y": -3.1655449867248535, "label": 0, "group": 31, "code": "for i in range(int(input())):\n    check = True\n    num = int(input().split()[1])\n    priority = [0] * 9\n    print_queue = []\n    result = 1\n    for i,j in enumerate(map(int,input().split())):\n        priority[j-1] += 1\n        print_queue.append((j,i))\n    while(check):\n        if (sum(priority[print_queue[0][0]:]) > 0 ):\n            print_queue.append(print_queue.pop(0))\n        else:\n            if (print_queue[0][1] == num):\n                check = False\n            else:\n                priority[print_queue[0][0] - 1] -= 1\n                print_queue.pop(0)\n                result += 1\n        #print(print_queue,priority,result)\n    print(result)\n        \n        "}, {"id": 30104411, "name": "\uc0ac\uacf5\uc740\ubbf8", "x": -11.862552642822266, "y": 15.767694473266602, "label": 0, "group": 31, "code": "testCase = int(input())\n\nfor _ in range(testCase):\n    N, M = map(int,input().split())\n\n    printList = list(map(int,input().split()))\n    checkList = [0 for _ in range(N)] \n    checkList[M] = 1 # \uad81\uae08\ud55c \ubb38\uc11c\uc704\uce58 \uc800\uc7a5\n\n    count=0\n    while True:\n        if printList[0] == max(printList):\n            count+=1\n\n            if checkList[0] != 1:\n                del printList[0]\n                del checkList[0]\n            else:\n                print(count)\n                break\n        else:\n            printList.append(printList[0])\n            checkList.append(checkList[0])\n            del printList[0]\n            del checkList[0]"}, {"id": 41599318, "name": "\ud5c8\uc8fc\ubbf8", "x": -20.149438858032227, "y": 12.710858345031738, "label": 0, "group": 32, "code": "# 13 - 1966. \ud504\ub9b0\ud130 \ud050\n# https://www.acmicpc.net/problem/1966\n\nimport sys\ninput = sys.stdin.readline\n\ntestcase = int(input())\n\nfor i in range(testcase):\n    n, m = map(int, input().split())\n    p = list(map(int,input().split()))\n    \n    target = [0] * n\n    target[m] = 1\n    \n    res = 0\n    \n    while True:\n        if p[0] == max(p):\n            res += 1\n            if target[0] == 1:\n                print(res)\n                break\n            else:\n                # \uc778\uc1c4\n                del p[0]\n                del target[0]               \n        else:\n            p.append(p[0])\n            target.append(target[0])\n            del p[0]\n            del target[0]"}, {"id": 36925794, "name": "\ud669\ucc44\uc724", "x": 4.412694931030273, "y": 10.211749076843262, "label": 0, "group": 32, "code": "import sys\ninput=sys.stdin.readline\n#sys.setrecursionlimit(1000000)\nt=int(input())\nfor i in range(t):\n    n,m=map(int,input().split())\n    L1=list(map(int,input().split()))\n    L2=[i for i in range(n)]\n    count=0\n    while True:\n        for i in range(0,L1.index(max(L1))):\n            L1.append(L1.pop(0))\n            L2.append(L2.pop(0))\n        L1.pop(0)\n        count+=1\n        if L2.pop(0)==m:\n            print(count)\n            break"}, {"id": 19146725, "name": "\uace0\uc18c\uc601", "x": 18.916349411010742, "y": -0.557601809501648, "label": 0, "group": 32, "code": "test_case = int(input())\n\nfor case in range(test_case) :\n    N, M = list(map(int, input().split(' ')))\n    docs_val = list(map(int, input().split(' ')))\n    docs_idx = [i for i in range(N)]\n    cnt = 0\n#    print(\"Printer queue :\" ,docs_val)\n    while len(docs_idx) > 0 :\n        while docs_val[0] != max(docs_val) :\n            temp = docs_val.pop(0)\n            docs_val.append(temp)\n            temp = docs_idx.pop(0)\n            docs_idx.append(temp)\n\n#        print(\"The %d-th doc printed.(priority : %d), queue : \" % (docs_idx[0], docs_val[0]),docs_val)\n        docs_val.pop(0)\n        temp = docs_idx.pop(0)\n        cnt += 1\n        if temp == M :\n            break\n\n    print(cnt)"}, {"id": 27229519, "name": "\ubc15\uc0c1\uba74", "x": -12.641677856445312, "y": -22.235233306884766, "label": 0, "group": 32, "code": "Test_Case = int(input())\n\nfor i in range(Test_Case):\n    N, Target_pos = map(int, input().split())\n    queue = list(map(int, input().split()))\n    Importance = [0 for x in range(10)]\n\n    for j in range(N):\n        Importance[queue[j]] += 1\n    \n    count = 0\n    \n    while(queue):\n        if queue[0] == 9:\n            Importance[queue[0]] -= 1\n            queue.pop(0)\n            count += 1\n\n            if Target_pos == 0:\n                print(count)\n                break\n            else:\n                Target_pos -= 1\n        \n        elif sum(Importance[(queue[0] + 1):]) == 0:\n            Importance[queue[0]] -= 1\n            queue.pop(0)\n            count += 1\n\n            if Target_pos == 0:\n                print(count)\n                break\n            else:\n                Target_pos -= 1\n        \n        else:\n            queue.append(queue.pop(0))\n\n            if Target_pos == 0:\n                Target_pos = len(queue) - 1\n                \n            else:\n                Target_pos -= 1\n"}, {"id": 22525163, "name": "\uc774\ud558\ub098", "x": -18.97203254699707, "y": 19.440217971801758, "label": 0, "group": 33, "code": "import sys\n\nT = int(sys.stdin.readline())\nfor i in range(T):\n    success = False\n    cnt = 1\n    N,idx = map(int,sys.stdin.readline().split())\n    priority = list(map(int,sys.stdin.readline().split()))\n    while True:\n        # \ucc3e\uace0\uc790 \ud558\ub294 \uac12\uc774 \ud504\ub9b0\ud130 \ud050 \ub9e8 \uc55e\n        if idx == 0:\n            if priority[0] == max(priority):\n                print(cnt)\n                break\n            else:\n                tmp = priority.pop(0)\n                priority.append(tmp)\n                idx = len(priority) - 1 \n        # \ub2e4\ub978 \uac12\uc774 \ub9e8 \uc55e\n        # \ub2e4\ub978 \uac12 pop\n        if priority[0] == max(priority):\n            priority.pop(0)\n            cnt += 1\n        else:\n            tmp = priority.pop(0)\n            priority.append(tmp)\n        #pop or \ub4a4\ub85c -> idx \uc55e\uc73c\ub85c\n        idx -= 1\n        \n"}, {"id": 49379426, "name": "\ubd09\ubbfc\uc601", "x": 5.7507429122924805, "y": -17.057161331176758, "label": 0, "group": 33, "code": "#1966 \ud504\ub9b0\ud130 \ud050\n\nimport sys\n\nt=int(sys.stdin.readline())\nfor _ in range(t):\n    n,m=map(int,sys.stdin.readline().split())\n    imp=list(map(int,sys.stdin.readline().split()))\n    ans=0\n    while imp:\n        if max(imp)==imp[0]:\n            del imp[0]\n            ans+=1\n            if m==0:\n                break\n        else:\n            imp.append(imp[0])\n            del imp[0]\n        m-=1\n        if m==-1:\n            m+=len(imp)\n    print(ans)"}, {"id": 31710097, "name": "\ud604\ube48", "x": -18.362451553344727, "y": -7.982936859130859, "label": 0, "group": 33, "code": "\"\"\"Solution code for \"BOJ 1966. \ud504\ub9b0\ud130 \ud050\".\n\n- Problem link: https://www.acmicpc.net/problem/1966\n- Solution link: http://www.teferi.net/ps/problems/boj/1966\n\n\"\"\"\n\nimport sys\n\ndef main():\n    n_testcase = int(sys.stdin.readline())\n    \n    for _ in range(n_testcase):\n        n, m = tuple(map(int, sys.stdin.readline().split(' ')))\n        priority_list = list(map(int, sys.stdin.readline().split(' ')))\n\n        priority_count = [0 for i in range(10)]\n        print_count = 0\n        print_more = True\n\n        for p in priority_list:\n            priority_count[p] += 1\n\n        highest_priority = max([p for p in range(10) if priority_count[p] > 0])\n\n        while print_more:\n            for i in range(len(priority_list)):\n                if priority_list[i] == 0:\n                    continue\n                if priority_list[i] == highest_priority:\n                    print_count += 1\n\n                    if i == m:\n                        print_more = False\n                        break\n\n                    priority_list[i] = 0\n                    priority_count[highest_priority] -= 1\n                    if priority_count[highest_priority] == 0:\n                        highest_priority = max([p for p in range(10) if priority_count[p] > 0])\n        print(print_count)\n\n\nif __name__ == '__main__':\n    main()"}, {"id": 11055521, "name": "\uc815\uc815\ubbfc", "x": 25.939071655273438, "y": 40.733314514160156, "label": 0, "group": 33, "code": "import sys\n\nfor i in range(int(sys.stdin.readline())):\n\tmass, vip = map(int, sys.stdin.readline().split())\n\tqueue = list(map(int, sys.stdin.readline().split()))\n\tkill = 0\n\n\twhile queue[vip] != -1:\n\t\tfor k in range(len(queue)):\n\t\t\tif queue[vip] == -1:\n\t\t\t\tbreak\n\t\t\telif queue[k] == max(queue):\n\t\t\t\tqueue[k] = -1\n\t\t\t\tkill += 1\n\tprint(kill)"}, {"id": 21915151, "name": "\uc784\ucc3d\uc815", "x": -22.74127769470215, "y": -7.267906188964844, "label": 0, "group": 34, "code": "def print_q(n,m):\n    queue =input().split()\n    a=1\n    b=m\n    c=queue[m]\n    while True:\n        if queue[0]== max(queue)and (queue[0] != c or b !=0):\n            del queue[0]\n            a=a+1\n            b=b-1\n            \n        elif b==0 and queue[b]== max(queue):\n            print(a)\n            break\n        else:\n            queue.append(queue[0])\n            del queue[0]  \n            b=b-1\n\n            if b==-1:\n                b=n-a\n\n\nnumber=int(input())\ni=0\nfor i in range(number):\n    x=input().split()\n    m=map(int,x)\n    num,indexnum =m\n    print_q(num,indexnum)"}, {"id": 16879501, "name": "\uc784\uc7ac\ub0a8", "x": 9.048187255859375, "y": -14.92349910736084, "label": 0, "group": 34, "code": "import sys\nfor _ in range(int(sys.stdin.readline())):\n    create, find = map(int, sys.stdin.readline().split())\n    numList = [i + 1 for i in range(int(create))]\n    priority = list(map(int, sys.stdin.readline().split()))\n    findNum = numList[find]\n    count = 0\n    while True:\n        if priority[0] == max(priority):\n            if findNum == numList[0]:\n                count += 1\n                break\n            numList.pop(0)\n            priority.pop(0)\n            count += 1\n        else:\n            numList.append(numList.pop(0))\n            priority.append(priority.pop(0))\n    print(count)"}, {"id": 39256736, "name": "\uc131\uc7ac\ud638", "x": 13.759467124938965, "y": -4.945178508758545, "label": 0, "group": 34, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor _ in range(T):\n    N, target = map(int, input().split())\n    numbers = list(map(int, input().split()))\n    std = sorted(numbers)\n\n    i = 0\n    cnt = 0\n    while True:\n        i %= N\n        if numbers[i] == std[-1]:\n            std.pop()\n            cnt += 1\n            if i == target:\n                print(cnt)\n                break\n        i += 1\n"}, {"id": 35320954, "name": "\uc815\ubc94\uc6b0", "x": -5.243271350860596, "y": -11.189303398132324, "label": 0, "group": 34, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 12242305, "name": "\uc720\uc601\uc625", "x": -13.558573722839355, "y": 4.693939208984375, "label": 0, "group": 35, "code": "tase_case = int(input())\norder = []\ninput_data = []\npriority_queue = []\n\nfor _ in range(tase_case):\n    input_data.append([input() for x in range(2)])\n\nfor i in input_data:\n    N, M = i[0].split()\n    priority = i[1].split()\n    priority = [int(x) for x in priority]\n    priority_queue = [[n, x] for n, x in enumerate(priority)]\n\n    while 1:\n        if priority_queue[0][1] < max(priority):\n            priority_queue = priority_queue[1:] + priority_queue[0:1]\n        else:\n            order.append(priority_queue[0])\n            priority.remove(priority_queue[0][1])\n            priority_queue.remove(priority_queue[0])\n        if len(priority_queue) == 0:\n            break\n        \n    for i in order:\n        if i[0] == int(M):\n            print(order.index(i) + 1)\n\n    order = []\n"}, {"id": 28189019, "name": "\ud55c\uace0\uc740", "x": -4.344095706939697, "y": -5.376012802124023, "label": 0, "group": 35, "code": "import sys\ntest = int(sys.stdin.readline())\n\n\nfor _ in range(test):\n    n,m = map(int,sys.stdin.readline().split())\n\n    queue = sys.stdin.readline().split()\n    check = [0 for _ in range(n)]\n    check[m] = 1\n    count = 0\n    while True:\n        if queue[0] == max(queue):\n            count += 1\n\n            if check[0] != 1:\n                del queue[0]\n                del check[0]\n            else:\n                print(count)\n                \n                break\n        else:\n            queue.append(queue[0])\n            check.append(check[0])\n            del queue[0]\n            del check[0]\n"}, {"id": 23911865, "name": "\ubc15\uc18c\ub2f4", "x": 4.744476318359375, "y": -18.45116424560547, "label": 0, "group": 35, "code": "import sys\n\n\ndef read():\n    return sys.stdin.readline()\n\n\nt = int(read())\n\nfor _ in range(t):\n    n, m = map(int, read().split())\n    data = list(map(int, read().split()))\n\n    idx = m\n    cnt = 0\n\n    while True:\n        if data[0] != max(data):\n            data.append(data.pop(0))\n            if idx == 0:\n                idx = len(data)-1\n            else:\n                idx -= 1\n        else:\n            cnt += 1\n            if idx == 0:\n                print(cnt)\n                break\n            data.pop(0)\n            idx -= 1\n"}, {"id": 37634862, "name": "\ud5c8\uc740\uc6b1", "x": 4.581761837005615, "y": -25.213884353637695, "label": 0, "group": 35, "code": "from sys import stdin\n\n\ndef solution():\n    t = int(stdin.readline())\n\n    for _ in range(t):\n        n, m = map(int, stdin.readline().split())\n        arr = list(map(int, stdin.readline().split()))\n\n        big = max(arr)\n        cnt = 0\n\n        while arr:\n            if arr[0] >= big:\n                arr.pop(0)\n                cnt += 1\n\n                if m == 0:\n                    print(cnt)\n                    break\n                else:\n                    m -= 1\n                big = max(arr)\n            else:\n                arr.append(arr.pop(0))\n\n                if m == 0:\n                    m = len(arr) - 1\n                else:\n                    m -= 1\n\n\nif __name__ == '__main__':\n    solution()\n"}, {"id": 42488588, "name": "\uc8fc\uc6d0", "x": -12.582321166992188, "y": -10.261049270629883, "label": 0, "group": 36, "code": "# \ubc31\uc900 1966\nimport sys\n\nT = int(sys.stdin.readline())\n\nresult = []\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n\n    idx = 1\n    target_idx = M\n    while True:\n        if arr[0] < max(arr):\n            if target_idx == 0:\n                target_idx = len(arr) - 1\n            else:\n                target_idx -= 1\n            arr.append(arr.pop(0))\n\n        elif arr[0] == max(arr):\n            if target_idx == 0:\n                result.append(idx)\n                break\n            arr.pop(0)\n            idx += 1\n            target_idx -= 1\n\nprint('\\n'.join(map(str, result)))"}, {"id": 35228630, "name": "\ucd94\ub3d9\uc11d", "x": -4.2430338859558105, "y": -17.787555694580078, "label": 0, "group": 36, "code": "n = int(input())\ndata = []\nans = []\n\nfor i in range(0, n):\n    a, b = map(int, input().split())\n    A = list(map(int, input().split()))\n    i = 0\n    j = 0\n    while A[b] != 0:\n        m = max(A)\n        while True:\n            if A[j] == m:\n                A[j] = 0\n                i += 1\n                break\n            else:\n                j += 1\n                if j == a:\n                    j = 0\n                else:\n                    pass\n    ans.append(i)\n    \nfor i in ans:\n    print(i)"}, {"id": 47566526, "name": "\ucd5c\uc2dc\uc6d0", "x": 25.778186798095703, "y": -0.2729703187942505, "label": 0, "group": 36, "code": "import sys\n\nT = int(input())\n\nfor i in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    important = list(map(int, sys.stdin.readline().split()))\n    order = list(range(len(important)))\n    cnt = 0\n\n    while True:\n        value = important.pop(0)\n        num = order.pop(0)\n\n        if not important:\n            cnt += 1\n            break\n\n        elif value < max(important):\n            important.append(value)\n            order.append(num)\n\n        else:\n            cnt += 1\n            if num == M:\n                break\n\n    print(cnt)"}, {"id": 29161808, "name": "\uc624\uc7ac\ubb34", "x": 12.267477989196777, "y": -18.025691986083984, "label": 0, "group": 36, "code": "import sys\nIn = sys.stdin.readline\nfor _ in range(int(In())):\n    N, M = map(int, In().split())\n    lst = list(map(int, In().split()))\n\n    idx = 0\n    while idx < N:\n        if idx == M + 1:\n            break\n        if lst[idx] < max(lst[idx:]):\n            lst.append(lst.pop(idx))\n            if idx == M:\n                M = len(lst) - 1\n            else:\n                M -= 1\n        else:\n            idx += 1\n    print(M + 1)"}, {"id": 26516548, "name": "\ub0a8\uc900\uc7ac", "x": -16.584938049316406, "y": -19.23813247680664, "label": 0, "group": 37, "code": "N = int(input())\nresult = []\nfor i in range(N):\n    C,K = map(int,input().split())\n    arr = list(map(int,input().split()))\n    cnt = 0\n    while arr:\n        bchcek = False\n        for i in range(1,len(arr)):\n            if arr[0] < arr[i]:\n                arr.append(arr.pop(0))\n                bchcek = True\n                if K == 0:\n                    K = len(arr)-1\n                else:\n                    K-=1\n                break\n                \n        if bchcek == False:\n            arr.pop(0)\n            cnt +=1\n            if (K == 0):\n                result.append(cnt)\n                break\n            else:\n                K-=1\n            \nfor i in result:\n    print(i)"}, {"id": 48574987, "name": "\ubc15\uc720\ud604", "x": 6.560669422149658, "y": -3.184769630432129, "label": 0, "group": 37, "code": "T = int(input())\n\nfor _ in range(T):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    lst = [0 for _ in range(n)]\n    lst[m] = 1\n    cnt = 0\n    \n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if lst[0] == 1:\n                print(cnt)\n                break\n            s.pop(0)\n            lst.pop(0)\n        else:\n            s.append(s.pop(0))\n            lst.append(lst.pop(0))\n            "}, {"id": 26768424, "name": "\ub178\ud6a8\uacbd", "x": -17.71147346496582, "y": 15.040037155151367, "label": 0, "group": 37, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split( )))\n    imp = list(map(int, input().split( )))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n    \n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))     "}, {"id": 48473905, "name": "\uc774\ubcd1\ud5cc", "x": -2.944824695587158, "y": -7.209362983703613, "label": 0, "group": 37, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    queue = list(map(int, input().split()))\n    target = queue[m]\n    \n    checker = [0 for _ in range(n)]\n    checker[m] = 1\n    \n    count = 0\n    \n    while True:\n        if queue[0] == max(queue):\n            count += 1\n            if checker[0] == 1:\n                print(count)\n                break\n            else:\n                del queue[0]\n                del checker[0]\n        else:\n            queue.append(queue[0])\n            del(queue[0])\n            checker.append(checker[0])\n            del(checker[0])"}, {"id": 17181417, "name": "\uacfd\uc815\uc740", "x": 16.15659523010254, "y": -12.019639015197754, "label": 0, "group": 38, "code": "tc = int(input())\n\ndef find_larger(queue):\n    for n in queue:\n        if n[1] > queue[0][1]:\n            return True\n    return False\n\nfor _ in range(tc):\n    N, M = tuple(map(int, input().split()))\n    queue = [(index, priority) for index, priority in enumerate(map(int, input().split()))]\n    target = queue[M]\n    count = 0\n    while True:\n        if find_larger(queue):\n            queue.append(queue[0])\n            queue.pop(0)\n        else:\n            pop = queue.pop(0)\n            if pop == target:\n                print(count+1)\n                break\n            count += 1"}, {"id": 17400998, "name": "\ubc15\uc6b0\uc601", "x": 16.312644958496094, "y": -8.872110366821289, "label": 0, "group": 38, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    rank_list = [int(i) for i in input().split()]\n    mutable_list = rank_list.copy()\n    index_list = [i for i in range(n)]\n    \n    cnt = 1\n    while index_list:\n        if rank_list[index_list[0]] == max(mutable_list):\n            current_index = index_list.pop(0)\n            if current_index == m:\n                break\n\n            mutable_list.remove(max(mutable_list))\n            cnt += 1\n        else:\n            index_list.append(index_list.pop(0))\n    print(cnt)"}, {"id": 28585213, "name": "\ud5c8\uc7ac\uc6a9", "x": -19.81746482849121, "y": 11.17337417602539, "label": 0, "group": 38, "code": "#-*- encoding: utf-8 -*-\nimport sys\ninput = sys.stdin.readline\n\nt = int(input().rstrip())\nanswer = []\nfor _ in range(t):\n    n, m = map(int, input().rstrip().split())\n    data = list(map(int, input().rstrip().split()))\n    idx = list(range(len(data))) #\ub370\uc774\ud130\ub4e4\uc758 \uc704\uce58\ub97c \uc800\uc7a5\ud574\ub458 \ub9ac\uc2a4\ud2b8\n    #print(idx)\n    target = idx[m]\n    #print(target)\n    cnt = 0\n    while True:\n        if data[0]==max(data):\n            cnt+=1\n\n            if idx[0] == target:\n                print(cnt)\n                break\n\n            else:\n                data.pop(0)\n                idx.pop(0)\n        else:\n            data.append(data[0])\n            data.pop(0)\n\n            idx.append(idx[0])\n            idx.pop(0)"}, {"id": 27296195, "name": "\ub958\uc138\uc5f0", "x": 15.014623641967773, "y": -15.289952278137207, "label": 0, "group": 38, "code": "T = int(input())\n\ndef printer_find():\n    N, M = map(int, input().split())\n    queues = list(map(int, input().split()))\n    printers = [i for i in range(len(queues))]\n    count = 0\n\n    for i in range(9, 0, -1):\n        while i in queues:\n            queue = queues.pop(0)\n            now = printers.pop(0)\n\n            if queue != i:\n                queues.append(queue)\n                printers.append(now)\n            else:\n                count += 1\n                if now == M:\n                    return count\n    return count\n\nfor _ in range(T):\n    print(printer_find())\n\n\n\n\n"}, {"id": 34691810, "name": "\uc1a1\uc911\uae30", "x": 19.715953826904297, "y": 13.260478973388672, "label": 0, "group": 39, "code": "import sys\n\ntc=int(sys.stdin.readline())\n\nfor i in range(tc):\n    a,b=map(int,sys.stdin.readline().split())\n    li=list(map(int,sys.stdin.readline().split()))\n    count=1\n    \n    for j in range(a):\n        t=li.index(max(li))\n        if t>b:\n            b=(a-t)+b\n        elif t<b:\n            b=b-t\n        elif t==b:\n            break\n        li=li[t:]+li[:t]\n        li[0]=0\n        count+=1\n    print(count)"}, {"id": 35663451, "name": "\ubc31\uc131\ud604", "x": 18.847461700439453, "y": 24.28696060180664, "label": 0, "group": 39, "code": "import sys;r=lambda:map(int,sys.stdin.readline().split())\nfor _ in range(*r()):\n n,m=r();p=[*r()];q=sorted(p);i=0;a=1\n while 1:\n  if p[i]==q[-1]:\n   if i-m:a+=1;q.pop()\n   else:print(a);break\n  i=(i+1)%n"}, {"id": 21413351, "name": "\ud5c8\uc724\uc2dd", "x": 24.717559814453125, "y": 39.49424362182617, "label": 0, "group": 39, "code": "test_case=int(input())\nfor i in range(test_case):\n\tn, m = map(int, input().split())\n\tli = list(map(int, input().split()))\n\ttarget = [0 for _ in range(n)]\n\ttarget[m] = 1\n\t\n\tcnt = 0\n\t\n\twhile True:\n\t\tif max(li) == li[0]:\n\t\t\tcnt+=1\n\t\t\tif target[0] == 1:\n\t\t\t\tprint(cnt)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tli.pop(0)\n\t\t\t\ttarget.pop(0)\n\t\telse:\n\t\t\tli.append(li.pop(0))\n\t\t\ttarget.append(target.pop(0))"}, {"id": 43790955, "name": "\uc11c\uc608\uc9c0", "x": -11.366708755493164, "y": -7.370297908782959, "label": 0, "group": 39, "code": "import sys\nread = sys.stdin.readline\n\nt = int(read())\nfor _ in range(t):\n    n, m = map(int, read().split())\n    arr = list(map(int, read().split()))\n    count = [0] * 10\n    idx = 0\n    for i in arr:\n        count[i] += 1\n    result = 0\n    for i in reversed(range(arr[m] + 1, 10)):\n        result += count[i]\n        for j in range(1, n):\n            if arr[idx-j] == i:\n                idx = (idx-j) % n\n                break\n    if idx > m:\n        idx -= n\n    for i in range(idx, m):\n        if arr[i] == arr[m]:\n            result += 1\n    result += 1\n    print(result)\n"}, {"id": 21674399, "name": "\uc2e0\uc740\uc218", "x": -10.737425804138184, "y": 17.26194953918457, "label": 0, "group": 40, "code": "\ntest_case = int(input())\nfor i in range(test_case):\n    a,b = map(int,input().split())\n    inn = list(map(int,input().split()))\n    comp = [0 for i in range(a)]  # \uc9c0\uc815 \uac12\uc758 \uc790\ub9ac\ub97c \uc800\uc7a5\ud560 \uc218 \uc788\ub294 list \ud544\uc694\n    comp[b] = 1\n    count = 0\n    while inn: \n        if inn[0] == max(inn):\n            \n            count+=1\n            if comp[0] == 1:  \n                print(count)\n                break\n            else:\n                del inn[0]\n                del comp[0]\n            \n        else:\n            inn.append(inn[0])\n            del inn[0]\n            comp.append(comp[0])\n            del comp[0]"}, {"id": 26314935, "name": "\ubb38\ubbfc\ud76c", "x": -7.51043701171875, "y": 10.564598083496094, "label": 0, "group": 40, "code": "import sys\ninput = sys.stdin.readline\narr = []\nA = int(input())\nfor i in range(A):\n    B, C = map(int, input().split())\n    imp = list(map(int, input().split()))\n    T = []\n    arr2 = []\n    for i in range(B):\n        T.append(i+1)\n    while imp :\n        for i in imp:\n            if max(imp)>imp[0]:\n                imp.append(imp[0])\n                T.append(T[0])\n                imp.remove(imp[0])\n                T.remove(T[0])\n            else :\n                arr.append(imp[0])\n                arr2.append(T[0])\n                imp.remove(imp[0])\n                T.remove(T[0])\n    print(arr2.index(C+1)+1)\n"}, {"id": 27197726, "name": "\uae40\ubbfc\uc900", "x": 27.902082443237305, "y": -4.635289192199707, "label": 0, "group": 40, "code": "import sys\ntest_case = int(input())\nfor _ in range(test_case):\n    queue = []\n    answer = 0\n    docNum, target = map(int, input().split())\n    inputdoc = list(map(int, input().split()))\n    for i in range(docNum):\n        queue.append([i, inputdoc[i]])\n\n    while(True):\n        front = queue.pop(0)\n        maxpri = max(inputdoc)\n        if front[1] == maxpri:\n            answer += 1\n            if front[0] == target:\n                print(answer)\n                break\n            inputdoc.remove(maxpri)\n        else:\n            queue.append(front)\n"}, {"id": 12925813, "name": "\ucd5c \ub2e4\ub2c8\uc5d8", "x": -19.78923988342285, "y": -1.714137077331543, "label": 0, "group": 40, "code": "def printer_queue(doc_count, doc_index, docs):\n    doc_check = [\"True\" if i == doc_index else \"False\" for i in range(len(docs))]\n    count = 0\n\n    while True:\n        if docs[0] == max(docs):\n            count += 1\n\n            if doc_check[0] == \"True\":\n                return count\n\n            docs.remove(docs[0])\n            doc_check.remove(doc_check[0])\n        else:\n            temp_num = docs[0]\n            temp_check = doc_check[0]\n\n            docs.remove(docs[0])\n            doc_check.remove(doc_check[0])\n\n            docs.append(temp_num)\n            doc_check.append(temp_check)\n\n\ndef main():\n    num = int(input())\n\n    for _ in range(num):\n        doc_count, doc_index = map(int, input().split())\n        docs = list(map(int, input().split()))\n\n        print(printer_queue(doc_count, doc_index, docs))\n\n\nif __name__ == \"__main__\":\n    main()\n"}, {"id": 43561259, "name": "\ud48d\uc724\uc8fc", "x": -4.840978145599365, "y": -11.297965049743652, "label": 0, "group": 41, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 44134163, "name": "\ubc31\uc900\uc131", "x": -19.961732864379883, "y": 19.954120635986328, "label": 0, "group": 41, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor i in range(t) :\n    n, m = map(int, input().split())\n    queue = [*map(int, input().split())]\n    max_num = max(queue)\n    count = 0\n    while True :\n        if queue[0] < max_num :\n            queue.append(queue.pop(0))\n        else :\n            # m\uc774 \uccab\ubc88\uc9f8 \uc22b\uc790\uc778 \uacbd\uc6b0 \ubb38\uc81c \ud574\uacb0\n            count += 1\n            if m == 0 :\n                print(count)\n                break\n            queue.pop(0)\n            # \ud050\uc5d0\uc11c \uac00\uc7a5 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \uc22b\uc790\ub97c \uac31\uc2e0\n            max_num = max(queue)\n        # m\uc758 \uc21c\uc11c\ub97c \uc62e\uae40\n        m = m - 1 if m > 0 else len(queue) - 1"}, {"id": 37038088, "name": "\ud5c8\uc120\uc625", "x": 11.784720420837402, "y": -18.973888397216797, "label": 0, "group": 41, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    N, M = map(int, input().split())\n    seq = list(map(int, input().split()))\n\n    cnt = 0\n    while seq:\n        Max = max(seq)\n        M -= 1\n        Pop = seq.pop(0)\n\n        if Max != Pop:\n            seq.append(Pop)\n            if M < 0:\n                M = len(seq) - 1\n\n        else:\n            cnt += 1\n            if M == -1:\n                print(cnt)\n                break\n"}, {"id": 7817693, "name": "\ub178\uc885\ud604", "x": 23.73914337158203, "y": -1.705935001373291, "label": 0, "group": 41, "code": "\ndef printOrder(docs, pos):\n    printNum = 0\n\n    while len(docs) > 0:\n        curDoc = docs.pop(0)\n\n        canPrint = True\n        for doc in docs:\n            if curDoc[1] < doc[1]:\n                docs.append(curDoc)\n                canPrint = False\n                break\n\n        if canPrint:\n            printNum += 1\n            if curDoc[0] == pos:\n                print(printNum)\n                break\n\n\nt = int(input())\n\nfor _ in range(t):\n    n, m = [int(i) for i in input().split(' ')]\n\n    docs = []\n\n    for value in input().split(' '):\n        docs.append((len(docs), int(value)))\n\n    printOrder(docs, m)\n"}, {"id": 35146185, "name": "\uc815\uc9c4\uc8fc", "x": -19.34130859375, "y": -21.068359375, "label": 0, "group": 42, "code": "from sys import stdin\n\n\ndef last_index(l, v):\n    l.reverse()\n    res = (len(l)-1) - l.index(v)\n    l.reverse()\n    return res\n\n\nif __name__ == '__main__':\n    num = int(stdin.readline())\n    for _ in range(num):\n        N, M = map(int, stdin.readline().split())\n        priorities = list(map(int, stdin.readline().split()))\n        cnt = 1\n\n        while len(priorities) > 0:\n            # print(priorities)\n            # print(\"M : \" + str(M))\n            if priorities[0] < max(priorities):\n                # swap\n                if M == 0:\n                    M = len(priorities)-1\n                else:\n                    M -= 1\n\n                priorities.append(priorities[0])\n                del priorities[0]\n            else:\n                # print\n                if M == 0:\n                    print(cnt)\n                    break\n                else:\n                    del priorities[0]\n                    cnt += 1\n                    M -= 1\n"}, {"id": 25858687, "name": "\uc7a5\uc0c1\ud654", "x": -19.30356788635254, "y": 21.935020446777344, "label": 0, "group": 42, "code": "testCase = int(input())\n\nfor _ in range(testCase):\n    docuNum, findIndex = list(map(int, input().split()))\n    documents = list(map(int, input().split())) # \ud050 \u314b_\u314b\n    outputNum = 1\n    find = 0\n\n    while docuNum > 0:                      # \ud050\uc5d0 \uac12\uc774 \ub4e4\uc5b4 \uc788\uc744 \ub54c\n        popNum = documents.pop(0)           # \uccab \ubc88\uc9f8 \uc218 \ube7c\ub193\uc74c\n        for i in range(docuNum - 1):            # \ubb38\uc11c \ud050 \ub3cc\ub9bc\n            if popNum < documents[i]:       # \ub354 \ud070\uac8c \uc788\uc73c\uba74\n                findIndex = (findIndex - 1 + docuNum) % docuNum\n                documents.append(popNum)    # \ub4a4\ub85c \ub3cc\ub824\ub188\n                break\n        else:                               # \ub354 \ud070\uac8c \uc5c6\uc5c8\ub294\ub370\n            if findIndex == 0:\n                print(outputNum)\n                break\n            else:\n                docuNum -= 1\n                findIndex = (findIndex - 1 + docuNum) % docuNum\n                outputNum += 1"}, {"id": 20176766, "name": "\uae40\ucc3d\uc9c4", "x": -25.14785385131836, "y": -7.116209030151367, "label": 0, "group": 42, "code": "import sys\nfrom _collections import deque\nread = sys.stdin.readline\n\nn = int(read())\nfor _ in range(n):\n    size, index = map(int,read().split())\n    priority = list(map(int,read().split()))\n    pair_v = deque(priority)\n    priority.sort()\n    priority = deque(priority)\n\n    pair_i = deque([i for i in range(size)])\n\n\n    result = 0\n    #print(\"\\n\\npriority : \", priority)\n    #print( \"pair_v : \", pair_v )\n    #print(\"pair_i: \", pair_i)\n    #print(len(priority))\n    while len(priority) != 0:\n     #   print(\"\\npriority : \", priority)\n     #   print(\"pair_v : \", pair_v)\n     #   print(\"pair_i: \", pair_i)\n        if priority[-1] == pair_v[0]:\n            if pair_i[0] == index:\n                print(result+1)\n            pair_v.popleft()\n            pair_i.popleft()\n            priority.pop()\n            result +=1\n\n        else:\n            tmpV = pair_v.popleft()\n            tmpI = pair_i.popleft()\n            pair_v.append(tmpV)\n            pair_i.append(tmpI)\n\n\n\n\n\n"}, {"id": 35465127, "name": "\uc608\ud574\uc131", "x": -13.430002212524414, "y": -24.27118492126465, "label": 0, "group": 42, "code": "import sys\n\n\nt = int(sys.stdin.readline())\n\nfor _ in range(t):\n    N, M = map(int, sys.stdin.readline().split())\n    lst = list(map(int, sys.stdin.readline().split()))\n    target = lst[M]\n    cnt = 0\n    location = M\n    \n    while lst:\n        high = max(lst)\n        if lst[0] < high:\n            if location == 0:\n                low = lst.pop(0)\n                lst.append(low)\n                location = len(lst) - 1\n            else:\n                low = lst.pop(0)\n                lst.append(low)\n                location -= 1\n                \n        else:\n            done = lst.pop(0)\n            cnt += 1\n            if done == target and location == 0:\n                print(cnt)\n                break\n            else:\n                location -= 1"}, {"id": 21894789, "name": "\uc2e0\uc18c\uc728", "x": -1.528052568435669, "y": -7.91660213470459, "label": 0, "group": 43, "code": "T=int(input())\nfor _ in range(T):\n    N,M=map(int,input().split())\n    queue=[i for i in range(N)]\n    importance=list(map(int,input().split()))\n    count=0\n    while True:\n        if importance[0]<max(importance):\n            queue.append(queue[0])\n            importance.append(importance[0])\n            del queue[0]\n            del importance[0]\n        else:\n            if queue[0]==M:\n                count+=1\n                print(count)\n                break\n            else:\n                del queue[0]\n                del importance[0]\n                count+=1"}, {"id": 19110749, "name": "\uc7a5\uae30\uc815", "x": 5.9584641456604, "y": 11.740758895874023, "label": 0, "group": 43, "code": "import sys\ninput = sys.stdin.readline\n\ndef isMax(q, Q):\n    for i in range(0, len(Q)):\n        if q < Q[i]:\n            return False\n    return True\n\n\ndef priority(Q, m):\n    search = m\n    cnt = 1\n    while Q:\n        if isMax(Q[0], Q):\n            if search == 0: return cnt\n            search -= 1\n            cnt += 1\n            del Q[0]\n        else:\n            if search == 0: search = len(Q) - 1\n            else: search -= 1\n            Q.append(Q[0])\n            del Q[0]\n\n\n\ndef main():\n    n, m = map(int, input().split())\n    Q = list(map(int, input().split()))\n    print(priority(Q, m))\n\n\nif __name__ == \"__main__\":\n    t = int(input())\n    for _ in range(t):\n        main()"}, {"id": 20676688, "name": "\ud45c\ub3c4\uc9c4", "x": 23.647968292236328, "y": 10.6500883102417, "label": 0, "group": 43, "code": "T = int(input())\n\nfor i in range(T):\n    count = 0\n    final_list = []\n    final_index = []\n    N, M =map(int,input().split(' '))\n    initial_index =[i for i in range(N)]\n    initial_list = list(map(int,input().split(' ')))\n    while initial_list != [] and M not in final_index:\n        if initial_list[0] == max(initial_list):\n            final_list.append(initial_list.pop(0))\n            final_index.append(initial_index.pop(0))\n            count+=1\n        else :\n            initial_list.append(initial_list.pop(0))\n            initial_index.append(initial_index.pop(0))\n  \n    print(count)\n"}, {"id": 42332923, "name": "\uc774\uc815\uc9c4", "x": 14.764058113098145, "y": 20.89410400390625, "label": 0, "group": 43, "code": "# https://www.acmicpc.net/problem/1966\n\n# 4, 2 / 1, 2, 3, 4 / [2] = 3\n# 4,3,2,1 /  \n\nfrom sys import stdin\n\nt = int(stdin.readline())\n\nfor _ in range(t):\n  n, m = map(int, stdin.readline().split(' '))\n  priorityArray = list(map(int, (stdin.readline().split(' '))))\n\n  x = priorityArray[m] # save priority of m to x\n\n  count = 1\n\n  while True:   \n    if m == 0 and max(priorityArray) == priorityArray[0]:\n      print(count)\n      break\n\n    if max(priorityArray) == priorityArray[0]:\n      del priorityArray[0]\n      count += 1\n      m -= 1\n    \n    else:\n      priorityItem = priorityArray[0]\n      priorityArray = priorityArray[1:]\n      priorityArray.append(priorityItem)\n      \n      if m == 0:\n        m = len(priorityArray) - 1\n      else: \n        m -= 1\n      \n    \n"}, {"id": 44495168, "name": "\uc815\ud604\uc131", "x": 14.096370697021484, "y": 3.8361074924468994, "label": 0, "group": 44, "code": "t = int(input())\n\nres = []\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    imp = list(map(int, input().split()))\n    \n    M = max(imp)\n    start = 0\n    l = len(imp)\n    count = 1\n    while True:\n        if imp[start] != M:\n            imp.append(imp[start])\n            if start == m:\n                m += l \n            start += 1\n        else:\n            if start == m:\n                break\n            M = max(imp[start+1:start+l])\n            start += 1\n            count += 1\n            l -= 1\n    \n    res.append(count)\n\nfor i in res:\n    print(i)"}, {"id": 18871504, "name": "\uc0ac\uacf5\uc131\ud604", "x": 25.787927627563477, "y": -6.014420032501221, "label": 0, "group": 44, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    x = max(p)\n    while True:\n        if x == p[0]:\n            p.pop(0)\n            if m == 0:\n                print(n - len(p))\n                break\n            x = max(p)\n        else:\n            p.append(p.pop(0))\n        m = (m - 1) % len(p)"}, {"id": 36619653, "name": "\ud558\uc218\ud638", "x": 5.827868461608887, "y": 22.35203742980957, "label": 0, "group": 44, "code": "testcase = int(input())\nanswer_list = []\nreal_priority = 0\n\nfor k in range(testcase):\n  answer = 0\n  n, target = map(int, input().split())\n  priority = list(map(int, input().split()))\n  max_priority = max(priority)\n  real_priority = priority[target]\n  priority[target] = 0 # \ud0c0\uac9f\uc740\uc758 \uc6b0\uc120\uc21c\uc704\ub294 0\uc784 \n  i = 0\n  while (len(priority) >= 0):\n    if priority[0] == 0:\n      if max_priority == real_priority:\n         answer += 1\n         break\n    if max_priority == priority[0]:\n      priority.pop(0)\n      max_priority = max(priority)\n      max_priority = max(max_priority, real_priority)\n      answer += 1\n      i = 0\n    else:\n      temp = priority.pop(0)\n      priority.append(temp)\n      i += 1\n  answer_list.append(answer)\n  \nfor x in answer_list:\n  print(x)"}, {"id": 15545592, "name": "\ucd5c\uc9c4\ud601", "x": 7.655279159545898, "y": -0.5612166523933411, "label": 0, "group": 44, "code": "import sys\nfor i in range(int(sys.stdin.readline())):\n    size,idx=map(int,sys.stdin.readline().split())\n    que=list(map(int,sys.stdin.readline().split()))\n    idx_li=[0 for i in range(size)]\n    idx_li[idx]=1\n    cnt=0\n    while 1:\n        if que[0]==max(que):\n            cnt+=1\n            if idx_li[0]==1:\n                print(cnt)\n                break\n            else:\n                que.pop(0)\n                idx_li.pop(0)\n        else:\n            que.append(que.pop(0))\n            idx_li.append(idx_li.pop(0))"}, {"id": 7112400, "name": "\uc18c\uc720\uc9c4", "x": 7.048305034637451, "y": 2.7639377117156982, "label": 0, "group": 45, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 48861772, "name": "\ucd5c\ud61c\uc9c4", "x": -15.847639083862305, "y": -7.485053062438965, "label": 0, "group": 45, "code": "import sys\n\ncase_number = int(sys.stdin.readline())\n\nfor i in range(case_number):\n    job_number, position = map(int, sys.stdin.readline().split())\n    priorities = ''.join(sys.stdin.readline().split())\n    my_priority = int(priorities[position])\n    higher_than_me = sorted(set(_ for _ in priorities if int(_) > my_priority), reverse=True)\n    consumed_time = 0\n    point = 101\n\n    if higher_than_me:\n        for j in higher_than_me:\n            faster = [_ for _ in enumerate(priorities) if _[1] == j]\n            consumed_time += len(faster)\n            setting = [tu for tu in faster if tu[0] < point]\n            if setting: point = int(setting[-1][0])\n            else: point = faster[-1][0]\n\n    same_priority = [_ for _ in enumerate(priorities) if _[1] == priorities[position]]\n\n    if point < position:\n        for x in same_priority:\n            if point < x[0] <= position: consumed_time += 1\n    else:\n        for x in same_priority:\n            if point < x[0] or x[0] <= position: consumed_time += 1\n\n    print(consumed_time)\n"}, {"id": 32284187, "name": "\uc774\uc218\ud601", "x": 13.661704063415527, "y": 23.522159576416016, "label": 0, "group": 45, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n  N,M = input().split()\n  temp = input().split()\n  maxN = max(temp)\n  que = list(enumerate(temp))\n  count = 1\n  while True:\n    if que[0][1] < maxN:\n      que.append(que.pop(0))\n    elif int(que[0][0]) != int(M):\n      count += 1\n      que.pop(0)\n      maxN = max(que,key=lambda x:x[1])[1]\n    else:\n      print(count)\n      break;\n\n\n"}, {"id": 24740005, "name": "\uc11c\uc2b9\ud61c", "x": -17.107030868530273, "y": -22.332279205322266, "label": 0, "group": 45, "code": "T=int(input())\nfor i in range(T):\n    N,M=map(int,input().split())\n    document = list(map(int,input().split()))\n    max_=max(document)\n    fin_=False\n    time=0\n    while fin_==False: \n        if M==0:\n            if document[0]>=max_:\n                time+=1\n                fin_=True\n                break\n            else:\n                M=len(document)-1\n                document.append(document[0])\n                del document[0]\n        else:\n            if document[0]>=max_:\n                del document[0]\n                M-=1\n                time+=1\n                max_=max(document)\n            else:\n                M-=1\n                document.append(document[0])\n                del document[0]\n            \n    \n        \n    print(time)"}, {"id": 48345249, "name": "\uae40\ud0dc\ud76c", "x": -14.49887466430664, "y": -24.96815299987793, "label": 0, "group": 46, "code": "import sys\n\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    N, M = map(int, input().rstrip().split())\n    priority = list(map(int, input().rstrip().split()))\n    idx = list(range(N))\n    idx[M] = 'target'\n    \n    count = 0\n    \n    while True:\n        if len(priority) >= 1:\n            if priority[0] < max(priority):\n                priority.append(priority.pop(0))\n                idx.append(idx.pop(0))\n    \n            else:\n                count += 1\n                if idx[0] == 'target':\n                    break\n                priority.pop(0)\n                idx.pop(0)\n            \n        else:\n            break\n            \n    print(count)"}, {"id": 21383654, "name": "\uc11c\ub3c4\uc601", "x": 14.797576904296875, "y": 6.163179397583008, "label": 0, "group": 46, "code": "import sys\ncase = int(input())\n\nfor _ in range(case):\n    result = 0\n    N, C = map(int, input().split())\n    importance = list(map(int, sys.stdin.readline().rstrip().split()))\n    while 1:\n        if importance[0] == max(importance):\n            if C:\n                importance.pop(0)\n                C -= 1\n                result += 1\n            else:\n                print(result + 1)\n                break\n        else:\n            if C:\n                importance.append(importance.pop(0))\n                C -= 1\n            else:\n                importance.append(importance.pop(0))\n                C = len(importance) - 1"}, {"id": 10915500, "name": "\uae40\uc9c0\uc6d0", "x": -22.860963821411133, "y": -13.500162124633789, "label": 0, "group": 46, "code": "from sys import stdin\nfor i in range(int(stdin.readline())):\n    n,m=map(int,stdin.readline().split())\n    l=list(map(int,stdin.readline().split()))\n    nl=sorted(l,reverse=True)\n    imp=l[m]\n    del(l[m])\n    l.insert(m,'X')\n    result=0\n    idx=0\n    result=0\n    pl=[]\n    if n==1:\n        result=1\n    else:\n        while len(pl)!=n:\n            if l[idx]==nl[0]:\n                del(l[idx])\n                del(nl[0])\n                if idx==0:\n                    idx=len(l)\n                else:\n                    idx-=1\n                result+=1\n            elif max(nl)==imp and l[idx]=='X':\n                result+=1\n                break\n            if idx<len(l)-1:    \n                idx+=1\n            elif l==[]:\n                break\n            else:\n                idx=0\n    print(result)"}, {"id": 31081997, "name": "\uace0\ubcd1\uc218", "x": -4.3103437423706055, "y": -10.529376983642578, "label": 0, "group": 46, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 35533292, "name": "\uae40\ubbfc\uc11d", "x": 3.5398426055908203, "y": -10.172163009643555, "label": 0, "group": 47, "code": "import sys\nfor i in range(int(sys.stdin.readline())):\n    A,B = map(int,sys.stdin.readline().split())\n    C = list(map(int,sys.stdin.readline().split()))\n    D =[]\n    num = 0\n    for i in range(A):\n        D.append((C[i],i))\n    \n    while True:\n        num+=1\n        while D[0][0] != max(C):\n            D.append(D.pop(0))\n        C.remove(max(C))\n        if D.pop(0)[1] == B:\n            print(num)\n            break"}, {"id": 21911023, "name": "\uac15\uc6d0\uc815", "x": -21.14914894104004, "y": 19.42076873779297, "label": 0, "group": 47, "code": "import sys\ninput = sys.stdin.readline\ntc = int(input())\nfor _ in range(tc):\n    n,m = map(int,input().split())\n    arr = list(map(int,input().split()))\n    temp = sorted(arr, reverse= True)\n    answer = 0\n    idx = 0\n    while True:\n        for i,j in enumerate(arr): #\uc815\ub82c\ub418\uc9c0 \uc54a\uc740 \uac83\n            first = temp[idx] #\uc815\ub82c\ub41c\uac83\uc758 \uccab\ubc88\uc9f8\ubd80\ud130\n            if first == j: #\uc6b0\uc120\uc21c\uc704 \uc81c\uc77c \ub192\uc740 \uac83\uc774 j\ub791 \ub3d9\uc77c\ud558\ub2e4\uba74\n                answer += 1\n                idx += 1 # \ub2e4\uc74c\uac83\uc73c\ub85c \uc9c4\ud589\n                if i == m:\n                    break\n        else:\n            continue\n        break\n    print(answer)\n\n\n\n\n\n"}, {"id": 43616448, "name": "\uc1a1\uaddc\uc601", "x": -14.638504028320312, "y": 19.937108993530273, "label": 0, "group": 47, "code": "import sys\n\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    priorities = list(map(int, input().split()))\n\n    index = 0\n    order = 1\n    curr_max = max(priorities)\n    while curr_max > 0:    \n        if priorities[index] == curr_max:\n            if index == M:\n                break\n            priorities[index] = 0 # \ucd9c\ub825\ud55c \uac83\uc740 0\uc73c\ub85c \ubc14\uafc8\n            order += 1\n            curr_max = max(priorities)\n            \n        index = (index + 1) % len(priorities) # \uc21c\ud658\n    \n    print(order)"}, {"id": 35711318, "name": "\uc655\uc11d\ud604", "x": -4.762916088104248, "y": 4.907729148864746, "label": 0, "group": 47, "code": "def sol():\n    cnt=0\n    while True:\n        if arr[0] == max(arr):\n            cnt+=1\n            if idx[0] == 'target':\n                break\n            else:\n                idx.pop(0)\n                arr.pop(0)\n        else:\n            idx.append(idx.pop(0))\n            arr.append(arr.pop(0))\n    return cnt\nQ = int(input())\nfor _ in range(Q):\n    N, M=map(int, input().split())\n    arr = list(map(int, input().split()))\n    idx = list(range(len(arr)))\n    idx[M] = 'target'\n    print(sol())\n"}, {"id": 43272655, "name": "\uc2ec\uc2dc\uc6a9", "x": 10.784493446350098, "y": 12.276130676269531, "label": 0, "group": 48, "code": "def queue(list, count):\n    while True:\n        if list[0] < max(list):\n            list.append(list[0])\n            del list[0]\n        elif list[0] == max(list) and list[0+1] == 0.1:\n            count += 1\n            return count\n        else:\n            count += 1\n            del list[0]\n\n\nf = int(input())\nfor _ in range(f):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.insert(m+1, 0.1)\n    count = 0\n    print(queue(a, count))\n\n"}, {"id": 36066225, "name": "\uc5c4\ud0dc\uc6c5", "x": 30.364072799682617, "y": 8.959080696105957, "label": 0, "group": 48, "code": "for _ in range(int(input())):\n    N, M = [int(x) for x in input().split()]\n    docs = [{\"index\": idx, \"priority\": int(x)} for idx, x in enumerate(input().split())]\n\n    for t in range(N):\n        target = max(docs, key=lambda x: x[\"priority\"])\n        if target[\"index\"] == M:\n            print(t+1)\n            break\n\n        target_idx = docs.index(target)\n        docs = [*docs[target_idx+1:], *docs[:target_idx]]\n        "}, {"id": 16819139, "name": "\ub958\uc9c4", "x": 14.268030166625977, "y": -0.7292343378067017, "label": 0, "group": 48, "code": "from collections import deque\nimport sys\nread = sys.stdin.readline\n\nt = int(read().strip())\nfor _ in range(t):\n    n, m = map(int, read().strip().split())\n    priority = list(map(int, read().strip().split()))\n    max_prior = max(priority)\n\n    q = deque()\n    for i, p in enumerate(priority):\n        q.append((i, p))\n\n    cnt = 1\n\n    while q:\n        now, prior = q.popleft()\n        if prior == max_prior:\n            if now == m:\n                print(cnt)\n                break\n            else:\n                priority.remove(max_prior)\n                max_prior = max(priority)\n                cnt += 1\n        else:\n            q.append((now, prior))\n"}, {"id": 30606538, "name": "\uad8c\uc138\uc778", "x": 5.459579944610596, "y": -21.196828842163086, "label": 0, "group": 48, "code": "import sys\nN = int(sys.stdin.readline())\nfor i in range(N):\n    a = list(map(int, sys.stdin.readline().split()))\n    q = list(map(int, sys.stdin.readline().split()))\n    count = 0\n    while not len(q) == 0:\n        if max(q) == q[0]:\n            if a[1] == 0:\n                count += 1\n                print(count)\n                break\n            else:\n                q.pop(0)\n                a[1] -= 1\n                count += 1\n        else:\n            q.append(q.pop(0))\n            a[1] = a[1] - 1 if not a[1] == 0 else len(q) - 1"}, {"id": 35930560, "name": "\uc815\uc900\ud638", "x": -5.624967575073242, "y": 5.217423439025879, "label": 0, "group": 49, "code": "#12.01 \ubc31\uc900 - \ud504\ub9b0\ud130 \ud050\ndef queue(l,num):\n    count = 1\n    while True:\n        if num == 0:\n            if l[num] == max(l):\n                return count\n            else:\n                l.append(l.pop(0))\n                num = len(l)-1\n        elif l[0] == max(l):\n            l.pop(0)\n            num -= 1\n            count += 1\n        else:\n            l.append(l.pop(0))\n            num -= 1\n\nT=int(input())\nfor _ in range(T):\n    n,num = map(int,input().split())\n    l=list(map(int,input().split()))\n    print(queue(l,num))"}, {"id": 19230443, "name": "\ud64d\ub9ac\ub098", "x": 19.67510414123535, "y": 0.6738555431365967, "label": 0, "group": 49, "code": "test_num = int(input())\n\nfor test_times in range(test_num):\n    doc_num, target_doc = list(map(int, input().split(' ')))\n    important = list(map(int, input().split(' ')))\n    index_list = list(map(int, range(len(important))))\n    target_check = -1\n    count = 0\n    while target_check != target_doc:\n        \n        if max(important) == important[0]:\n            important.pop(0)\n            target_check = index_list.pop(0)\n            count += 1\n        else:\n            temp = important.pop(0)\n            important.append(temp)\n            temp_index = index_list.pop(0)\n            index_list.append(temp_index)\n\n    print(count)\n    "}, {"id": 7127074, "name": "\uc608\uc6a9\uae30", "x": 6.010391712188721, "y": -8.340376853942871, "label": 0, "group": 49, "code": "import sys\n\ndef operate(paperList, target=0):\n  target_location = target\n  count = 0\n  while len(paperList) > 0:\n    if paperList[0] >= max(paperList):\n      paperList.pop(0)\n      target_location -= 1\n      count += 1\n    else:\n      paper = paperList.pop(0)\n      paperList.append(paper)\n      if target_location == 0:\n        target_location = len(paperList) - 1\n      else:\n        target_location -= 1\n    if target_location < 0 : break\n  print(count)\n\nfor _ in range(int(sys.stdin.readline())):\n  N, M = map(int, sys.stdin.readline().split())\n  papers = list(map(int, sys.stdin.readline().split()))\n  operate(papers, M)"}, {"id": 18091455, "name": "\ud55c\uac00\uc778", "x": -34.43142318725586, "y": -4.857468128204346, "label": 0, "group": 49, "code": "import sys\n\nclass Queue:\n    def __init__(self, arr):\n        self.que = []\n        for i in range(len(arr)) :\n            self.que.append((i, arr[i]))\n\n    def enque(self, data : list):\n        self.que.append(data)\n\n    def deque(self):\n        ret = self.que[0]\n        self.que = self.que[1:]\n        return ret\n\n    def isEmpty(self):\n        return len(self.que) == 0\n\n    def isFirstBiggest(self):\n        if len(self.que) == 1 :\n            return True\n        else :\n            for i in range(1, len(self.que)) :\n                if self.que[0][1] < self.que[i][1] :\n                    return False\n            return True\n\nT = int(sys.stdin.readline())\ntestCase = []\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    testCase.append([M] + list(map(int, sys.stdin.readline().split())))\n\nfor case in testCase:\n    # each tuple has tuple pair : (documentID, importance)\n    N, queue = case[0], Queue(case[1:])\n    printed = []\n\n    while not queue.isEmpty():\n        if queue.isFirstBiggest() :\n            printed.append(queue.deque())\n        else :\n            queue.enque(queue.deque())\n\n        if len(printed) != 0 and printed[-1][0] == N:\n            print(len(printed))\n            break"}, {"id": 25705462, "name": "\ucd5c\uc724\uc11c", "x": 2.9554569721221924, "y": -18.212324142456055, "label": 0, "group": 50, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int,input().split())\n    queue = list(map(int,input().split()))\n\n    count = 0\n    while True:\n        if max(queue) > queue[0]:\n            queue.append(queue.pop(0))\n            if m == 0:\n                m = len(queue) - 1\n            else:\n                m -= 1\n        else:\n            queue.pop(0)\n            count += 1\n            if m == 0:\n                print(count)\n                break\n            else:\n                m -= 1"}, {"id": 46377365, "name": "\ucc28\uc2b9\uc6d0", "x": -1.8488547801971436, "y": -22.812841415405273, "label": 0, "group": 50, "code": "t = int(input())\ntarget = 0\nfor _ in range(t):\n    n, m = map(int, input().split())\n    n_list = list(map(int, input().split()))\n    cnt = 0\n    \n    while m != -1:\n        if n_list[0] == max(n_list):\n            n_list.pop(0)\n            m -= 1\n            cnt += 1\n        else:\n            n_list.append(n_list.pop(0))\n            \n            if m == 0:\n                m = len(n_list) - 1\n            else:\n                m -= 1\n    print(cnt)"}, {"id": 29294099, "name": "\ud55c\uc608\uc2ac", "x": 7.779068946838379, "y": 23.95821762084961, "label": 0, "group": 50, "code": "import sys\nT = int(sys.stdin.readline())\nfor i in range(T):\n  count = 0\n  n, m = map(int, sys.stdin.readline().split())\n  rank = list(map(int, sys.stdin.readline().split()))\n  while rank:\n    if rank[0] == max(rank):\n      count += 1\n      if m == 0: break\n      rank.pop(0)\n      if m: m -= 1\n      else: m = len(rank)-1\n    else:\n      rank = rank[1:]+rank[:1]\n      if m: m -= 1\n      else: m = len(rank)-1\n  print(count)"}, {"id": 26222528, "name": "\ucd5c\uc218\ube48", "x": 1.2233054637908936, "y": 15.427179336547852, "label": 0, "group": 50, "code": "def has_bigger(l, p):\n    for i in l:\n        if i > p:\n            return True\n    return False\n\nT = int(input())\n\nfor _ in range(T):\n    N, I = [int(x) for x in input().split()]\n    idx_q = list(range(N))\n    prior_q = [int(x) for x in input().split()]\n    print_q = []\n\n    while not print_q or print_q[-1] != I:\n        if has_bigger(prior_q, prior_q[0]):\n            prior_q.append(prior_q.pop(0))\n            idx_q.append(idx_q.pop(0))\n        else:\n            print_q.append(idx_q.pop(0))\n            prior_q.pop(0)\n\n    print(len(print_q))"}, {"id": 25848864, "name": "\uc190\ub9cc\uc11d", "x": 6.5206732749938965, "y": -6.0363922119140625, "label": 0, "group": 51, "code": "num = int(input())\nfor _ in range(num):\n    n, m = map(int, input().split())\n    li = list(map(int, input().split()))\n    doc = [0]*n\n    doc[m]=1\n    ans=0\n    while sum(doc)!=0:\n        if li[0]==max(li):\n            li.pop(0)\n            doc.pop(0)\n            ans+=1\n        else:\n            li.append(li.pop(0))\n            doc.append(doc.pop(0))\n    print(ans)"}, {"id": 46748789, "name": "\uc724\uc18c\uc774", "x": -1.9410861730575562, "y": 4.45858097076416, "label": 0, "group": 51, "code": "#467\n\nT = int(input())\n\n\n\nfor i in range(T):\n    N, M  = map(int, input().split(' '))\n    imp = list(map(int, input().split(' ')))\n    idx = list(i for i in range(len(imp)))\n    idx[M] = 'target'\n    cnt = 0\n    while True :\n        if imp[0] == max(imp):\n            cnt +=1 \n            if 'target' == idx[0]:\n                print(cnt)\n                break\n            else: \n                imp.pop(0)\n                idx.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 44587805, "name": "\uc815\uc138\ud601", "x": 27.33963394165039, "y": -3.3636269569396973, "label": 0, "group": 51, "code": "import sys\n\ninput = lambda: sys.stdin.readline().strip()\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    list_imp = list(map(int, input().split()))\n    count = 0\n    while list_imp:\n        max_imp = max(list_imp)\n        p = list_imp.pop(0)\n        if p < max_imp:\n            list_imp.append(p)\n            m = (m - 1) % len(list_imp)\n        else:\n            count += 1\n            if m == 0:\n                print(count)\n                break\n            m = (m - 1) % len(list_imp)"}, {"id": 27313821, "name": "\ubc15\uc138\uc601", "x": 18.671175003051758, "y": -9.635391235351562, "label": 0, "group": 51, "code": "for _ in range(int(input())):\n    N, M = map(int, input().split())\n    priority = list(map(int, input().split()))\n    idx = list( False for _ in range(len(priority)))\n    idx[M] = True\n    cnt = 0\n    while priority:\n        if priority[0] != max(priority):\n            priority.append(priority.pop(0))\n            idx.append(idx.pop(0))\n        else:\n            cnt += 1\n            if idx[0]:\n                print(cnt)\n                break\n            else:\n                priority.pop(0)\n                idx.pop(0)\n"}, {"id": 16968585, "name": "\ub0a8\uad81\ud61c\uc6d0", "x": 29.123586654663086, "y": 7.785079002380371, "label": 0, "group": 52, "code": "test_case=int(input())\n\nfor _ in range(test_case):\n    n,m=list(map(int,input().split(' ')))\n    queue=list(map(int,input().split(' ')))\n    queue=[(i,idx) for idx, i in enumerate(queue)]\n     \n    count=0\n    while True:\n        if queue[0][0]==max(queue)[0]:\n            count+=1\n            if queue[0][1]==m:\n                print(count)\n                break\n            else:\n                queue.pop(0)\n        else:\n            queue.append(queue.pop(0))\n"}, {"id": 25261567, "name": "\ubc30\uc218\ud638", "x": 12.30942153930664, "y": 3.9999923706054688, "label": 0, "group": 52, "code": "tc=int(input())\ncount=0\n\nfor i in range(tc):\n    n, m=map(int, input().split())\n    que=list(map(int, input().split()))\n    count=0\n    imp=que[m]\n    po=0\n    while len(que)>0:\n        if m==0 and que[0]!=max(que):\n            que.append(que.pop(0))\n            m=len(que)-1\n        elif m==0 and que[0]==max(que):\n            count+=1\n            break\n        elif que[0]==max(que):\n            po=que.pop(0)\n            count+=1\n            m-=1           \n        else:\n            que.append(que.pop(0))\n            m-=1\n       \n    print(count)\n"}, {"id": 14166808, "name": "\uc774\ubbfc\uae30", "x": 0.24107280373573303, "y": 9.790131568908691, "label": 0, "group": 52, "code": "import sys;\ninput = sys.stdin.readline;\n\nT = int(input());\nfor t in range(T):\n    n, m = map(int, input().split());\n    importance = list(map(int ,input().split()));\n    c = 0;\n    while(True):\n        if(max(importance) == importance[0]):\n            c += 1;\n            if(m == 0):\n                break;\n            importance = importance[1:];\n            m -= 1;\n        else:\n            importance = importance[1:] + [importance[0]];\n            if(m == 0):\n                m = len(importance) - 1;\n            else:\n                m -= 1;\n    print(c);\n\n"}, {"id": 20227552, "name": "\ubc15\uc0c1\ud601", "x": -1.2896281480789185, "y": -12.70515251159668, "label": 0, "group": 52, "code": "case = int(input())\nfor i in range(case): \n    n,m = map(int, input().split())\n    queue = list(map(int, input().split()))       \n    priority_finder = [0 for i in range(n)]   \n    priority_finder[m] = \"True\"                  \n    count = 0\n    while True:\n        if queue[0] == max(queue):    \n            count += 1                \n            if priority_finder[0] == \"True\": \n                print(count)\n                break\n            else:\n                del queue[0]\n                del priority_finder[0]\n        else:\n            queue.append(queue[0])\n            del queue[0]\n            priority_finder.append(priority_finder[0])\n            del priority_finder[0]\n"}, {"id": 36723327, "name": "\ucd5c\uc6b0\uc2dd", "x": -4.586707592010498, "y": -10.910632133483887, "label": 0, "group": 53, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 347418, "name": "\ub958\uc218\uc601", "x": 28.554889678955078, "y": 11.902933120727539, "label": 0, "group": 53, "code": "for T in range(int(input())):\n    n,m=map(int,input().split())\n    a= list(map(int,input().split()))\n    b=[[i,a[i]]for i in range(n)]\n    a.sort()\n    a.reverse()\n    index=0\n    cnt=1\n\n    for number in a:\n        while 1:\n            if b[index][1]==number:\n                break\n            index=(index+1)%n\n        if b[index][0]==m:\n            print(cnt)\n            break\n        cnt+=1\n        index=(index+1)%n\n\n"}, {"id": 8786491, "name": "\uc1a1\uc724\uc815", "x": -3.301117181777954, "y": -1.8422255516052246, "label": 0, "group": 53, "code": "import sys\n\nT = int(sys.stdin.readline().replace('\\n', ''))\n\nfor i in range(T):\n    N, M = [int(x) for x in sys.stdin.readline().replace('\\n', '').split(' ')]\n    print_q = [int(x) for x in sys.stdin.readline().replace('\\n', '').split(' ')]\n    priorities = sorted(print_q.copy(), key=lambda x: -x)\n    target_priority = print_q[M]\n    target_index = [False for i in range(N)]\n    target_index[M] = True\n\n    count = 0\n    while True:\n        if print_q[0] == priorities[0]:\n            count += 1\n            if target_index[0] == True:\n                print(count)\n                break\n            print_q.pop(0)\n            priorities.pop(0)\n            target_index.pop(0)\n        else:\n            print_q.append(print_q.pop(0))\n            target_index.append(target_index.pop(0))"}, {"id": 36157813, "name": "\uc591\uc9c4\uc131", "x": 12.914970397949219, "y": 6.8815531730651855, "label": 0, "group": 53, "code": "import sys\nimport math\n\ninput = sys.stdin.readline\nnum = int(input())\nfor iii in range(num):\n    n, m = map(int, input().split())\n    key_index = m\n    ans = 1\n    arr = list(map(int, input().split()))\n    while True:\n        if arr[0] < max(arr):\n            arr.append(arr[0])\n            del arr[0]\n            if key_index == 0:\n                key_index = len(arr) - 1\n            else:\n                key_index -= 1\n        elif arr[0] == max(arr):\n            if key_index == 0:\n                print(ans)\n                break\n            del arr[0]\n            key_index -= 1\n            ans += 1"}, {"id": 48293603, "name": "\uc724\uc0c1\ud604", "x": -9.012073516845703, "y": -0.25528979301452637, "label": 0, "group": 54, "code": "import sys\n\nfor i in range(int(sys.stdin.readline().rstrip())):\n\n    n, index = map(int, sys.stdin.readline().rstrip().split(' '))\n    n_list = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    f = 0\n    \n    while True:\n            \n        if n_list[0] < max(n_list):\n            n_list.append(n_list[0])\n                \n            if index == 0:\n                index = n\n        else:\n            n -= 1\n            f += 1\n\n            if index == 0:\n                break\n            \n        del n_list[0]\n        index -= 1\n        \n    print(f)  "}, {"id": 34370256, "name": "\uc2e0\ucc3d\uc6d0", "x": 16.601163864135742, "y": -11.720538139343262, "label": 0, "group": 54, "code": "from sys import stdin\n\ndef solution(M, imp):\n    count = 0\n    top = max(imp, key = lambda x:x[1])\n    \n    while(imp):\n        item = imp.pop(0)\n        if item[1] == top[1]:\n            count += 1\n            if item[0] == M:\n                return count\n            else:\n                top = max(imp, key = lambda x:x[1])\n        else:\n            imp.append(item)\n            \nfor _ in range(int(stdin.readline())):\n    N, M = map(int, stdin.readline().split())\n    imp = list(enumerate(map(int, stdin.readline().split())))\n    \n    print(solution(M, imp))"}, {"id": 19579000, "name": "\uc7a5\uc120\uc219", "x": 13.655162811279297, "y": 4.160127639770508, "label": 0, "group": 54, "code": "import sys\ninput=sys.stdin.readline\n\nk = int(input())\n\nfor _ in range(k):\n    n, m = map(int, input().split())\n    pcnt = [0] * 10\n    q = []\n    for i, p in enumerate(map(int, input().split())):\n        pcnt[p] += 1\n        q.append((i, p))\n    \n    front = 0\n    rear = n\n    q.append(None)\n    cnt = 0\n    \n    while True:\n        idx, p = q[front]\n        front = (front + 1) % (n + 1)\n        if any(x != 0 for x in pcnt[p + 1:]):\n            q[rear] = (idx, p)\n            rear = (rear + 1) % (n + 1)\n        else:\n            pcnt[p] -= 1\n            cnt += 1\n            if idx == m:\n                print(cnt)\n                break\n"}, {"id": 26060903, "name": "\uc784\uc218\uc815", "x": 10.820281982421875, "y": -7.884901523590088, "label": 0, "group": 54, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N,M = map(int, input().split())\n    arr = list(map(int, input().split()))\n    idx = [i for i in range(N)]\n    cnt = 0\n    while len(arr)>0:\n        i = arr.pop(0)\n        j = idx.pop(0)\n        if len(arr)>0 and i<max(arr):\n            arr.append(i)\n            idx.append(j)\n        else:\n            cnt += 1\n            if j==M:\n                break\n    print(cnt)"}, {"id": 37718408, "name": "\ud55c\ud61c\uc9c4", "x": -8.522101402282715, "y": -13.978621482849121, "label": 0, "group": 55, "code": "import sys\ninput = sys.stdin.readline\n\nline_num = int(input())\n\nfor i in range(line_num):\n    num = 0\n    line = list(map(int,input().strip().split()))\n    queue = list(map(int,input().strip().split()))\n    pointer = line[1]\n\n    while(queue):\n        #print(pointer)\n        #print(queue)\n        if(queue[0] != max(queue)):\n            queue.append(queue.pop(0))\n            if(pointer):\n                pointer-=1\n            else:\n                pointer = len(queue) - 1\n        else:\n            queue.pop(0)\n            num+=1\n            if(pointer==0):\n                print(num)\n                break\n            pointer-=1\n\n"}, {"id": 29750269, "name": "\uc2ec\uc2dc\ud558", "x": 22.681612014770508, "y": 13.691168785095215, "label": 0, "group": 55, "code": "import sys\nnm=[]\narr=[]\nresult = []\nn = int(input())\n\nfor _ in range(n):\n    nm.append(list(map(int,sys.stdin.readline().rstrip().split()))) \n    arr.append(list(map(int,sys.stdin.readline().rstrip().split())))\n\nindex = 0\nfor i in range(n):\n    index = nm[i][1]\n    lenth = nm[i][0] \n    cnt=0 \n    while True:\n        for j in range(lenth):\n            if arr[i][j] == max(arr[i]) : \n                arr[i][j] = 0\n                cnt+=1\n            if arr[i][j] == 0 and j ==index :\n                result.append(cnt)\n                break  \n        if arr[i][index] == 0: break \n\nprint(str(result).replace('[','').replace(']','').replace(',','\\n').replace(' ',''))"}, {"id": 45210654, "name": "\ud669\uc6b0\uc2ac\ud61c", "x": 17.8804988861084, "y": -8.128925323486328, "label": 0, "group": 55, "code": "import sys\n\ndef ishigher(n,list_):\n    for i in list_:\n        if i > n:\n            return True\n    return False\n\n\nfor i in range(int(input())):\n    N,M = map(int,input().split())\n    stack = list(map(int,input().split()))\n    index = [_ for _ in range(N)]\n    cnt = 0\n    while True:\n        target = stack.pop(0)\n        target_index = index.pop(0)\n        if not ishigher(target,stack):\n            cnt += 1\n            if target_index == M:\n                print(cnt)\n                break\n        else:\n            stack.append(target)\n            index.append(target_index)"}, {"id": 44622186, "name": "\uc18c\uc774\ud604", "x": 2.4345295429229736, "y": 13.549881935119629, "label": 0, "group": 55, "code": "import sys\ninput = sys.stdin.readline\n\ndef order(ps, m):\n    idx = list(range(len(ps)))\n    count = 1\n    while ps:\n        if ps[0] == max(ps):\n            outi, outv = idx.pop(0), ps.pop(0)\n            if outi == m: return count\n            count += 1\n        else:\n            ps.append(ps.pop(0))\n            idx.append(idx.pop(0))\n\nT = int(input())\nfor _ in range(T):\n    n, m = map(int, input().split())\n    ps = list(map(int, input().split()))\n    print(order(ps, m))"}, {"id": 34131562, "name": "\uc190\uc6d0\ud76c", "x": 4.559591293334961, "y": -13.010327339172363, "label": 0, "group": 56, "code": "times = int(input())\nfor case in range(times):\n    numberOfDocuments, quest = input().split()\n    numberOfDocuments = int(numberOfDocuments)\n    quest = int(quest)\n    queue = [int(x) for x in input().split()]\n    \n    first = 0\n    order = -1\n    \n    while True:\n        maxNum = max(queue)\n        if maxNum < 0:\n            break\n        idx = first\n        for i in queue:\n            if queue[idx] == maxNum:\n                queue[idx] = order\n                order = order - 1\n                first = (idx + 1) % numberOfDocuments\n            idx = (idx + 1) % numberOfDocuments\n    \n    print(queue[quest] * -1)"}, {"id": 25460417, "name": "\uac15\uc9c0\ud658", "x": -14.3294038772583, "y": -7.48115348815918, "label": 0, "group": 56, "code": "K = int(input())\nfor _ in range(K):\n    answer = 0\n    length, location = map(int,input().split())\n    priorities = list(map(int, input().split()))\n    sorted_priorities = sorted(priorities, reverse=True)\n    sorted_priorities.append(0)\n    i_p = [(i,p) for i, p in enumerate(priorities)]\n    maxV = sorted_priorities.pop(0)\n\n    while i_p:\n        temp = i_p.pop(0)\n        if temp[1] != maxV:\n            i_p.append(temp)\n        else:\n            maxV = sorted_priorities.pop(0)\n            answer+=1\n            if location == temp[0]:\n                print(answer)\n                break\n    "}, {"id": 27103944, "name": "\uc1a1\ubbf8\uc8fc", "x": 14.900310516357422, "y": 8.204819679260254, "label": 0, "group": 56, "code": "import sys\n\nT = int(sys.stdin.readline())\n\nanswer = []\n\nfor i in range(T):\n    N,M = map(int,sys.stdin.readline().split())\n\n    prior = list(map(int, sys.stdin.readline().split()))\n\n    idx = list(range(N))    \n\n    idx[M] = \"target\"\n\n    cnt = 0\n\n    while len(prior) > 0 :\n        if prior[0] == max(prior):\n            cnt+=1\n\n            if idx[0] == \"target\":\n                answer.append(cnt)\n                break\n            else:\n                del idx[0]\n                del prior[0]\n        else:\n            prior.append(prior[0])\n            del prior[0]\n            idx.append(idx[0])\n            del idx[0]\n\nfor i in answer:\n    print (i)"}, {"id": 37254832, "name": "\uc5f0\uc815\ud6c8", "x": -5.3205108642578125, "y": 14.103508949279785, "label": 0, "group": 56, "code": "import sys\n\nN = int(sys.stdin.readline())\n\n\nfor _ in range (N):\n  N, M = map(int,sys.stdin.readline().split())\n  data_k = list(map(int, sys.stdin.readline().split()))\n  count = 0\n\n  data = []\n\n  for i in range(len(data_k)):\n    data.append([data_k[i],i])\n\n  a = max(data)\n\n  a = data[data.index(a)][0]\n\n  answer=[]\n\n  while True:\n    if data[0][0]==a:\n      b = data[0]\n      answer.append(b)\n      data.remove(data[0])\n      if len(data)==0:\n        break\n      else:\n        a = data[data.index(max(data))][0]\n    else:\n      c = data[0]\n      data.append(c)\n      data.remove(data[0])\n\n  for i in range (len(answer)):\n    if answer[i][1]==M:\n      print(i+1)\n      break\n  \n\n\n\n\n"}, {"id": 44577619, "name": "\ub0a8\uad81\ubc94\uc11d", "x": 0.1675439327955246, "y": -28.38467788696289, "label": 0, "group": 57, "code": "for _ in range(int(input())):\n    documents, query = list(map(int, input().split(' ')))\n    affinities = list(map(int, input().split(' ')))\n    affinity_table = {item: affinities.count(item) for item in set(affinities)}\n\n    cursor, queue_idx = 0, 1\n    for maxval in sorted(affinity_table.keys(), reverse=True):\n        solved = False\n        while affinity_table[maxval] > 0:\n            if affinities[cursor] == maxval:\n                if query == cursor:\n                    solved = True\n                    print(queue_idx)\n                    break\n                affinities[cursor] = 0\n                queue_idx += 1\n                affinity_table[maxval] -= 1\n            cursor = (cursor + 1) % len(affinities)\n        if solved: break"}, {"id": 15407413, "name": "\ubc15\ud558\uc120", "x": -12.677631378173828, "y": -20.154708862304688, "label": 0, "group": 57, "code": "def solution(N, M, nums):\n    count_dict = {}\n    for numtup in nums:\n        if not numtup[1] in count_dict.keys():\n            count_dict.update({numtup[1]:0})\n        count_dict.update({numtup[1]: count_dict.get(numtup[1]) + 1})\n    dict_keys = list(count_dict.keys())\n    dict_keys.sort(reverse=True)\n    dict_q = []\n    for dict_key in dict_keys:\n        for i in range(count_dict.get(dict_key)):\n            dict_q.append(dict_key)\n\n    answer = 0\n    cur_priority = dict_q.pop(0)\n    while True:\n        if nums[0][1] != cur_priority:\n            nums.append(nums[0])\n            nums.pop(0)\n            # print('set back', nums)\n        else:\n            if nums[0][0]==M:\n                answer += 1\n                # print('answer', nums)\n                break\n            else:\n                nums.pop(0)\n                answer += 1\n                cur_priority = dict_q.pop(0)\n                # print('prioriy pop', nums)\n                # print('cur priority', cur_priority)\n    # print(answer)\n    return answer\n\nif __name__ == '__main__':\n    count_cases = int(input())\n    for i in range(count_cases):\n        N, M = [int(x) for x in input().split(' ')]\n        nums = [(i, int(x)) for i, x in enumerate(input().split(' '))]\n        answer = solution(N, M, nums)\n        print(answer)\n"}, {"id": 16706195, "name": "\uc774\ubbfc\uc815", "x": -3.2067949771881104, "y": 10.963306427001953, "label": 0, "group": 57, "code": "t=int(input())\nfor i in range(t):\n    n,m=map(int, input().split())\n    a=list(map(int, input().split()))\n    aa=[]\n    for i in range(n):\n        aa.append([i,a[i]])\n    p=[]\n\n    while a:\n        if aa[0][1]==max(a):\n            p.append(aa[0])\n            aa.pop(0)\n            a.remove(max(a))\n        else:\n            aa.append(aa[0])\n            aa.pop(0)\n\n    for i in p:\n        if i[0]==m:\n            print(p.index(i)+1)"}, {"id": 44456858, "name": "\uc804\uc9c4\uc544", "x": 0.9665535092353821, "y": 2.1484556198120117, "label": 0, "group": 57, "code": "import sys\n\nK = int(sys.stdin.readline())\n\nfor i in range(K) :\n    N, M = map(int, sys.stdin.readline().split())\n    nums = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(N))\n    idx[M] = 'tg'\n\n    result = 0\n\n    while True :\n        if nums[0] == max(nums) :\n            result += 1\n\n            if idx[0] == 'tg' :\n                print(result)\n                break\n            else :\n                nums.pop(0)\n                idx.pop(0)\n        else :\n            nums.append(nums.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 16869641, "name": "\ubcf5\uc6a9\ucca0", "x": -5.757075786590576, "y": 2.5752131938934326, "label": 0, "group": 58, "code": "import sys\n\nt = int(sys.stdin.readline())\n\nfor i in range(t):\n    n,m = list(map(int, sys.stdin.readline().split(\" \")))\n    arr = list(map(int, sys.stdin.readline().split(\" \")))\n    queue = []\n    for q in range(n):\n        queue.append([q,arr[q]])\n    x = 0\n    while x < n:\n        is_bigger = False\n        for y in range(x,n):\n            if queue[x][1] < queue[y][1]:\n                is_bigger = True\n                break\n        if is_bigger:\n            queue.append(queue.pop(x))\n        else:\n            x += 1\n    for x in range(len(queue)):\n        if queue[x][0] == m:\n            print(x+1)"}, {"id": 26189522, "name": "\uc548\ubbfc\ucca0", "x": -18.9525146484375, "y": 12.27902889251709, "label": 0, "group": 58, "code": "import sys\n\nt = int(sys.stdin.readline().strip())\nresult = []\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().strip().split(' '))\n    num = list(map(int, sys.stdin.readline().strip().split(' ')))  # \ubb38\uc11c\ub4e4\uc758 \uc911\uc694\ub3c4\n    idx = [0 for _ in range(n)]\n    idx[m] = \"target\"  # \uba87 \ubc88\uc9f8\ub85c \ucd9c\ub825\ub418\ub294 \uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc704\uce58 \ud45c\uc2dc\n    cnt = 0  # \uba87 \ubc88\uc9f8\ub85c \ucd9c\ub825\ub418\ub294 \uc9c0\n\n    while True:\n        if num[0] == max(num):\n            cnt += 1\n            if idx[0] == \"target\":\n                result.append(cnt)\n                break\n            else:\n                del num[0]\n                del idx[0]\n        else:\n            num.append(num[0])\n            del num[0]\n            idx.append(idx[0])\n            del idx[0]\nprint(*result, sep=\"\\n\")"}, {"id": 27511300, "name": "\uae40\uc18c\uc740", "x": -12.822311401367188, "y": -24.801149368286133, "label": 0, "group": 58, "code": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor _ in range(n):\n    a, b = map(int ,input().split())\n    array = list(map(int, input().split()))\n    count = 0\n    if len(array) == 1:\n        print(1)\n    else:\n        index = b\n        while 1:\n            if index == 0:\n                if array[index] == max(array):\n                    count += 1\n                    print(count)\n                    break\n                else:\n                    c = array.pop(0)\n                    array.append(c)\n                    index = len(array) - 1\n            else:\n                if array[0] == max(array):\n                    array.pop(0)\n                    index -= 1\n                    count += 1\n                else:\n                    c = array.pop(0) \n                    array.append(c)\n                    index -= 1"}, {"id": 38283799, "name": "\uc724\ud61c\uc5f0", "x": -23.90999984741211, "y": -11.729156494140625, "label": 0, "group": 58, "code": "import sys\ninput=sys.stdin.readline\n\nT=int(input())\nfor _ in range(T):\n    N,K = list(map(int,input().split()))\n    seq=list(map(int,input().split()))\n    index=[i for i in range(len(seq))]\n    count={}\n    for i in range(1,10):\n        count[i]=0\n    for i in seq:\n        if i not in count: count[i]=0\n        count[i]+=1\n        \n    top=max(seq)\n    queue=[]\n    head=0\n    tail=0\n    dead=[]\n    popcount=0\n    while True:\n        if seq[head]==top: # pop!\n            count[top]-=1\n            popcount+=1\n            if index[head]==K:\n                sys.stdout.write(str(popcount)+'\\n')\n                break\n            while count[top]==0 and top!=1: \n                top-=1\n                \n                \n        else:\n            tail+=1\n            seq.append(seq[head])\n            index.append(index[head])\n        head+=1\n"}, {"id": 46535772, "name": "\uc548\uc7ac\ud604", "x": 23.36774444580078, "y": 41.46926498413086, "label": 0, "group": 59, "code": "import sys\nimport heapq\n\ndef checking_num(N, M):\n\tqueue1 = []\n\tqueue2 = []\n\tnum_list = list(map(int, sys.stdin.readline().split()))\n\tfor i in range(N):\n\t\theapq.heappush(queue1, -num_list[i])\n\t\tif(i == M):\n\t\t\tsave_priority = num_list[i]\n\t\tqueue2.append((num_list[i], i))\n\tcount = 1\n\twhile(1):\n\t\twhile(-queue1[0] != queue2[0][0]):\n\t\t\tqueue2.append(queue2.pop(0))\n\t\tif(queue2[0][1] == M):\n\t\t\tbreak\n\t\theapq.heappop(queue1)\n\t\tqueue2.pop(0)\n\t\tcount +=1\n\n\t\t\n\treturn count\n\ndef main():\n\ttest_case = int(input())\n\tfor i in range(test_case):\n\t\tN, M = map(int, sys.stdin.readline().split())\n\t\tprint(checking_num(N, M))\n\t\t\n\t\t\nif __name__ == '__main__':\n\tmain()\n"}, {"id": 19641911, "name": "\uc804\uc120\ubbf8", "x": 20.188720703125, "y": -12.823076248168945, "label": 0, "group": 59, "code": "T = int(input())\nfor tc in range(T):\n    N, M = list(map(int, input().split()))\n    docs = list(map(int, input().split()))\n\n    docs_idx = [ _ for _ in range(N)]\n    maxV = max(docs)\n    cnt = 1\n\n    while docs:\n        doc = docs.pop(0)\n        idx = docs_idx.pop(0)\n        if doc == maxV and idx == M:\n            print(cnt)\n            break\n\n        if maxV == doc:\n            cnt += 1\n            maxV = max(docs)\n        else:\n            docs.append(doc)\n            docs_idx.append(idx)"}, {"id": 42324887, "name": "\uc870\ud61c\uc815", "x": -4.119369029998779, "y": 3.99137020111084, "label": 0, "group": 59, "code": "# 1966 - \ud504\ub9b0\ud130 \ud050\nimport sys\n\n\nt = int(sys.stdin.readline().rstrip())\n\nfor _ in range(t):\n    n,m = list(map(int, sys.stdin.readline().split()))\n    imp = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    order = 0\n    \n    while True:\n        if imp[0]==max(imp):\n            order += 1\n                        \n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))      "}, {"id": 15155911, "name": "\uc724\uc138\uc778", "x": -12.681107521057129, "y": -25.488576889038086, "label": 0, "group": 59, "code": "N = int(input())\n\nfor _ in range(N):\n    _, want = list(map(int, input().split(\" \")))\n    arr = list(map(int, input().split(\" \")))\n    count = 0\n    \n    while True:\n        if len(arr) > 1:\n            head = arr[0]\n            if head < max(arr):\n                if want <= 0:\n                    want = len(arr)-1\n                else:\n                    want -= 1\n                arr.append(arr.pop(0))\n            else:\n                count += 1\n                if want <= 0:\n                    print(count)\n                    break\n                else:\n                \twant -= 1\n                arr.pop(0)\n        elif len(arr) == 1:\n            count += 1\n            if want <= 0:\n                print(count)\n                break\n            else:\n            \twant -= 1\n            arr.pop(0)\n        else:\n            break"}, {"id": 24046499, "name": "\ud55c\uacbd\ud604", "x": 8.97551441192627, "y": -8.472611427307129, "label": 0, "group": 60, "code": "import sys\nT = int(sys.stdin.readline())\n\nfor i in range(T):\n    ans = 0\n    N, M = map(int, sys.stdin.readline().split())\n    tc = list(map(int, sys.stdin.readline().split()))\n    tm = [0] * N\n    tm[M] = 1\n    popData = max(tc)\n    while True:\n        tempM = tm.pop(0)\n        tempC = tc.pop(0)\n        if tempC == popData:\n            ans += 1\n            if tempM == 1:\n                break\n            popData = max(tc)\n        else:\n            tc.append(tempC)\n            tm.append(tempM)\n    print(ans)"}, {"id": 29718105, "name": "\uae40\uac15\uc6b0", "x": -38.75973129272461, "y": -4.8673014640808105, "label": 0, "group": 60, "code": "import sys\n\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass PrintQue:\n    def __init__(self):\n        self.front = None\n        self.rear = None\n\n    def is_first_priority(self):\n        front_data = self.front.data\n        temp = self.front.next\n        while temp:\n            if front_data < temp.data:\n                return False\n            temp = temp.next\n        return True\n\n    def enqueue(self, data):\n        new_node = Node(data)\n        if self.front:\n            self.rear.next = new_node\n            self.rear = new_node\n        else:\n            self.front = new_node\n            self.rear = new_node\n\n    def node_to_dequeue(self):\n        if self.front:\n            while not self.is_first_priority():\n                node = self.front\n                self.front = self.front.next\n                node.next = None\n\n                self.rear.next = node\n                self.rear = self.rear.next\n\n            node_to_delete = self.front\n            self.front = self.front.next\n            return node_to_delete\n\n    def search_mth_node(self, m):\n        node_pointer = self.front\n        count = 0\n        while count < m:\n            node_pointer = node_pointer.next\n            count = count + 1\n        return node_pointer\n\n    def dequeue_counter(self, m):\n        count = 0\n        mth_node = self.search_mth_node(m)\n        while self.front is not None:\n            node_to_delete = self.node_to_dequeue()\n            count += 1\n            if node_to_delete is mth_node:\n                break\n\n        return count\n\n\ntest_case = int(sys.stdin.readline())\nfor _ in range(test_case):\n    print_queue =PrintQue()\n\n    N, M = map(int, sys.stdin.readline().split())\n    documents = list(map(int, sys.stdin.readline().split()))\n    for x in documents:\n        print_queue.enqueue(x)\n\n    print(print_queue.dequeue_counter(M))"}, {"id": 36074388, "name": "\ubcf5\ubb38\uc218", "x": -15.160521507263184, "y": -2.527778387069702, "label": 0, "group": 60, "code": "import sys\n\ndef is_top(arr:list,ele:int):\n    for num in arr:\n        if num > ele:\n            return 0\n    else:\n        return 1\n\n\ncount = int(sys.stdin.readline())\nfor _ in range(count):\n    n,m = map(int,sys.stdin.readline().split())\n    arr=list(map(int,sys.stdin.readline().split()))\n    count = 0\n    idx = m\n    while True:\n        if idx == 0 and is_top(arr,arr[0]):\n            print(count+1)\n            break\n        elif is_top(arr,arr[0]):\n            count += 1\n            arr.pop(0)\n            idx = (idx-1)%len(arr)\n        else:\n            arr.append(arr.pop(0))\n            idx = (idx-1)%len(arr)"}, {"id": 49012249, "name": "\uc870\ub3c4\ud76c", "x": 6.257630348205566, "y": -10.359912872314453, "label": 0, "group": 60, "code": "import sys\nT = int(sys.stdin.readline())\nfor tc in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    arr = [e for e in range(N)]\n    importance = list(map(int, sys.stdin.readline().split()))\n    cnt = 0\n    while len(arr) > 0:\n        j = importance[arr[0]]\n        for i in range(1, len(arr)):\n            if importance[arr[i]] > j:\n                arr.append(arr.pop(0))\n                break\n        else:\n            m = arr.pop(0)\n            cnt += 1\n            if m == M:\n                print(cnt)\n                break\n"}, {"id": 37522557, "name": "\uc2a4\ud14c\ud30c\ub2c8 \ub9ac", "x": -2.9488041400909424, "y": 3.548349380493164, "label": 0, "group": 61, "code": "import  sys \ninput = sys.stdin.readline\n\ntest_cases =int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split()))\n    impact = list(map(int, input().split()))\n    idx = list(range(len(impact)))\n    idx[m] ='target'\n\n    order = 0 \n    while True :\n        if impact[0] == max(impact):\n            order += 1\n            if idx[0]== 'target':\n                print(order)\n                break \n            else:\n                impact.pop(0)\n                idx.pop(0)\n        else:\n            impact.append(impact.pop(0))\n            idx.append(idx.pop(0))\n            "}, {"id": 22361983, "name": "\ud5c8\uc740\uc9c0", "x": 28.900108337402344, "y": 12.3065824508667, "label": 0, "group": 61, "code": "for _ in range(int(input())):\n    N, M=map(int, input().split())\n    a=list(map(int, input().split()))\n    b=1\n    while True:\n        c=a.index(max(a))\n        if M==c:\n            print(b)\n            break\n        else:\n            a+=a[:c]\n            del a[:c+1]\n            M+=(int(M<c)*N-c-1)\n            N-=1\n            b+=1"}, {"id": 25926417, "name": "\ud48d\uc120\ud654", "x": 0.1130962148308754, "y": -26.023113250732422, "label": 0, "group": 61, "code": "T = int(input())\n\nfor _ in range(T):\n\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n\n    current_position = M\n    priority = queue[M]\n    count = 0\n\n    while len(queue) != 0:\n        highest = max(queue)\n        front = queue.pop(0)\n\n        if current_position == 0:\n            if priority == highest:\n                count += 1\n                break\n            else:\n                queue.append(front)\n                current_position = len(queue) - 1\n        else:\n            current_position -= 1\n\n            if front == highest:\n                count += 1\n            else:\n                queue.append(front)\n\n    print(count)"}, {"id": 20903676, "name": "\uc784\uae30\ud601", "x": -35.12211608886719, "y": -5.476991653442383, "label": 0, "group": 61, "code": "# https://www.acmicpc.net/problem/1966\nimport sys\n\ninput = sys.stdin.readline\n\nclass Queue:\n    def __init__(self, n):\n        self.head = -1\n        self.fulsize = n\n        self.currsize = n\n        self.arr = [i+1 for i in range(n)]\n        self.rear = n-1\n\n    def put(self, num):\n        self.rear = (self.rear + 1) % self.fulsize\n        self.arr[self.rear] = num\n\n    def get(self):\n        self.head = (self.head + 1) % self.fulsize\n        return self.arr[self.head]\n\n    def empty(self):\n        return True if self.head == self.rear else False\n\n\nif __name__ == \"__main__\":\n    T = int(input())\n\n    for _ in range(T):\n        n, m = map(int, input().strip().split())\n        numlist = list(map(int, input().strip().split()))\n        que = Queue(n)\n        cnt = 0\n        for i in range(n):\n            if(i!=m):\n                que.put([numlist[i],False])\n            else:\n                que.put([numlist[i],True])\n        numlist.sort(reverse=True)\n        while True:\n            out = que.get()\n            if out[0] != numlist[0]:\n                que.put(out)\n            else:\n                numlist.pop(0)\n                cnt+=1\n                if out[1]:\n                    break\n        print(cnt)"}, {"id": 25419499, "name": "\ucd5c\uc7ac\ubbfc", "x": -14.248942375183105, "y": -20.30634880065918, "label": 0, "group": 62, "code": "T = int(input())\n\nfor tc in range(T):\n    N,M = map(int, input().split())\n    Q = list(map(int, input().split()))\n    count = 0\n    breaker = False\n    for i in range(N):\n        for idx, j in enumerate(Q):\n            if j == max(Q):\n                count += 1\n                if M == idx:\n                    print(count)\n                    breaker = True\n                elif M > idx:\n                    M -= (idx+1)\n                else:\n                    M += len(Q[idx+1:])\n                Q = Q[idx+1:] + Q[:idx]\n                break\n        if breaker:\n            break"}, {"id": 34533515, "name": "\uc2e0\uc131\uc6b0", "x": 16.711233139038086, "y": 20.906095504760742, "label": 0, "group": 62, "code": "for i in range(int(input())):\n  N,M=map(int,input().split())\n  main=list(map(int,input().split()))\n  check=[0 for _ in range(N)]\n  check[M]=1\n  cnt=0\n  while True:\n    if main[0]==max(main):\n      cnt+=1\n      if check[0]!=1:\n        del main[0]\n        del check[0]\n      else:\n        print(cnt)\n        break\n    else:\n      main.append(main[0])\n      check.append(check[0])\n      del main[0]\n      del check[0]\n"}, {"id": 49458477, "name": "\ud48d\uc0c1\ud601", "x": 10.294002532958984, "y": -1.2185930013656616, "label": 0, "group": 62, "code": "import sys\ncase = int(sys.stdin.readline())\nfor i in range(case):\n    queue = []\n    N,M = map(int,sys.stdin.readline().split())\n    count =0\n    queue = list(map(int,sys.stdin.readline().split()))\n    pointer = M\n    sorted_queue = sorted(queue,reverse=True)\n    while True:\n        if queue[0] == sorted_queue[0] and pointer == 0:\n            count +=1\n            print(count)\n            break\n            \n        elif queue[0] == sorted_queue[0]:\n            count +=1\n            sorted_queue.pop(0)\n            queue.pop(0)\n            pointer = (pointer-1)% len(queue)\n        else:\n            queue.append(queue.pop(0))\n            pointer = (pointer-1)% len(queue)"}, {"id": 11600853, "name": "\ubb38\uadfc\uc601", "x": -1.4333502054214478, "y": -17.74552345275879, "label": 0, "group": 62, "code": "T = int(input())\nfor testcase in range(T):\n    N, M = map(int, input().split())\n    waitingList = list(map(int, input().split()))\n    cnt = 0;\n    while(True):\n        if waitingList[0] == max(waitingList):\n            cnt += 1\n            if not M:\n                print(cnt)\n                break\n            del waitingList[0]\n            M -= 1\n            \n        else:\n            waitingList.append(waitingList[0])\n            del waitingList[0]\n            if M:\n                M -= 1\n            else:\n                M = len(waitingList)-1"}, {"id": 36959666, "name": "\uc724\uc9c4\uc11c", "x": 16.045921325683594, "y": 21.028621673583984, "label": 0, "group": 63, "code": "test_case=int(input())\n\nfor _ in range(test_case):\n  n,m=map(int, input().split())\n  s=list(map(int, input().split()))\n  idx=[0 for _ in range(n)]\n\n  idx[m]=1\n  cnt=0\n  while True:\n    if s[0]==max(s):\n      cnt+=1\n      if idx[0]==1:\n        print(cnt)\n        break\n      else:\n        del s[0]\n        del idx[0]\n    else:\n      s.append(s[0])\n      del s[0]\n      idx.append(idx[0])\n      del idx[0] "}, {"id": 23591385, "name": "\uc81c\uac08\uc6d0\uc790", "x": -20.738361358642578, "y": 13.81809139251709, "label": 0, "group": 63, "code": "# priority 1-9 : 9 Highest\nimport sys\n\n\ncases = int(sys.stdin.readline())\n\nfor case in range(cases):\n    time = 0\n    front = 0\n\n    n, m = map(int, sys.stdin.readline().split())\n    # n : queue\uc5d0 \uc788\ub294 job \uc758 \uc218\n    # m : \ub0b4 job \uc758 position\n\n    priorities = list(map(int, sys.stdin.readline().split()))\n\n    arr = [0]*10\n\n    for p in priorities:\n        arr[p] += 1\n\n    while True:\n        # \uac00\uc7a5 \uc6b0\uc120\uc21c\uc704 job\uc758 priority \uad6c\ud568\n        for j in range(len(arr))[::-1]:\n            if arr[j] != 0:\n                max_p = j\n                break\n\n        # print? or requeue?\n        # print \uc2dc \uc18c\uc694\uc2dc\uac04 +1\n        pf = priorities[front]\n        if pf != -1:\n            if max_p == pf:\n                time += 1\n                arr[pf] -= 1\n                priorities[front] = -1\n                if front == m:\n                    break\n        front = (front+1) % n\n            # \ud604\uc7ac print \ub41c \uc77c\uc758 \uc21c\ubc88\uc774 \ub0b4 \uc77c\uc778\uc9c0 \ud655\uc778\n\n    print(time)\n\n\n\n"}, {"id": 28729772, "name": "\uae40\ub0a8\uc9c4", "x": 8.526700973510742, "y": 22.001224517822266, "label": 0, "group": 63, "code": "import sys\nr = sys.stdin.readline\n\ncase = int(r())\n\nfor _ in range(case):\n  n, m = map(int, r().split())\n  arr = list(map(int, r().split()))\n  cnt = 0\n\n  if len(arr) <= 1:\n    print(1)\n    continue\n\n  while arr:\n    biggest = True\n    for j in range(1, len(arr)):\n      if arr[0] < arr[j]:\n        biggest = False\n        break\n\n    if biggest:\n      arr.pop(0)\n      cnt += 1\n\n      if m == 0:\n        print(cnt)\n        break\n      else:\n        m -= 1\n    else:\n      arr.append(arr.pop(0))\n      \n\n      if m == 0:\n        m = len(arr) - 1\n      else:\n        m -= 1"}, {"id": 30408592, "name": "\uc774\ubbfc\uc9c0", "x": 27.508403778076172, "y": -3.2012696266174316, "label": 0, "group": 63, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    n,m = map(int,input().split())\n    imp = list(map(int,input().split()))\n    \n    cnt = 0\n    max_imp = max(imp)\n    while True:\n        job = imp.pop(0)\n        m -= 1\n        if job == max_imp:\n            cnt +=1\n            if m == -1:\n                print(cnt)\n                break\n            max_imp=max(imp)\n        else:\n            if m == -1:\n                m = len(imp)\n            imp.append(job)"}, {"id": 24026819, "name": "\uc655\uc9c0\ud61c", "x": -3.830636739730835, "y": -19.434101104736328, "label": 0, "group": 64, "code": "import sys\n\nt = int(input())\nfor i in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    printer = list(map(int, sys.stdin.readline().split()))\n\n    head, tail, counter = 0, len(printer), 1\n    flag = True\n    k = 0\n    while True:\n        cur = printer[head]\n        if cur == max(printer[head:]):\n            if head == m:\n                print(counter)\n                break\n            else:\n                counter += 1\n                head += 1\n        else:\n            if head == m:\n                m += tail - head\n            printer.append(cur)\n            head += 1\n            tail += 1\n"}, {"id": 17902267, "name": "\uae40\ub9cc\uc625", "x": -20.72640037536621, "y": -0.08788814395666122, "label": 0, "group": 64, "code": "\n\ndef getSet():\n    _inputs = input().split()\n    nums = int(_inputs[0])\n    index = int(_inputs[1])\n    q = input().split()\n    q = list(map(int, q))\n    return nums, index, q\n\n\ndef find(n, index, q):\n    cur = 1\n    i = 0\n    while True:\n        curmax = max(q)\n        _idx = i % n\n        if q[_idx] != 0 and curmax == q[_idx]:\n            # print(\"cur\", q[_idx], \", index:\", _idx)\n            q[_idx] = 0\n            if _idx == index:\n                return cur\n            cur += 1\n        i += 1\n\n\nif __name__ == \"__main__\":\n    testcase = int(input())\n    for i in range(testcase):\n        nums, index, q = getSet()\n        r = find(nums, index, q)\n        print(r)\n"}, {"id": 35741420, "name": "\uc774\ub3d9\uac74", "x": 3.343657970428467, "y": 13.934056282043457, "label": 0, "group": 64, "code": "import sys\nI=sys.stdin.readline\n\ndef solve(a,m):\n    cnt=1\n    for i in range(9,a[m]-1,-1):\n        while i in a:\n            ind=a.index(i)\n            if m==ind:return cnt\n            a=a[ind+1:]+a[:ind]\n            m=(m-ind-1)%(len(a)+1)\n            cnt+=1\n    return cnt\n\nt=int(I())\nfor _ in range(t):\n    n,m=map(int,I().split())\n    *a,=map(int,I().split())\n    print(solve(a,m))"}, {"id": 39786205, "name": "\uc190\ub3c4\ud76c", "x": 12.089364051818848, "y": 22.50165557861328, "label": 0, "group": 64, "code": "from sys import stdin\nN = int(stdin.readline())\n\nfor _ in range(N):\n  n, m = list(map(int,stdin.readline().split()))\n  a = list(map(int,stdin.readline().split()))\n  b = [0] * n\n  b[m] = 1\n  \n  count = 0\n  while True:\n    if a[0] == max(a):\n      count+=1\n      if b[0] == 1:\n        print(count)\n        break\n      else:\n        del a[0]\n        del b[0]\n    else:\n      a.append(a[0])\n      b.append(b[0])\n      del a[0]\n      del b[0]"}, {"id": 42831006, "name": "\ucd5c\uc1a1\ud604", "x": -5.412322521209717, "y": -3.5376439094543457, "label": 0, "group": 65, "code": "import sys\ninput=sys.stdin.readline\nT=int(input())\nfor _ in range(T):\n    N, M=map(int, input().split())\n    cost=list(map(int, input().split()))\n    ch=[0]*N\n    ch[M]=1\n    ans=0\n    while 1:\n        if not cost[0]-max(cost):\n            ans+=1\n            if ch[0]-1:\n                del cost[0]\n                del ch[0]\n            else:\n                print(ans)\n                break\n        else:\n            cost.append(cost[0])\n            ch.append(ch[0])\n            del cost[0]\n            del ch[0]"}, {"id": 15266594, "name": "\ubc31\ud638\uc7ac", "x": 8.193724632263184, "y": -17.426401138305664, "label": 0, "group": 65, "code": "import sys\nfor nn in range(int(sys.stdin.readline().rstrip())):\n    n, x = map(int,sys.stdin.readline().rstrip().split())\n    lis = list(map(int, sys.stdin.readline().rstrip().split(' ')))\n    cnt = 0\n    while True:\n        maxx = max(lis)\n        if maxx != lis[0]:\n            lis = lis[1:]+[lis[0]]\n            x = (x-1)%len(lis)\n\n\n        else:\n            cnt +=1\n            lis.pop(0)\n            if x ==0:\n                print(cnt)\n                break;\n            x-=1"}, {"id": 39707981, "name": "\uc218\ud604", "x": -6.275352954864502, "y": -5.6207499504089355, "label": 0, "group": 65, "code": "import sys\ntc = int(input())\nfor i in range(tc):\n    n, m = map(int, sys.stdin.readline().split())\n    p = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(n))\n    \n    t = idx[m]\n    cnt = 0\n    \n    while True:\n        if p[0] == max(p):\n            cnt += 1\n            if idx[0] == t:\n                print(cnt)\n                break\n            else:\n                del p[0]\n                del idx[0]\n        else:\n            p.append(p[0])\n            del p[0]\n            idx.append(idx[0])\n            del idx[0]"}, {"id": 29787134, "name": "\uc774\uc6d0\uadfc", "x": -20.7723445892334, "y": 17.159088134765625, "label": 0, "group": 65, "code": "import sys\ninput = sys.stdin.readline\nimport heapq\n\nt = int(input())\n\nfor case in range(t):\n    \n\n    heap = []\n    n, num = map(int, input().split())\n    l = list(map(int, input().split()))\n    new = []\n    for i in range(0, n):\n        heapq.heappush(heap, [-1 * l[i], i])    #\ucd5c\ub300 \ud799\uc73c\ub85c \ub9cc\ub4e4\uae30 \uc704\ud574 -1\uc744 \uacf1\ud568\n        new.append([l[i], i])\n\n    mp, mi = heapq.heappop(heap) #\uac00\uc7a5 \ud070 \uc6b0\uc120\uc21c\uc704\uc640 \ud574\ub2f9 \uc778\ub371\uc2a4\n\n    np, ni = new.pop(0)           #\ud604\uc7ac \ubb38\uc11c \uc6b0\uc120\uc21c\uc704\uc640 \ubc88\ud638\n    cnt = 1\n\n    while l:\n        if np == -1 * mp:\n            if ni == num:\n                print(cnt)\n                break\n            else:\n                mp, mi = heapq.heappop(heap)\n                cnt += 1\n        \n        else:\n            new.append([np, ni])\n\n        np, ni = new.pop(0)\n        \n    \n"}, {"id": 12206911, "name": "\ub958\ub300\uc77c", "x": 16.286293029785156, "y": -8.45848560333252, "label": 0, "group": 66, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())  # num of doc, index\n\n    values = list(map(int, input().split(\" \")))\n    checker = [False] * N\n    checker[M] = True\n\n    # print(checker)\n\n    count = 0\n    while values:\n        if values[0] == max(values):\n            count += 1\n            if checker[0]:\n                break\n            values.pop(0)\n            checker.pop(0)\n        else:\n            values.append(values.pop(0))  # move lower priority doc\n            checker.append(checker.pop(0))\n\n    print(count)"}, {"id": 12430271, "name": "\uace0\ud615\uc6d0", "x": 0.5793783664703369, "y": -6.617641925811768, "label": 0, "group": 66, "code": "queue = int(input())\nfor _ in range(queue):\n    NM = list(map(int,input().split(' ')))\n    N = NM[0]\n    M = NM[1]\n    imp = list(map(int,input().split(' ')))\n    judge = [0 for _ in range(N)]\n    judge[M] = 'queue'\n    cnt = 0\n    if len(imp) == N:\n        while True:\n            if imp[0] == max(imp):\n                cnt += 1\n                if judge[0] == 'queue':\n                    print(cnt)\n                    break\n                else:\n                    imp.pop(0)\n                    judge.pop(0)\n            else:\n                imp.append(imp.pop(0))\n                judge.append(judge.pop(0))"}, {"id": 37589817, "name": "\uc11c\ubcf4\uacbd", "x": 20.255332946777344, "y": 9.042354583740234, "label": 0, "group": 66, "code": "import sys\ncase = int(sys.stdin.readline())\nfor _ in range(case) :\n    ea, target = map(int, sys.stdin.readline().rstrip().split())\n    importance = list(map(int, sys.stdin.readline().rstrip().split())) \n    que = [*enumerate(importance)]\n    cnt = 0\n    while True :\n        mx = max(importance)\n        if que[0][1] == mx :\n            cnt += 1\n\n            if que[0][0] == target :\n                print(cnt)\n                break\n            else :\n                que.pop(0)\n                importance.pop(0) \n        else :\n            que.append(que.pop(0))\n            importance.append(importance.pop(0))\n"}, {"id": 43726872, "name": "\uc804\uc131\uc544", "x": -17.81907844543457, "y": 19.30883026123047, "label": 0, "group": 66, "code": "import sys\n\nT = int(sys.stdin.readline())\n\nfor _ in range(T):\n    # x\ub294 \ud504\ub9b0\ud130 \uae30\uae30\ub85c \uc778\uc1c4\ud560 \ubb38\uc11c \uac1c\uc218\n    # y\ub294 \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc704\uce58\n    x, y = list(map(int, sys.stdin.readline().split()))\n    imp = list(map(int, sys.stdin.readline().split()))\n    order = 0\n\n    while 1:\n        if imp[0] == max(imp):\n            order += 1\n            if y == 0:\n                print(order)\n                break\n            else:\n                y -= 1\n                imp.pop(0)\n        else:\n            imp.append(imp[0])\n            imp.pop(0)\n            if y <= 0:\n                y = len(imp)-1\n            else:\n                y -= 1\n"}, {"id": 38506465, "name": "\uc7a5\ud601", "x": -12.992314338684082, "y": 13.0287504196167, "label": 0, "group": 67, "code": "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n    answer = 0\n\n    N, M = map(int, stdin.readline().split())\n    importance = list(map(int, stdin.readline().split()))\n    index = list(range(len(importance)))\n\n    while True:\n        if importance[0] == max(importance):\n            answer += 1\n            if index[0] == M: # \ud30c\uc545\ud574\uc57c\ud558\ub294 \uc778\uc1c4\ubb3c\n                print(answer)\n                break\n            else:\n                importance.pop(0) \n                index.pop(0)\n        \n        else: # \uc7ac\ubc30\uce58\n            importance.append(importance.pop(0))\n            index.append(index.pop(0))"}, {"id": 19544437, "name": "\uc124\ub3d9\uc77c", "x": 21.933277130126953, "y": 7.6875224113464355, "label": 0, "group": 67, "code": "T = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    Priority = list(map(int, input().split()))\n    Queue = []\n    for i in range(N):\n        Queue.append(i)\n    o = 0\n    while (True):\n        if (Priority[0] == max(Priority)):\n            Priority.pop(0)\n            o += 1\n            if (Queue.pop(0) == M):\n                print(o)\n                break\n        else:\n            Priority.append(Priority.pop(0))\n            Queue.append(Queue.pop(0))\n"}, {"id": 48221158, "name": "\uae40\uc9c0\uc218", "x": 17.649110794067383, "y": 2.4353861808776855, "label": 0, "group": 67, "code": "for _ in range(0, int(input())):\n    n, m = map(int, input().split())\n    Q = list(map(int, input().split()))\n    u = max(Q)\n    while True:\n        if u == Q[0]:\n            del Q[0]\n            if m == 0:\n                break\n            u = max(Q)\n        else:\n            Q.append(Q[0])\n            del Q[0]\n            if m == 0:\n                m = len(Q)\n        m -= 1\n    print(n-len(Q))"}, {"id": 23349105, "name": "\uc608\uacbd\uc218", "x": 5.341681003570557, "y": 0.104331836104393, "label": 0, "group": 67, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    weight_list = list(map(int, input().split()))\n    res_list = list(range(N))\n    res_list[M] = 'target'\n\n    order = 0\n\n    while True :\n        if weight_list[0] == max(weight_list):\n            order += 1\n            if res_list[0] == 'target' :\n                print(order)\n                break\n            else :\n                weight_list.pop(0)\n                res_list.pop(0)\n        else :\n            weight_list.append(weight_list.pop(0))\n            res_list.append(res_list.pop(0))"}, {"id": 36918607, "name": "\uc7a5\ub2e4\uc740", "x": -0.7784795165061951, "y": 2.06404185295105, "label": 0, "group": 68, "code": "from sys import stdin\n\ntest = int(stdin.readline())\n\nfor _ in range(test):\n    cnt = 0\n    N, M = map(int, stdin.readline().split())\n    imp = list(map(int, stdin.readline().split()))\n    test = list(range(len(imp)))\n    test[M] = 'P'\n    while(1):\n        if max(imp) == imp[0]:\n            cnt += 1\n            imp.pop(0)\n            if test[0] == 'P':\n                print(cnt)\n                break\n            else:\n                test.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            test.append(test.pop(0))"}, {"id": 34539496, "name": "\ub0a8\uc2dc\uc6d0", "x": 2.677607774734497, "y": -20.346508026123047, "label": 0, "group": 68, "code": "for i in range(int(input())):\n    a,b=map(int,input().split())\n    c=list(map(int,input().split()))\n    a=1\n    while True:\n        if c[0]==max(c):\n            if b==0:\n                print(a)\n                break\n            else:\n                a+=1\n                c.pop(0)\n                b-=1\n        else:\n            if b==0:\n                b=len(c)-1\n            else:\n                b-=1\n            c.append(c.pop(0))"}, {"id": 29899462, "name": "\uace0\uc9c4\uc131", "x": 22.304283142089844, "y": 1.7566547393798828, "label": 0, "group": 68, "code": "import sys\n\ncase_num = int(sys.stdin.readline())\n\nfor _ in range(case_num):\n    N, M = map(int, (sys.stdin.readline().split()))\n    priority = list(map(int, sys.stdin.readline().split()))\n    idx = [False for _ in range(N)]\n    idx[M] = True\n    count = 0\n\n    while True:\n        if priority[0] != max(priority):\n            priority.append(priority.pop(0))\n            idx.append(idx.pop(0))\n        else:\n            if idx[0]:\n                print(count+1)\n                break\n            else:\n                count += 1\n                priority.pop(0)\n                idx.pop(0)\n"}, {"id": 25894636, "name": "\ubd09\ub3c4\uc601", "x": 9.721613883972168, "y": -9.1449613571167, "label": 0, "group": 68, "code": "from sys import stdin \n\ntestNum = int(stdin.readline())\nfor _ in range(testNum):\n    count = 0\n    N,M = map(int,stdin.readline().split())\n    importance= list(map(int,stdin.readline().split()))\n    idx = list(range(len(importance)))\n    idx[M] = 'target'\n    target = importance[M]\n    while importance : \n        maxImp = max(importance)\n        nodeImp = importance.pop(0)\n        nodeIdx = idx.pop(0)\n        if nodeImp == maxImp :\n            count += 1\n            if nodeIdx == 'target':\n                print(count) \n                break\n        else : \n            importance.append(nodeImp)\n            idx.append(nodeIdx)"}, {"id": 30454908, "name": "\uc784\uae30\uc5f0", "x": -19.15908432006836, "y": -9.782487869262695, "label": 0, "group": 69, "code": "import sys\ncase=int(sys.stdin.readline().rstrip())\n\nfor z in range(case):\n    num,pyo=map(int,sys.stdin.readline().rstrip().split())\n    sco=list(map(int,sys.stdin.readline().rstrip().split()))\n    if num==1:\n        print('1')\n    elif num==2:\n        if pyo==0:\n            if sco[1]>sco[0]:\n                print('2')\n            else:\n                print('1')\n        else:\n            if sco[1]>sco[0]:\n                print('1')\n            else:\n                print('2')\n    else:\n        qu=[0 for i in range(num*num*2)]\n        qu[:num]=sco\n        hd=0\n        tl=num\n        sconum=[0 for i in range(1,10)]\n        for i in range(1,10):\n            sconum[i-1]=sco.count(i)\n        if sco[pyo]==9:\n            print(str(sco[:pyo].count(9)+1))\n        else:\n            target=sco[pyo]\n            ans=0\n            while(sum(sconum[target:])!=0):\n                for i in range(9,target,-1):\n                    while sconum[i-1]!=0:\n                        if qu[hd]==i:\n                            qu[hd]=0\n                            hd+=1\n                            sconum[i-1]-=1\n                            ans+=1\n                        else:\n                            qu[tl]=qu[hd]\n                            qu[hd]=0\n                            if hd==pyo:\n                                pyo=tl\n                            hd+=1\n                            tl+=1\n            print(str(qu[:pyo].count(target)+1+ans))"}, {"id": 24853414, "name": "\ud55c\uc9c0\ud61c", "x": -2.040677309036255, "y": -10.316734313964844, "label": 0, "group": 69, "code": "n = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    S = list(map(int, input().split()))\n    N = [0 for i in range(a)]\n    N[b] = 1\n    cnt = 0\n    while True:\n        if S[0] == max(S):\n            cnt += 1\n            if N[0] == 1:\n                print(cnt)\n                break\n            else:\n                del S[0]\n                del N[0]\n        else:\n            S.append(S[0])\n            N.append(N[0])\n            del S[0]\n            del N[0]"}, {"id": 38629980, "name": "\uc720\ud76c\ud638", "x": -3.8816769123077393, "y": -2.3313684463500977, "label": 0, "group": 69, "code": "import sys\ninput=sys.stdin.readline\ncase_Num=int(input())\nfor i in range(case_Num):\n    N,M=map(int,input().split())\n    case_list=list(map(int,input().split()))\n    target_list=list(range(len(case_list)))\n    target_list[M]='target_Num'\n    order=0\n    while True:\n        if case_list[0]==max(case_list):\n            order+=1\n            if target_list[0]=='target_Num':\n                print(order)\n                break\n            else:\n                case_list.pop(0)\n                target_list.pop(0)\n        else:\n            case_list.append(case_list[0])\n            del case_list[0]\n            target_list.append(target_list[0])\n            del target_list[0]"}, {"id": 18600897, "name": "\ud558\ud0dc\uc6a9", "x": -28.17201042175293, "y": -16.011388778686523, "label": 0, "group": 69, "code": "import sys\ninput = sys.stdin.readline\nfrom collections import deque\nt = int(input())\n\n\nfor _ in range(t):\n  n,m = map(int,input().split())\n  q = deque(map(int,input().split()))\n  s = sorted(q)\n  cnt = 1\n  while True:\n    if q[0] != s[-1]:\n      q.append(q.popleft())\n      if not m:\n        m = len(q) - 1 \n      else:\n        m -= 1\n      continue\n    if not m:\n      print(cnt)\n      break\n    s.pop()\n    q.popleft()\n    cnt += 1\n    m -= 1\n    "}, {"id": 37053076, "name": "\uc2e0\ubb38\uc219", "x": -13.417613983154297, "y": -23.465959548950195, "label": 0, "group": 70, "code": "import sys\nsinput = sys.stdin.readline\n\nTN = int(sinput())\n\nfor _ in range(TN):\n    N, M = map(int, sinput().split())\n    test_list = list(map(int, sinput().split()))\n    num = test_list[M]\n    test_list[M] = 0\n    max_num = max(test_list)\n    itr, count, last_itr, len_list = 0, 0, 0, len(test_list)\n    while max_num > num:\n        for _ in range(len_list):\n            if itr == len_list: itr = 0\n\n            if test_list[itr] == max_num:\n                test_list.pop(itr)\n                count += 1\n                len_list -= 1\n                last_itr = itr\n            else: itr += 1\n        max_num -= 1\n        itr = last_itr\n\n    else:\n        for _ in range(len_list):\n            if itr == len_list: itr = 0\n\n            if test_list[itr] == max_num:\n                test_list.pop(itr)\n                count += 1\n                len_list -= 1\n            elif test_list[itr] == 0:\n                count += 1\n                break\n            else: itr += 1\n    print(count)"}, {"id": 26287751, "name": "\uc784\uc9c0\uc601", "x": 28.912086486816406, "y": 0.38374054431915283, "label": 0, "group": 70, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    importance = list(map(int, input().split()))\n\n    count = 0\n    while True:\n        if importance[0] == max(importance):\n            importance.pop(0)\n            count += 1\n            if m == 0:\n                break\n        else:\n            importance.append(importance.pop(0))\n            if m == 0:\n                m = len(importance)\n        m -= 1\n    print(count)"}, {"id": 11352509, "name": "\ubd09\uc9c4\uc219", "x": 0.6453387141227722, "y": -6.547013282775879, "label": 0, "group": 70, "code": "T = int(input())\nfor _ in range(T):\n    NM = list(map(int,input().split(' ')))\n    N = NM[0]\n    M = NM[1]\n    imp = list(map(int,input().split(' ')))\n    judge = [0 for _ in range(N)]\n    judge[M] = 'T'\n    cnt = 0\n    while True:\n        if imp[0] == max(imp):\n            cnt += 1\n            if judge[0] == 'T':\n                print(cnt)\n                break\n            else:\n                imp.pop(0)\n                judge.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            judge.append(judge.pop(0))"}, {"id": 47181881, "name": "\uc784\ud61c\uc601", "x": -26.25712013244629, "y": -17.96990394592285, "label": 0, "group": 70, "code": "n = int(input())\n\nfor _ in range(n):\n    n,m = map(int,input().split())\n    imp = list(map(int,input().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n    \n    sol = 0\n    \n    while True:\n        if imp[0] != max(imp):\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))\n        else:\n            sol += 1\n            if idx[0] == 'target':\n                print(sol)\n                break\n            else:\n                idx.pop(0)\n                imp.pop(0)\n        \n        \n        \n        "}, {"id": 21053578, "name": "\uc870\ud61c\ub828", "x": 13.313447952270508, "y": -10.856446266174316, "label": 0, "group": 71, "code": "import sys\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    List = list(map(int, sys.stdin.readline().split()))\n    queue = [(List[i], i) for i in range(N)]\n    MAX = max(List)\n    count = 1\n    while queue:\n        if queue[0][0] < MAX:\n            queue.append(queue.pop(0))\n        else:\n            temp = queue.pop(0)\n            if queue:\n                MAX = max([i[0] for i in queue])\n            if temp[1] == M:\n                print(count)\n                break\n            else:\n                count += 1"}, {"id": 25169756, "name": "\uc11c\ub3d9\ud604", "x": -1.2214767932891846, "y": -18.035207748413086, "label": 0, "group": 71, "code": "import sys\n\n\ninput = sys.stdin.readline\ncase = int(input())\nfor _ in range(case):\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n    x = 0\n    while True:\n        if queue[0] == max(queue):\n            queue.pop(0)\n            if M == 0:\n                x += 1\n                print(x)\n                break\n            else:\n                M -= 1\n                x += 1\n        else:\n            queue.append(queue.pop(0))\n            if M == 0:\n                M = len(queue) - 1\n            else:\n                M -= 1"}, {"id": 11015593, "name": "\uace0\uc601\uc2dd", "x": 10.298792839050293, "y": -21.930082321166992, "label": 0, "group": 71, "code": "testnum = int(input())\n\nwhile testnum > 0:\n    N, M = (int(i) for i in input().split())\n    imp = [int(i) for i in input().split()]\n    idx = [i for i in range(len(imp))]\n    count = 1;\n\n    while True:\n        cur_idx = idx[0]\n        del idx[0]\n        cur_imp = imp[0]\n        del imp[0]\n\n        if len(imp) > 0 and max(imp) > cur_imp:\n            imp.append(cur_imp)\n            idx.append(cur_idx)\n        else:\n            if cur_idx == M:\n                print(count)\n                break\n            count += 1\n\n    testnum -= 1\n\n"}, {"id": 8412525, "name": "\uc870\uc724\ud76c", "x": 24.88595962524414, "y": -2.6857290267944336, "label": 0, "group": 71, "code": "import sys\n\ntest_case = int(sys.stdin.readline())\n\nfor i in range(test_case):\n    list_length, target_idx = map(int, sys.stdin.readline().split())\n    priority_list = list(map(int, sys.stdin.readline().split())) # [1, 2, 3, 4]\n    count = 1\n\n    while True:\n        if max(priority_list) != priority_list[0]:\n            if target_idx == 0:\n                target_idx = len(priority_list)\n            priority_list.append(priority_list.pop(0))\n            target_idx -= 1\n        else:\n            if target_idx == 0:\n                print(count)\n                break\n            else:\n                priority_list.pop(0)\n                count += 1\n                target_idx -= 1"}, {"id": 18429733, "name": "\uc1a1\uc18c\uc5f0", "x": 24.185955047607422, "y": 43.18457794189453, "label": 0, "group": 72, "code": "from collections import deque\nimport sys\n\ndef main():\n\tt = int(sys.stdin.readline())\n\tfor _ in range(t):\n\t\tn, m = map(int, sys.stdin.readline().split())\n\t\tarr = list(map(int, sys.stdin.readline().split()))\n\n\t\tqueues = [[] for _ in range(10)]\n\t\tif (n == 1):\n\t\t\tprint(1)\n\t\t\tcontinue\n\n\t\tcurr = 0\n\t\tstart = curr\n\t\tstop = 0\n\t\tfor i in range(9, 0, -1):\n\t\t\tcurr = start\n\t\t\tif (arr[curr] == i):\n\t\t\t\tqueues[i].append(curr)\n\t\t\t\tstop = curr\n\t\t\tcurr = (start+1)%n\n\t\t\twhile (curr != (start)%n):\n\t\t\t\tif (arr[curr] == i):\n\t\t\t\t\tqueues[i].append(curr)\n\t\t\t\t\tstop = curr\n\t\t\t\tcurr = (curr+1)%n\n\t\t\tstart = stop\n\n\t\tidx = arr[m]\n\t\tres = 0\n\t\tfor i in range(9, idx, -1):\n\t\t\tres += len(queues[i])\n\t\tfor el in queues[idx]:\n\t\t\tres += 1\n\t\t\tif (el == m):\n\t\t\t\tbreak\n\t\tprint(res)\n\t\t\t\n\nmain()\n"}, {"id": 44568392, "name": "\ubb38\uad11\uc2dd", "x": -7.833805084228516, "y": -5.372318744659424, "label": 0, "group": 72, "code": "from sys import stdin\n\nx = int(stdin.readline())\n\n\nfor i in range(x):\n    cnt = 0\n    n, m = map(int, stdin.readline().split())\n    imp = list(map(int, stdin.readline().split()))\n    ans =[0 for _ in range(n)]\n    ans[m] = 999\n    while True:\n        if imp[0] == max(imp):\n            cnt += 1\n            if ans[0] == 999:\n                print(cnt)\n                break\n            else:\n                del imp[0]\n                del ans[0]\n        else:\n            imp.append(imp[0])\n            ans.append(ans[0])\n            del imp[0]\n            del ans[0]"}, {"id": 18148268, "name": "\uc724\uc544\uc815", "x": 28.498228073120117, "y": 1.978602647781372, "label": 0, "group": 72, "code": "for i in ' '*int(input()):\n    n,m=map(int,input().split())\n    L=list(map(int,input().split()))\n    ct=0\n    q=[]\n    for j in L:\n        q.append((j,ct))\n        ct+=1\n    c=0\n    while True:\n        k=q.pop(0)\n        mL=max(L)\n        if k[0]==mL:\n            c+=1\n            if k[1]==m:break\n            L.remove(k[0])\n        else:\n            q.append(k)\n    print(c)"}, {"id": 37882867, "name": "\uc2ec\uc740\ud558", "x": 2.771838426589966, "y": 13.337730407714844, "label": 0, "group": 72, "code": "import sys\n\ninput = sys.stdin.readline\n\n\ndef solution(priorities, location):\n    idx_list = list(range(len(priorities)))\n    result = []\n    \n    while True:\n        i = priorities.index(max(priorities))\n        result.append(priorities[i])\n        if idx_list[i] == location:\n            return len(result)\n        else:\n            priorities = priorities[i+1:] + priorities[:i]\n            idx_list = idx_list[i+1:] + idx_list[:i]\n\n\ncase = int(input())\n\nfor _ in range(case):\n    n, target_idx = map(int, input().split())\n    queue = list(map(int, input().split()))\n    \n    print( solution(queue, target_idx) )"}, {"id": 11928395, "name": "\uc815\uc0c1\uc900", "x": 9.884456634521484, "y": 7.983707904815674, "label": 0, "group": 73, "code": "#algorithm\ndef function(LnD,Queue): # Length of list and Document = LnD\n    count = 0\n    check_list = [0] * LnD[0]\n    check_list[LnD[1]] = 1\n    while True:\n        if max(Queue) == Queue[0]:\n            if check_list[0] == 1:\n                count += 1\n                return count\n            del Queue[0]\n            del check_list[0]\n            count += 1\n        else:\n            goToBack = Queue[0]\n            Queue.append(goToBack)\n            del Queue[0]\n            goToBack = check_list[0]\n            check_list.append(goToBack)\n            del check_list[0]\n\n#main\nT = int(input())\nfor _ in range(T):\n    LnD = list(map(int,input().split()))\n    Queue = list(map(int,input().split()))\n    print(function(LnD,Queue))"}, {"id": 17427058, "name": "\ucd5c\uc724\uc601", "x": 8.112868309020996, "y": -21.13425636291504, "label": 0, "group": 73, "code": "test_case = int(input())\nfor i in range(test_case):\n    length, target_index = list(map(int, input().split(' ')))\n    priority = list(map(int, input().split(' ')))\n\n    target = priority[target_index]\n\n    count = 0\n    while len(priority) != 0:\n        max_num = max(priority)\n        if priority[0] == max_num:\n            count += 1\n            if target_index == 0:\n                print(count)\n                break\n            else:\n                priority.pop(0)\n                target_index -= 1\n        else:\n            priority.append(priority.pop(0))\n            target_index -= 1\n            if target_index < 0:\n                target_index = len(priority)-1"}, {"id": 30965908, "name": "\uc591\ud574\ube48", "x": 18.17787742614746, "y": 25.498096466064453, "label": 0, "group": 73, "code": "import sys\ndef r():return list(map(int,sys.stdin.readline().split()))\nfor i in range(int(input())):\n  n,d=r();st=0;end=n;re=[]\n  a=r();b=sorted(a);a=list(zip(a,range(n)))\n  while end-st>0:\n    t=b.pop()\n    while a[st][0]!=t:a.append(a[st]);st+=1;end+=1\n    re.append(a[st][1]);st+=1\n  print(re.index(d)+1)"}, {"id": 46550513, "name": "\ud45c\ubbf8\uacbd", "x": -0.5666638016700745, "y": 6.85333251953125, "label": 0, "group": 73, "code": "import sys\ninput = sys.stdin.readline\nprint = sys.stdout.write\n\nlst = []\nfor _ in range(int(input())) :\n    N, M = map(int,input().split())\n    L = list(map(int,input().split()))\n    for i in range(N) :\n        while M != 0 or max(L) != L[M] :\n            if L[0] == max(L) :\n                lst.append(L.pop(0))\n            else :\n                L.append(L.pop(0))\n            if M == 0 : \n                M = len(L) - 1\n            else :\n                M -= 1\n        if M == 0 and max(L) == L[M] :\n            lst.append(L.pop(0))\n            break\n    print(f'{len(lst)}\\n')\n    lst = []"}, {"id": 16399926, "name": "\uc870\ud0dc\uae30", "x": -11.763258934020996, "y": 22.225522994995117, "label": 0, "group": 74, "code": "case = int(input())\n\nfor _ in range(case):\n    N, M = map(int, input().split())\n    print_list = list(map(int, input().split()))\n    prior_number = []\n    \n    #\uc6b0\uc120 \uc21c\uc704\ub97c \ud0d0\uc0c9\ud558\uae30 \uc704\ud55c \ub9ac\uc2a4\ud2b8\n    for doc in print_list:\n        prior_number.append(doc)\n    \n    #\ud050 \uc548\uc5d0 index\ub97c \ub123\uc5b4 \ud0d0\uc0c9\n    result = [0 for _ in range(N)]\n    queue = [i for i in range(N)]\n    sequence = 1\n    while queue:\n        if print_list[queue[0]] == max(prior_number):\n            prior_number.remove(max(prior_number))\n            result[queue.pop(0)] = sequence\n            sequence += 1\n        else:\n            queue.append(queue.pop(0))              \n    print(result[M])"}, {"id": 20911810, "name": "\uae40\uc7ac\uc6b1", "x": -16.216957092285156, "y": 9.386247634887695, "label": 0, "group": 74, "code": "num = input() #Test Case\nnum = int(num)\nfor i in range(num):\n    idx = []\n    a,b  = input().split() #a = \ubb38\uc11c \uc218, b = \uba87 \ubc88\uc9f8\uc778\uc9c0\n    a = int(a)\n    b = int(b)\n    count = 0\n    for j in range(a):\n        idx.append(j)\n    pro = list(map(int, input().split()))       \n    while True:\n        if pro[0] == max(pro): \n            count += 1 \n            if idx[0] == b:\n                print(count)\n                break\n            else:\n                pro.pop(0)\n                idx.pop(0)\n        else:\n            pro.append(pro.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 34952045, "name": "\uacac\ubbf8\ub9ac", "x": -10.656070709228516, "y": 16.811832427978516, "label": 0, "group": 74, "code": "test_case = int(input())\nfor i in range(test_case):\n    num, m = map(int, input().split())\n    print_list = list(map(int, input().split()))\n    check_list = [0 for _ in range(num)] # [0, 0, 0, 0]\n    check_list[m] = 1 # \uad81\uae08\ud55c \ubb38\uc11c\uc704\uce58 \uc800\uc7a5\n\n    count = 0\n    while True:\n        if print_list[0] == max(print_list): # \uccab\ubc88\uc9f8 \uac12\uc774 \uc911\uc694\ub3c4\uac00 \uac00\uc7a5 \ub192\ub2e4\uba74\n            count += 1\n\n            if check_list[0] != 1:\n                del print_list[0]\n                del check_list[0]\n            else:\n                print(count)\n                break\n        else:\n            print_list.append(print_list[0])\n            check_list.append(check_list[0])\n            del print_list[0]\n            del check_list[0]"}, {"id": 7126013, "name": "\uac15\ud76c\uc8fc", "x": -2.07698917388916, "y": 6.836174964904785, "label": 0, "group": 74, "code": "list2=[]\nfor i in range(int(input())) :\n    N,M = map(int,input().split())\n    list1 = list(map(int,input().split()))\n    Max_list=max(list1)\n    Target_list = list1[M]\n    n=0\n    find = 0\n    while not find :\n        for idx,val in enumerate(list1) :\n            if val==Max_list :\n                if idx==M :\n                    find = n+1\n                    break\n                else :\n                    n,list1[idx] = n+1,0\n                    while not Max_list in list1 :\n                        Max_list-=1\n    list2.append(str(find))\nprint(\"\\n\".join(list2))"}, {"id": 34984414, "name": "\uc2e0\uc608\uc9c0", "x": 6.066691875457764, "y": -15.130852699279785, "label": 0, "group": 75, "code": "t = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    doc = list(map(int, input().split()))\n    sorted_doc = sorted(doc, reverse=True)\n    pointer = 0\n    cnt = 1\n    while True:\n        if doc[pointer] != sorted_doc[0]:\n            pointer += 1\n            pointer %= len(doc)\n            continue\n        if pointer == m:\n            print(cnt)\n            break\n        del doc[pointer]\n        del sorted_doc[0]\n        if pointer < m:\n            m -= 1\n        pointer %= len(doc)\n        cnt += 1"}, {"id": 26883320, "name": "\uc0ac\uacf5\ud76c\ud0dc", "x": -21.448747634887695, "y": -10.58189868927002, "label": 0, "group": 75, "code": "import sys\n\ntestCase = int(sys.stdin.readline())\nfor t in range(testCase):\n    n,m = map(int, sys.stdin.readline().split(' '))\n    nums = list(map(int, sys.stdin.readline().split(' ')))\n    \n    num_cnt = dict()\n    for n in nums:\n        num_cnt[n] = num_cnt.get(n,0)+1\n        \n    num_find = nums[m]\n    \n    max_num = 9\n    cnt = 0\n    while(max_num > num_find):\n        if(num_cnt.get(max_num,0) == 0):\n            max_num -= 1\n            continue\n        tmp = nums[0]\n        nums.pop(0)\n        m -= 1\n        if(tmp == max_num ):\n            num_cnt[max_num] -= 1\n            cnt += 1\n        else:\n            nums.append(tmp)\n            if(m <0 ):\n                m = len(nums)-1\n    for i in range(m+1):\n        if( nums[i] == num_find ):\n            cnt += 1\n    print(cnt)\n        \n    \n    \n"}, {"id": 19532195, "name": "\ub178\uba85\uc6d0", "x": -5.300507068634033, "y": -9.202261924743652, "label": 0, "group": 75, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 37352877, "name": "\uc124\uc900\uc218", "x": 0.9185212254524231, "y": 19.835439682006836, "label": 0, "group": 75, "code": "import sys\n\n\ndef split_arr(arr, m, count):\n    high_idx = arr.index(max(arr))\n\n    if high_idx == m:\n        print(count)\n    else:\n        count += 1\n        high = arr[high_idx + 1:]\n        low = arr[:high_idx]\n        arr2 = high + low\n        # print(type(arr2))\n        # print(arr2)\n        # print('h_idx: ', high_idx)\n        # print('before m: ', m)\n        if m < high_idx:\n            m += len(high)\n        elif m > high_idx:\n            m -= len(low) + 1\n        # print('after m: ', m)\n\n        split_arr(arr2, m, count)\n\nk = int(input())\n\nfor i in range(k):\n    inp = sys.stdin.readline().rstrip()\n    n, m  = map(int, inp.split())\n    inp2 = sys.stdin.readline().rstrip()\n    arr = list(map(int, inp2.split()))\n\n    count = 1\n    idx = split_arr(arr, m, count)"}, {"id": 11027355, "name": "\uc2e0\uc120\uc544", "x": 6.3313398361206055, "y": 2.499539613723755, "label": 0, "group": 76, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 43144142, "name": "\uc774\uc724\ud601", "x": 14.140358924865723, "y": 20.27079200744629, "label": 0, "group": 76, "code": "import sys\n\ntest_cases = int(sys.stdin.readline())\n\nfor i in range(test_cases) :\n  n, m = map(int, sys.stdin.readline().split())\n  important = list(map(int, sys.stdin.readline().split()))\n\n  array = [0]*n\n  array[m] = 'target'\n  order = 0\n  \n  while True : \n    if important[0] == max(important) :\n      order += 1\n      if array[0] == 'target' :\n        print(order)\n        break;\n      else :\n        array.pop(0)\n        important.pop(0)\n    else :\n      important.append(important.pop(0))\n      array.append(array.pop(0))"}, {"id": 25861004, "name": "\uae40\uc0c8\ub860", "x": -25.830297470092773, "y": 21.57640838623047, "label": 0, "group": 76, "code": "import sys\n# from collections import deque\n# import copy\n\nt = int(sys.stdin.readline())\n\nfor _ in range(t):\n\n    n, m = map(int, sys.stdin.readline().split())\n    que = list(map(int, sys.stdin.readline().split()))\n    \n    # \ubb38\uc81c\uc5d0\uc11c \ucd9c\ub825\ud560 m\ubc88\uc9f8 \ubb38\uc11c\ub97c \uccb4\ud06c\ud558\uae30 \uc704\ud55c \ub9ac\uc2a4\ud2b8\n    doc_order_que = [i for i in range(n)]\n\n    count = 0\n\n    while que:\n        \n        # \uccab\ubc88\uc9f8 \ucc28\ub840\uc5d0 \uc788\ub294 \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740\uac8c \uc544\ub2c8\uba74\n        if que[0] < max(que):\n            \n            # que\uc758 \ub9e8\ub4a4\ub85c \ubcf4\ub0b4\uace0\n            que += [que.pop(0)]\n            \n            # \ubb38\uc11c\uc758 \uc21c\uc11c\ub97c \ub2f4\uc740 que\uc5d0\uc11c\ub3c4\ub3c4 \ub9e8 \ub4a4\ub85c \ubcf4\ub0b8\ub2e4.\n            doc_order_que += [doc_order_que.pop(0)]\n\n        # \uc911\uc694\ub3c4\uac00 \uac00\uc7a5 \ub192\uc740 \ubb38\uc11c\uc77c\ub54c\n        elif que[0] == max(que):\n            count += 1\n\n            # \ub9cc\uc57d \ucc98\uc74c\uc5d0 m \ubc88\uc9f8\uc758 \ubb38\uc11c\uac00 \ud504\ub9b0\ud2b8\ub420 \uc870\uac74\uc774\uba74:\n            if doc_order_que[0] == m:\n                break\n            \n            # \ud504\ub9b0\ud2b8\ud558\uace0 pop\uc73c\ub85c \uc5c6\uc570\n            else:\n                que.pop(0)\n                doc_order_que.pop(0)\n\n    print(count)\n\n"}, {"id": 22186201, "name": "\uae40\uc131\uc218", "x": 9.39250373840332, "y": -4.146789073944092, "label": 0, "group": 76, "code": "n = int(input())\nfor i in range(n):\n    p, q = map(int, input().split())\n    stack = []\n    priority = list(map(int, input().split()))\n    for j in range(p):\n        stack.append((j, priority[j]))\n    c = 1\n    while True:\n        now = stack.pop(0)\n        pr = now[1]\n        for j in stack:\n            if pr < j[1]:\n                stack.append(now)\n                now = (-1, -1)\n                break\n        if now[0] == q:\n            print(c)\n            break\n        elif now[0] != -1:\n            c += 1"}, {"id": 24336415, "name": "\ubc30\uc601\ud0dc", "x": 0.7898671627044678, "y": -2.148439407348633, "label": 0, "group": 77, "code": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor i in range(n):\n    x,y = map(int,input().split())\n    g = list(map(int,input().split()))\n    l = [index for index,value in enumerate(g)]\n    result = 1\n    while g:\n        v = g[0]\n        vv = l[0]\n        if v >= max(g):\n            if vv == y:\n                print(result)\n                break\n            else:\n                result += 1\n                g.pop(0)\n                l.pop(0)\n        else:\n            g.append(g.pop(0))\n            l.append(l.pop(0))"}, {"id": 39334046, "name": "\ud55c\uc7ac\uc11d", "x": -7.705617904663086, "y": 2.1051900386810303, "label": 0, "group": 77, "code": "import sys\nn = int(sys.stdin.readline().rstrip())\n\ndef solve(a, b, c):\n    max_num = c.copy()\n    max_num.sort()\n    max_num.reverse()\n    count = 0\n    queue  =[]\n    for i in range(a):\n        queue.append([c[i], i])\n    \n    while queue:\n        a = queue.pop(0)\n        if a[0] == max_num[0]:\n            if a[1]== b:\n                break\n            else:\n                count += 1\n                max_num.pop(0)\n        else:\n            queue.append(a)\n\n    return count + 1\n\n\nfor _ in range(n):\n    a, b = map(int,sys.stdin.readline().rstrip().split())\n    c = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(solve(a, b, c))"}, {"id": 19941957, "name": "\uc720\ub2e4\uc778", "x": 5.442686557769775, "y": 11.614548683166504, "label": 0, "group": 77, "code": "import sys\n\nIn = sys.stdin.readline\nOut = sys.stdout.write\n\n\ndef printerQueue():\n    N, index = map(int, In().split())\n    queue = list(map(int, In().split()))\n    answer = 1\n\n    for i in range(N):\n        while max(queue) != queue[0]:\n            queue.append(queue.pop(0))\n            index = (index - 1) % N\n        if index == 0:\n            return answer\n        queue.pop(0)\n        N -= 1\n        index = (index - 1) % N\n\n        answer += 1\n\n\ndef main():\n    testNumber = int(In())\n    answer = []\n    for i in range(testNumber):\n        answer.append(printerQueue())\n    for i in range(len(answer)):\n        print(answer[i])\n\n\nmain()\n"}, {"id": 25313651, "name": "\uc904\ub9ac\uc5d4 \uac15", "x": -5.154629230499268, "y": -9.816518783569336, "label": 0, "group": 77, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 25456861, "name": "\uad8c\ub0a8\ud638", "x": 7.186898708343506, "y": -4.376791954040527, "label": 0, "group": 78, "code": "num = int(input())\n\nfor i in range(num):\n    N,M = map(int,input().split())\n    arr= list(map(int,input().split()))\n    brr= [0 for _ in range(N)]\n    brr[M] = 1\n    rank = 1\n    \n    while(len(arr)):\n        if arr[0] == max(arr):\n            if brr[0] == 1:\n                break;\n            else:\n                arr.pop(0)\n                brr.pop(0)\n                rank +=1\n        else:\n            arr.append(arr.pop(0))\n            brr.append(brr.pop(0))\n                \n    print(rank)"}, {"id": 30116373, "name": "\uc7a5\uc11c\uc6d0", "x": -11.838119506835938, "y": -18.12500762939453, "label": 0, "group": 78, "code": "t = int(input())\nresult = list()\nfor a in range(t):\n    cnt = 0\n    num, docu = input().split()\n    num, docu = int(num), int(docu)\n    input_ar = input().split()\n    queue = []\n    for i in input_ar:\n        queue.append(int(i))\n    secondlist = []\n    for i in range(len(queue)):\n        secondlist.append(i)\n    docu_max = int(max(queue))\n\n    if len(queue)==1:\n        result.append(1)\n\n    else :\n        while len(queue)!=0 :\n            docu_temp = queue.pop(0)\n            secondlist_temp = secondlist.pop(0)\n            if docu_temp < docu_max:\n                queue.append(docu_temp)\n                secondlist.append(secondlist_temp)\n                continue\n            cnt += 1\n            if len(queue) != 0:\n                docu_max = max(queue)\n            if secondlist_temp == docu:\n                result.append(cnt)\n                break\n\nfor i in result:\n    print(i)\n"}, {"id": 28311826, "name": "\uc8fc\uc9c0\ud6c8", "x": 2.3237669467926025, "y": -24.04054832458496, "label": 0, "group": 78, "code": "import sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(N) :\n    N, M = map(int, sys.stdin.readline().split())\n    p_list = list(map(int, sys.stdin.readline().split()))\n\n    cnt = 0\n    while True :\n        if p_list[0] == max(p_list) :\n            if M == 0 :\n                print(cnt + 1)\n                break\n            else :\n                p_list = p_list[1:]\n                cnt += 1\n                M -= 1\n        else :\n            tmp = p_list[0]\n            p_list = p_list[1:]\n            p_list.append(tmp)\n            if M == 0 :\n                M = len(p_list) - 1\n            else :\n                M -= 1"}, {"id": 36645092, "name": "\uc720\ud6a8\uc900", "x": 24.116111755371094, "y": 2.468940496444702, "label": 0, "group": 78, "code": "from sys import stdin\n\ndef prq(a, b):\n    \n    val = list(map(int, stdin.readline().split()))\n    cnt = list(i for i in range(a))\n    ans = 1\n\n    for _ in range(n):\n        while val[0] != max(val):\n            val.append(val[0])\n            del val[0]            \n            cnt.append(cnt[0])\n            del cnt[0]\n\n        if cnt[0] == b:\n            print(ans)\n            break\n\n        del val[0]\n        del cnt[0]\n        ans += 1\n\nn = int(stdin.readline())\n\nfor _ in range(n):\n    n, m = map(int, stdin.readline().split())\n    prq(n, m)\n"}, {"id": 20633553, "name": "\ud5c8\uc601\uc9c0", "x": 26.808353424072266, "y": 14.45213794708252, "label": 0, "group": 79, "code": "from bisect import bisect_left\nfor _ in range(int(input())):\n    n,m=map(int,input().split())\n    inp=list(map(int,input().split()))\n    idx=[[] for _ in range(10)]\n    for i in range(n):\n        idx[inp[i]].append(i)\n    cur=0\n    cnt=1\n    for i in range(9,inp[m],-1):\n        if len(idx[i])==0:\n            continue\n        cnt+=len(idx[i])\n        cur=idx[i][bisect_left(idx[i],cur)-1]\n    temp=bisect_left(idx[inp[m]],m)-bisect_left(idx[inp[m]],cur)\n    if temp<0:\n        temp+=len(idx[inp[m]])\n    print(cnt+temp)"}, {"id": 22387512, "name": "\uc0ac\uacf5\ud0dc\uc740", "x": -27.95331382751465, "y": 25.58612823486328, "label": 0, "group": 79, "code": "\"\"\"\n\uc811\uadfc\ubc29\uc2dd 1 : \ub9e4\ubc88 \uac80\uc0ac\ub97c \ud558\uba74 O(N), \uc774\uac78 N\ubc88 \ubc18\ubcf5\ud558\ub2c8\uae4c O(N^2)\n\uc811\uadfc\ubc29\uc2dd 2 : \ud604\uc7ac Queue\uc758 Max\uac12\uc744 \uc800\uc7a5\ud574\ub450\uba74, \uac80\uc0ac\ub97c \uc548\ud558\uace0 \ub118\uae30\uba74 \ub418\uc796\uc544\n\ub3d9\uc791 \uc21c\uc11c :\n1. \ucb49 \ub3cc\uba74\uc11c \uc785\ub825\uc744 \ub2e4 \ubc1b\ub294\ub2e4\n2. \uc911\uc694\ub3c4 \uc21c\uc73c\ub85c Priority Queue \ube44\uc2a4\ubb34\ub9ac\ud558\uac8c \ub9cc\ub4e0\ub2e4\n3. \ub9e8 \uc55e\uc5d0 \ub188\uc774 \uc911\uc694\ub3c4 \uc824 \ub192\uc740 \ub188\uc774 \ub9de\ub294\uc9c0 \ubcf8\ub2e4\n4-1. \ub9de\uc73c\uba74 pop\n4-2. \ud2c0\ub9ac\uba74 \ubcfc \ud544\uc694\ub3c4 \uc5c6\uc774 \uadf8\ub0e5 \ub9e8 \ub4a4\ub85c\n\ubb34\ud55c\ubc18\ubcf5\n\uc790\ub8cc\uad6c\uc870 :\n- \ub370\uc774\ud130\uc758 \uc6b0\uc120\uc21c\uc704\uc640 \uc2dd\ubcc4\uc790\ub97c \uac19\uc774 \ub123\uae30 \uc704\ud574\uc11c dict\ub97c \uc4f8\uc218\ubc16\uc5d0 \uc5c6\ub098?\n-> \uadf8\ub7fc \uc911\ubcf5\ub418\ub294 \uc6b0\uc120\uc21c\uc704\ub97c \ubabb \ub123\uc74c\n\"\"\"\n\nif __name__ == \"__main__\" :\n    t = int(input())\n    for i in range(t) :\n        n,m = list(map(int,input().split()))\n        value = list(map(int,input().split()))\n\n        # \uc6b0\uc120\uc21c\uc704 \uc815\ub82c\n        prior_list = sorted(value,reverse=True)\n\n        print_order = 1\n        while len(value) != 0 :\n            if value[0] == prior_list[0] :\n                if m == 0 : break\n                value.pop(0)\n                prior_list.pop(0)\n                print_order += 1\n                #m \uc704\uce58 \uc870\uc808\ud544\uc694\n                if m > 0 : m -= 1\n                else : m = len(value) - 1\n            else :\n                value.append(value.pop(0))\n                #m \uc704\uce58 \uc870\uc808\ud544\uc694\n                if m > 0 : m -= 1\n                else : m = len(value) - 1\n        print(print_order)"}, {"id": 36206544, "name": "\ubc15\ubbfc\uc601", "x": -23.008548736572266, "y": 23.764589309692383, "label": 0, "group": 79, "code": "from sys import stdin\ninput = stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    queue = []\n    n, m = map(int,input().split())\n    queue = list(map(int,input().split()))\n    cnt = 1\n    \n    while len(queue) > 1:\n        pop = queue.pop(0)\n        if pop < max(queue):  # \uc911\uc694\ub3c4\uac00 \ub354 \ub192\uc740 \uac8c \uc788\ub2e4\uba74\n            queue.append(pop) # \ub4a4\ub85c \ubcf4\ub0b8\ub2e4\n            if m == 0:        # \ub4a4\ub85c \ubcf4\ub0c8\ub294\ub370 \ub9cc\uc57d\uc5d0 m\uc774 \ud604\uc7ac index\ub77c\uba74 \ub4a4\ub85c \ub118\uae40\n                m = len(queue)-1\n            else:\n                m -= 1\n        else:                 # \uc911\uc694\ub3c4 \ub192\uc740 \uac8c \uc5c6\ub2e4\uba74 \ubc14\ub85c \ucd9c\ub825\ud568\n            \n            if m == 0:        # \ub9cc\uc57d \uadf8\uac8c m\uc774\ub77c\uba74 \ub0b4\ubcf4\ub0c4\n                break         # while\ubb38\uc5d0\uc11c \ube60\uc838\ub098\uc634\n            m-=1\n            cnt+=1\n    print(cnt)"}, {"id": 46878098, "name": "\ub958\ud76c\ud638", "x": -25.891769409179688, "y": -15.821123123168945, "label": 0, "group": 79, "code": "import sys \ninput = sys.stdin.readline\n\ntest = int(input())\n\nfor _ in range(test) : \n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    idx = [0 for _ in range(n)]\n    idx[m] = 1 \n    \n    cnt = 0\n    while True:\n        if lst[0] == max(lst) :\n            cnt += 1 \n            \n            if idx[0] != 1:\n                del lst[0]\n                del idx[0]\n            else : \n                print(cnt)\n                break\n        else : \n            lst.append(lst[0])\n            idx.append(idx[0])\n            del lst[0]\n            del idx[0]\n            "}, {"id": 30704099, "name": "\ub0a8\uc740\ud558", "x": 2.662956476211548, "y": -13.401683807373047, "label": 0, "group": 80, "code": "times = int(input())\n\nanswer = []\nfor i in range(times):\n    number, choice = list(map(int, input().split()))\n    Queue = list(map(int, input().split()))\n    count = 0\n    while True:\n        if Queue[0]<max(Queue):\n            if choice == 0:\n                choice = len(Queue) -1\n            else:\n                choice -=1            \n            Queue.append(Queue[0])\n        else:\n            count +=1\n            if choice == 0:\n                answer.append(str(count))\n                break\n            else:\n                choice -=1       \n        del Queue[0]\n        # print(choice)\n\nprint('\\n'.join(answer))\nexit(0)"}, {"id": 28097536, "name": "\ubc30\uc8fc\ud61c", "x": 17.072742462158203, "y": 20.725065231323242, "label": 0, "group": 80, "code": "T =int(input())\n\nfor _ in range(T):\n  cnt=0\n  n,m = map(int,input().split())\n  a = list(map(int,input().split()))\n  a_flag =[False]*n\n  a_flag[m]=True\n  while a:\n    if a[0]==max(a):\n      cnt+=1\n      if a_flag[0]:\n        break\n      del a[0]\n      del a_flag[0]\n    else:\n      a+=[a[0]]\n      a_flag+=[a_flag[0]]\n      del a[0]\n      del a_flag[0]\n  print(cnt)\n"}, {"id": 23118924, "name": "\uc774\uc758\uc815", "x": 3.85162615776062, "y": 9.119338989257812, "label": 0, "group": 80, "code": "import sys\n\nsys.setrecursionlimit(2000)\n# sys.stdin.readline().rstrip()\n# map(int, sys.stdin.readline().rstrip().split())\n\ndef main(size, idx):\n    arr = list(map(int, sys.stdin.readline().rstrip().split()))\n    visite = [0 for _ in range(size)]\n    visite[idx] = 1\n    # print(arr)\n    cnt = 0\n    while True:\n        if arr.index(max(arr)) != 0:\n            arr.append(arr.pop(0))\n            visite.append(visite.pop(0))\n        else:\n            cnt += 1\n            if visite[0] == 1:\n                print(cnt)\n                break\n            else:\n                del(arr[0])\n                del(visite[0])\n\nif __name__ == \"__main__\":\n    test = int(input())\n    for i in range(test):\n        size, index = map(int, sys.stdin.readline().rstrip().split())\n        # index = input()\n        main(size, index)"}, {"id": 36095622, "name": "\ubbfc\ud6a8\ub9b0", "x": 3.114593267440796, "y": 5.572638511657715, "label": 0, "group": 80, "code": "from sys import stdin\ninput = stdin.readline\n\nT = int(input())\n\nfor _ in range(T):\n    # num_doc, check_loaction\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n    index = [0 for _ in range(N)]\n    index[M] = 1\n    count = 0\n\n    while queue:\n        if queue[0] == max(queue):\n            count += 1\n            if index[0] == 1:\n                print(count)\n                break\n            queue.pop(0)\n            index.pop(0)\n        else:\n            queue.append(queue.pop(0))\n            index.append(index.pop(0))\n"}, {"id": 29198966, "name": "\ub958\uc2dc\uc6d0", "x": 10.99128532409668, "y": 23.10801124572754, "label": 0, "group": 81, "code": "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n, m = map(int, input().split())\n  s = list(map(int, input().split()))\n  t = [0]*n\n  t[m] = 'target'\n  cnt = 0\n  while(s):\n    if s[0] == max(s):\n      cnt += 1\n      if t[0] == 'target':\n        print(cnt)\n        break\n      s.pop(0)\n      t.pop(0)\n    else:\n      s.append(s.pop(0))\n      t.append(t.pop(0))\n   "}, {"id": 41793093, "name": "\ubc30\ub450\ub098", "x": 3.7044827938079834, "y": -8.210867881774902, "label": 0, "group": 81, "code": "n = int(input())\n\nfor _ in range(n):\n    n, m = map(int, input().split())\n    docs = list(map(int, input().split()))\n    memo = [0 for _ in range(0,9+1)]\n    for i in docs:\n        memo[i] +=1\n\n    idocs = []\n    for key, val in enumerate(docs):\n        idocs.append((val, 1 if key==m else 0))\n\n    cnt=0\n    for i in range(9,0,-1):\n        while memo[i]:\n            tmp = idocs.pop(0)\n            if tmp[0] == i:\n                memo[i]-=1\n                cnt+=1\n                if tmp[1]:\n                    print(cnt)\n            else:\n                idocs.append(tmp)\n\n"}, {"id": 12696892, "name": "\uc591\uc775\uc900", "x": -2.752497673034668, "y": -16.138635635375977, "label": 0, "group": 81, "code": "for t in range(int(input())):\n    N, M = map(int, input().split())\n    arr = [(i, int(x)) for i, x in enumerate(input().split())]\n    brr = sorted(arr, key=lambda x: -x[1])\n    index, value = arr[M]\n    answer = 1\n    state = False\n    while True:\n        b_index, b_value = brr.pop(0)\n        while True:\n            a_index, a_value = arr.pop(0)\n            if b_value == value and a_index == index:\n                print(answer)\n                state = True\n                break\n            if a_value < b_value:\n                arr.append((a_index, a_value))\n            else:\n                answer += 1\n                break\n        if state:\n            break\n"}, {"id": 27707715, "name": "\uc724\uc815\ud6c8", "x": 6.287586212158203, "y": -10.284927368164062, "label": 0, "group": 81, "code": "from sys import stdin\n\nT = int(stdin.readline())\nfor tc in range(T):\n    N, M = map(int, stdin.readline().split())\n    Imp = list(map(int, stdin.readline().split()))\n    que = [[i, Imp[i]] for i in range(N)]\n    N = [Imp.count(i) for i in range(1, 10)]\n    n, cnt, ans = 8, 0, -1\n    while n >= 0:\n        while N[n] == 0:\n            n -= 1\n        if que[0][1] == n+1:\n            N[n] -= 1\n            cnt += 1\n            if que[0][0] == M:\n                ans = cnt\n                break\n            que.pop(0)\n        else:\n            que.append(que.pop(0))\n    print(ans)"}, {"id": 13251546, "name": "\ubc15\uc120\uc601", "x": 27.603513717651367, "y": 9.471321105957031, "label": 0, "group": 82, "code": "case = int(input())\n\nfor i in range(case):\n    count = 0\n    many, posit = map(int, input().split())\n    impo = input().split()\n\n    tag = impo[posit]+'t'\n    impo[posit] = tag\n    while tag in impo:\n        if impo[0][0] == max(impo)[0]:\n            del impo[0]\n            count += 1\n        else:\n            impo.append(impo.pop(0))\n\n    print(count)\n"}, {"id": 18667383, "name": "\uc774\uc9c0\uc544", "x": 27.058454513549805, "y": -5.346787929534912, "label": 0, "group": 82, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    prior = list(map(int, input().split()))\n    printer = [[i, prior[i]] for i in range(n)]\n\n    ans = 0\n    while True:\n        p = max(prior)\n        cur = printer.pop(0)\n\n        if p == cur[1]:\n            prior.remove(p)\n            ans += 1\n\n            if m == cur[0]:\n                print(ans)\n                break\n        \n        else:\n            printer.append(cur)"}, {"id": 34817014, "name": "\uc2ec\uc740\uacbd", "x": 12.140554428100586, "y": -0.1621166616678238, "label": 0, "group": 82, "code": "t=int(input())\nans=[]\nfor i in range(t):\n    n,m = map(int,input().split())\n    s = list(map(int,input().split()))\n    s_ = [ 0 for _ in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt+=1\n            if s_[0] == 1:\n                ans.append(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]\nfor i in ans:\n    print(i)\n"}, {"id": 25169507, "name": "\ud64d\uc9c4\uc6b1", "x": 16.51418685913086, "y": -9.996968269348145, "label": 0, "group": 82, "code": "T = int(input())\nfor i in range(T):\n    N,k = map(int, input().split())\n    queue = input().strip().split()\n    queue_sort = sorted(queue, reverse=True)\n    queue = [(j,i) for i,j in enumerate(queue)]\n    index = 0\n    while queue:\n        if queue_sort[index]==queue[0][0]:\n            if queue[0][1]==k:\n                print(index+1)\n                break\n            index +=1\n        else:\n            queue.append(queue[0])\n        queue.pop(0)\n        \n        \n"}, {"id": 19892480, "name": "\uc815\ud0dc\uc601", "x": -2.9507477283477783, "y": -13.000871658325195, "label": 0, "group": 83, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    p = list(map(int, input().split()))\n    s = []\n    for i in range(n):\n        s.append(i)\n    count = 0\n    while True:\n        if p[0] == max(p):\n            count +=1    \n            if s[0] == m:\n                print(count)\n                break\n            else:\n                del s[0]\n                del p[0]\n        else:\n            p.append(p[0])\n            del p[0]\n            s.append(s[0])\n            del s[0]\n"}, {"id": 43548030, "name": "\uae40\uc9c0\uc11d", "x": -13.709917068481445, "y": 21.48971176147461, "label": 0, "group": 83, "code": "from sys import stdin\nn = int(stdin.readline())\nresult = []\nfor _ in range(n):\n    # N : \ubb38\uc11c\uc758 \uac1c\uc218, M : \uba87 \ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\uc5c8\ub294\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c \uc778\ub371\uc2a4\n    N, M = map(int, stdin.readline().split())\n    # data : N\uac1c\uc758 \ubb38\uc11c\uc758 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\n    data = list(map(int, stdin.readline().split()))\n    \n    out = 0\n    t = M\n    \n    while(True):\n        # 9 1 '1' 1 9 9     out=0 t=2\n        # 1 '1' 1 9 9       out=1 t=1\n        # '1' 1 9 9 1             t=0\n        # 1 9 9 1 '1'             t=len(list)-1=4\n        # 9 9 1 '1' 1             t=3\n        # 9 1 '1' 1         out=2 t=2\n        # 1 '1' 1           out=3 t=1\n        # '1' 1             out=4 t=0\n        # '1' \ucd9c\ub825          out=5 \n        # print(out, t)\n        if data[0] == max(data):\n            out+=1\n            if t==0:\n                result.append(out)\n                break;\n            else:\n                t-=1\n                del data[0]\n        else:\n            if t==0:\n                data.append(data[0])\n                del data[0]\n                t=len(data)-1\n            else:\n                data.append(data[0])\n                del data[0]\n                t-=1\n\nfor i in result:\n    print(i)\n"}, {"id": 39282195, "name": "\uc774\ud558\ub2ac", "x": 16.26736068725586, "y": 14.491143226623535, "label": 0, "group": 83, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor test in range(T):\n    N, M = map(int,input().split())\n    queue = list(map(int,input().split()))\n    sorted_q = sorted(queue,reverse=True)\n    i,j = 0, 0\n    order = [0]*N\n    while j < N:\n        if i == N:\n            i -= N\n        else:\n            if queue[i] == sorted_q[j]:\n                order[i] = j+1\n                j += 1\n                i += 1\n            else:\n                i += 1\n    print(order[M])\n"}, {"id": 41122877, "name": "\uc11c\uac15\uc900", "x": -17.714994430541992, "y": 11.988340377807617, "label": 0, "group": 83, "code": "import sys\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    s = list(map(int, sys.stdin.readline().split()))\n    s_ = [0 for i in range(n)]        \n    s_[m] = 1                       # \uc6d0\ud558\ub294 \ud398\uc774\uc9c0\uc778\uc9c0 \ud655\uc778 1\uc774 \uc6d0\ud558\ub294\ud398\uc774\uc9c0\n    cnt = 0                          # \uba87\ubc88\uc9f8\ub85c \ucd9c\ub825\ub418\ub294\uc9c0 \ud655\uc778\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 45908685, "name": "\ud558\ud76c\uc7ac", "x": 0.1789950281381607, "y": 2.443070650100708, "label": 0, "group": 84, "code": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor i in range(n):\n    num, position = map(int, input().split())\n    nums = list(map(int, input().split()))\n    ord = list(range(len(nums)))\n    ord[position] = 'target'\n\n    order = 0\n\n    while True:\n        if nums[0] == max(nums):\n            order += 1\n\n            if ord[0] == 'target':\n                print(order)\n                break\n            else:\n                nums.pop(0)\n                ord.pop(0)\n        else:\n            nums.append(nums.pop(0))\n            ord.append(ord.pop(0))"}, {"id": 18124667, "name": "\ub0a8\uc138\uc740", "x": -24.953052520751953, "y": 21.648681640625, "label": 0, "group": 84, "code": "import sys\n\nt = int(sys.stdin.readline())\n\n# \uc778\uc1c4 : queue\uc758 top\uc744 pop\n\nfor _ in range(t):\n\n    n, m = map(int, sys.stdin.readline().split())\n    papers = [int(i) for i in sys.stdin.readline().split()]\n\n    front = 0 # top\uc758 \uc704\uce58\n    back = n-1 # back\uc758 \uc704\uce58\n    pop_idx = None # pop\ud560 \ub54c\uc758 index : if \uc870\uac74\uc774 \ub9cc\uc871\ub418\uc9c0 \uc54a\uc744 \ub54c top\uc744 pop\ud55c\ub2e4.\n    flag_idx = m # \ubb38\uc81c\uc5d0\uc11c \ucc3e\uc73c\ub77c\uace0 \ud55c \uae30\uc900 index\n    cnt = 0 # pop\ud55c \ud69f\uc218 = \uc778\uc1c4 \ud69f\uc218\n\n    if n == 1:\n        print(1)\n    else:\n        while pop_idx != flag_idx:\n            if any(paper > papers[front] for paper in papers[front+1:]): # front \ub4a4\uc5d0 \uc560\uac00 \ud558\ub098\ub77c\ub3c4 \ud06c\ub2e4\uba74\n                papers.append(papers[front]) # top\uc744 \ub4a4\ub85c \ubcf4\ub0c4.\n                front += 1\n                back += 1\n                if front - 1 == flag_idx: # \ucc3e\uc544\uc57c \ud560 flag\uac00 top\uc5d0 \uc788\uc5c8\uace0, \ub4a4\ub85c \ubc00\ub838\ub2e4\uba74,\n                    flag_idx = back # flag\uc758 index\ub3c4 \ubcc0\ud568.\n            else: # front \ub4a4\uc5d0 \ud070 \uc560\uac00 \uc5c6\ub2e4 = \uc778\uc1c4\ud55c\ub2e4\uba74,\n                pop_idx = front # top\uc744 pop\n                front += 1 # front\uc758 \uc704\uce58\ub9cc +1\n                cnt += 1\n        print(cnt)"}, {"id": 28416426, "name": "\uad8c\ubcd1\uace4", "x": -15.622886657714844, "y": 1.1973358392715454, "label": 0, "group": 84, "code": "def printQueue(find, queue): # find = 2, queue = [1 2 3 4]\n    rank = queue[:]\n    rank.sort(reverse=True)\n    findIndex = find\n    count = 0\n    while rank:\n        if rank[0] == queue[0]:\n            rank.pop(0)\n            queue.pop(0)\n            count += 1\n            if findIndex == 0:\n                break\n            findIndex -= 1\n        else:\n            queue.append(queue.pop(0))\n            if findIndex == 0:\n                findIndex = len(queue) - 1\n            else:\n                findIndex -= 1\n    return count\n\nresult = list()\nn = int(input())\nfor i in range(n):\n    find = int(input().split()[1])\n    queue = list(map(int, input().split()))\n    result.append(printQueue(find, queue))\n\nfor i in range(n):\n    print(result[i])"}, {"id": 39024031, "name": "\ud0c1\uc7ac\uc219", "x": -9.655370712280273, "y": 16.428302764892578, "label": 0, "group": 84, "code": "import sys\n\nfor _ in range(int(sys.stdin.readline())):\n    n,m = map(int,sys.stdin.readline().split())\n    arr = list(map(int,sys.stdin.readline().split()))\n    checkList = [0 for _ in range(n)]\n    checkList[m] = 1 # \uad81\uae08\ud55c \ubb38\uc11c\uc704\uce58 \uc800\uc7a5\n\n    cnt = 0\n    while True:\n        if arr[0] == max(arr):\n            cnt+=1\n\n            if checkList[0] != 1:\n                del arr[0]\n                del checkList[0]\n            else:\n                print(cnt)\n                break\n        else:\n            arr.append(arr[0])\n            checkList.append(checkList[0])\n            del arr[0]\n            del checkList[0]"}, {"id": 13553894, "name": "\uc0ac\uacf5\uc900\ud76c", "x": -36.542171478271484, "y": -6.568790912628174, "label": 0, "group": 85, "code": "class printQ:\n    def __init__(self):\n        self.PQ = []\n        self.size = 0\n        self.target = 0\n        self.count = 0\n        \n    def initialize(self, size, target):\n        self.PQ = list(map(int, input().split(\" \")))\n        self.size = size\n        self.target = target\n\n    def printing(self):\n        while True:\n            if self.attemp(self.size): #print success\n                self.count = self.count+1\n                if self.target == 0:\n                    return self.count\n                else :\n                    self.size = self.size-1\n                    self.target = self.target-1\n            else: #print fail\n                self.target = (self.target - 1 + self.size) % self.size\n            \n            \n\n        \n    def attemp(self, size):\n        for i in range(1,size):\n            if self.PQ[0] < self.PQ[i]:\n                self.PQ.append( self.PQ.pop(0) )\n                return False\n        self.PQ.pop(0)\n        return True\n\n\n\nN = int(input())\n\nfor i in range(N):\n    printer = printQ()\n    N,M = map(int, input().split(\" \"))\n    printer.initialize(N,M)\n    print(printer.printing())\n"}, {"id": 28131700, "name": "\uc608\uc815\ud654", "x": 11.675715446472168, "y": -19.55360984802246, "label": 0, "group": 85, "code": "import sys\n\nfor _ in range(int(input())):\n    N, M = map(int, sys.stdin.readline().split())\n    q = list(map(int, sys.stdin.readline().split()))\n\n    s = 0\n    ans = max(q)\n\n    while(True):\n        M -= 1\n        tmp = q.pop(0)\n        if tmp != ans:\n            q.append(tmp)\n            if M == -1:\n               M = len(q)-1\n\n        else:\n            s += 1\n            if M == -1:\n                break\n            ans = max(q)\n\n    print(\"%d\"%s)"}, {"id": 34937349, "name": "\uc548\uc138\uc6b1", "x": 8.043035507202148, "y": -12.464906692504883, "label": 0, "group": 85, "code": "from sys import stdin\n\ntest_case = int(stdin.readline())\n\nfor _ in range(test_case):\n    m,n = map(int, stdin.readline().split(\" \"))\n    arr = list(map(int, stdin.readline().split(\" \")))\n    max_priority_arr = arr.copy()\n    max_priority_arr.sort()\n    result_check = 0\n    index = 0\n    while True:\n        if arr[index] < max_priority_arr[-1]:\n            arr.append(arr[index])\n            if index == n:\n                n = len(arr)-1\n        else:\n            max_priority_arr.pop()\n            result_check += 1\n            if index == n:\n                break\n        index += 1\n    print(result_check)"}, {"id": 45116905, "name": "\ud669\ubcf4\ub77c", "x": 4.5095906257629395, "y": -21.008344650268555, "label": 0, "group": 85, "code": "from sys import stdin\nn = int(stdin.readline())\nfor i in range(n):\n    a,b = map(int,stdin.readline().split())\n    mylist = list(map(int,stdin.readline().split()))\n    check = 0\n    while True:\n        if mylist[0] == max(mylist):\n            check += 1\n            if b == 0:\n                print(check)\n                break\n            else:\n                b -= 1\n            mylist.pop(0)\n        else:\n            mylist.append(mylist.pop(0))\n            if b == 0:\n                b = len(mylist)-1\n            else:\n                b -= 1\n"}, {"id": 11495510, "name": "\uace0\uc218", "x": -15.573432922363281, "y": -2.201868772506714, "label": 0, "group": 86, "code": "import sys\n\ndef printerque(n, m, arr):\n    count = 0\n    while len(arr)!=0:\n        if(max(arr)>arr[0]):\n            arr.append(arr[0])\n            del arr[0]\n            m = (m+len(arr)-1)%len(arr)\n        elif(max(arr)==arr[0]):\n            n -= 1\n            count += 1\n            if(m==0):\n                return count\n            else:\n                m = (m + len(arr) - 1) % len(arr)\n            del arr[0]\n\n    return count\n\n\n\n\nif __name__ == \"__main__\":\n    input = sys.stdin.readline\n    n = int(input())\n    for i in range(n):\n        n, m = map(int, input().split())\n        arr = list(map(int, input().split()))\n        y = printerque(n, m, arr)\n        print(y)"}, {"id": 40883271, "name": "\uc774\uc120\uacbd", "x": 10.150704383850098, "y": 14.864501953125, "label": 0, "group": 86, "code": "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor t in range(T):\n    N, M = map(int, input().split())\n    Que = list(map(int, input().split()))\n    Ind = [i for i in range(N)]\n    Print = []\n    while True:\n        if Que[0] == max(Que):\n            Que.pop(0)\n            Print.append(Ind.pop(0))\n        else:\n            Que.append(Que.pop(0))\n            Ind.append(Ind.pop(0))\n        if len(Print) == N:\n            break\n    print(Print.index(M)+1)"}, {"id": 22435660, "name": "\uae40\uc18c\uc5f0", "x": -4.755101680755615, "y": 11.034343719482422, "label": 0, "group": 86, "code": "n = int(input())\nfor i in range(n):\n    N,M = map(int,input().split())\n    \n    A= list(map(int,input().split()))\n    B=list(set(A))\n    \n    A=[[i,0] for i in A]\n    A[M][1] = 1\n\n    C=[]\n\n    while B:\n        temp = [i for i, value in enumerate(A) if value[0] == max(B)]\n        \n        for i in A: \n            if i[0] == max(B):\n                C.append(i)\n                \n        A=A[max(temp):]+A[:max(temp)] \n       \n        A=[i for i in A if i[0] !=max(B)] \n\n        B.remove(max(B))\n     \n    for i in C:\n        if i[1]==1:\n            print(C.index(i)+1)\n            break"}, {"id": 36512505, "name": "\uc784\uc815\ud6c8", "x": 17.395309448242188, "y": -4.169294834136963, "label": 0, "group": 86, "code": "a = int(input())\nfor i in range(a):\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    idx = lst.index(max(lst))\n    lst[idx] = -1\n    answer = 1\n    leng = len(lst)\n    \n    while m != idx:\n        try:\n            idx = (idx + 1 + lst[(idx + 1) % leng:].index(max(lst))) % leng\n        except:\n            idx = lst[:idx].index(max(lst))\n        lst[idx] = -1\n        answer += 1\n    print(answer)"}, {"id": 35582900, "name": "\ud64d\ud76c\uacbd", "x": 1.378774642944336, "y": -16.00752830505371, "label": 0, "group": 87, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    priority = [0] * 10\n    queue = list(map(int, input().split()))\n\n    for i in queue:\n        priority[i] += 1\n\n    idx = 0\n    count = 0\n    isBreak = False\n    for i in range(1, 10):\n        while priority[10 - i] > 0:\n            if idx == M and 10 - i == queue[M]:\n                print(count + 1)\n                isBreak = True\n                break\n            if queue[idx] == 10 - i:\n                priority[10 - i] -= 1\n                count += 1\n            idx = (idx + 1) % len(queue)\n        if isBreak:\n            break\n"}, {"id": 45030350, "name": "\ubc15\ud574\uc9c4", "x": 1.8056596517562866, "y": -19.23142433166504, "label": 0, "group": 87, "code": "for _ in range(int(input())):\n    N,M=map(int,input().split())\n    l=list(map(int,input().split()))\n    r=1\n    while l:\n        if l[0]==max(l):\n            del l[0]\n            if M==0:\n                print(r)\n                break\n            r+=1\n            M-=1\n            continue\n        if M==0:\n            M+=len(l)-1\n        else:\n            M-=1\n        l.append(l.pop(0))"}, {"id": 11032902, "name": "\uac15\uc7ac\uc6c5", "x": 22.316335678100586, "y": 40.79265594482422, "label": 0, "group": 87, "code": "T=int(input())\nfor i in range(T):\n\tN,c=[int(i) for i in input().split(' ')]\n\tqueue=[]; index=0\n\tqueue=[int(i) for i in input().split(' ')]\n\twhile queue:\n\t\ti=queue.pop(0)\n\t\tif queue and max(queue)>i:\n\t\t\tif c==0: c=len(queue)\n\t\t\telse: c-=1\n\t\t\tqueue.append(i)\n\t\telse:\n\t\t\tif c==0: index+=1; break\n\t\t\telse: c-=1; index+=1\n\tprint(index)"}, {"id": 15984457, "name": "\ubc15\uc6d0\ud638", "x": -26.267047882080078, "y": -13.825340270996094, "label": 0, "group": 87, "code": "import sys\n\n#\ud568\uc218\ndef functions(m, queue, cnt):\n    while(1):\n        notice = 1\n        for i in range(1, len(queue)):\n            if(queue[0][1] < queue[i][1]):\n                queue.append(queue[0])\n                del queue[0]\n                notice = 0\n                break\n        if(notice == 0):\n            continue\n        else:\n            cnt += 1\n            if(queue[0][0] == m):\n                break\n            else:\n                del queue[0]\n    return cnt\n\n\n#\uc785\ub825 \uac2f\uc218\nip = int(input())\n\nlist1 = []\nlist2 = []\nfor i in range(ip):\n    list1.clear()\n    list2.clear()\n    N, M = map(int, input().split())\n    list1 = list(map(int, sys.stdin.readline().split()))\n    for j in range(N):\n        list2.append([j, list1[j]])\n    print(functions(M, list2, 0))\n    \n                \n    "}, {"id": 21691365, "name": "\ubc15\uae30\uc6c5", "x": -16.913259506225586, "y": -6.0151801109313965, "label": 0, "group": 88, "code": "# \ud504\ub9b0\ud130 \ud050\n\nT = int(input())\norders = []\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n\n    order = 0\n    urgent = max(queue)\n    while True:\n        if queue[0] == urgent:\n            order += 1\n            if M == 0:\n                break\n            del queue[0]\n            urgent = max(queue)\n            M -= 1\n        else:\n            queue.append(queue[0])\n            del queue[0]\n            if M == 0:\n                M = len(queue) - 1\n            else:\n                M -= 1\n    orders.append(order)\n\nfor _, val in enumerate(orders):\n    print(val)"}, {"id": 45715901, "name": "\ud48d\uad11\uc900", "x": 5.304344654083252, "y": -7.066229343414307, "label": 0, "group": 88, "code": "import sys\n\ndef solve():\n  for _ in range(int(sys.stdin.readline())):\n    n, m = map(int,sys.stdin.readline().split())\n    arr = list(map(int,sys.stdin.readline().split()))\n    arr2 = [i for i in range(0,n)]\n    cnt = 0\n    while arr:\n      if arr[0] == max(arr):\n        cnt+=1\n        if arr2[0]==m:\n          arr.pop(0)\n          arr2.pop(0)\n          break\n        arr.pop(0)\n        arr2.pop(0)\n      else:\n        arr.append(arr.pop(0))\n        arr2.append(arr2.pop(0))\n    print(cnt)\nsolve()"}, {"id": 25807689, "name": "\ubc15\uc9c4\uc8fc", "x": -9.884284019470215, "y": -6.234957218170166, "label": 0, "group": 88, "code": "import sys\nfor count in range(int(sys.stdin.readline())):\n    n,m = map(int,sys.stdin.readline().split())\n    ba = list(map(int,sys.stdin.readline().split()))\n    li = []\n    wants = ba[m]\n    for i in range(len(ba)):\n        li.append((i,ba[i]))\n    cnt = 9\n    flag = 1\n    ans = 0\n    while flag and cnt:\n        last = 0\n        for i in range(len(li)):\n            if li[i][1] == cnt:\n                ans += 1\n                last = i\n                if li[i][0] == m:\n                    print(ans)\n                    flag = 0\n                    break\n        li = li[last:] + li[:last]\n        cnt -= 1"}, {"id": 19650168, "name": "\uc815\uaca8\uc6b4", "x": -2.0452027320861816, "y": -24.357131958007812, "label": 0, "group": 88, "code": "T = int(input())\n\nfor i in range(T):\n    \n    N, target = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cnt = 0\n    \n    \n    while arr:\n        if max(arr) == arr[0]:\n            cnt += 1\n            if target == 0:\n                break\n            arr.pop(0)\n            if target == 0:\n                target = len(arr) - 1\n            else:\n                target -= 1\n        else:\n            value = arr.pop(0)\n            arr.append(value)\n            if target == 0:\n                target = len(arr) - 1\n            else:\n                target -= 1\n    \n    print(cnt)"}, {"id": 6343290, "name": "\uc724\uc900\ud76c", "x": 19.7196102142334, "y": 23.85336685180664, "label": 0, "group": 89, "code": "for _ in range(int(input())):\n r=t=i=0;n,k=map(int,input().split());a=[*map(int,input().split())];b=sorted(a)\n while b:f=a[i]==b[-1]==b.pop();t+=f;r+=f*t*(i==k);i=-~i%n\n print(r)"}, {"id": 45520035, "name": "\uc815\uc6b0\uc131", "x": 13.574336051940918, "y": 7.060876846313477, "label": 0, "group": 89, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    sorted_lst = sorted(lst, key= lambda x: -x)\n    f, max_i = 0, 0\n    cnt = 0\n\n    while f < len(lst):\n        if lst[f] == sorted_lst[max_i]:\n            if f == m:\n                print(cnt+1)\n                break\n            else:\n                cnt += 1\n                max_i += 1\n        else:\n            lst.append(lst[f])\n            if f == m:\n                m = len(lst) - 1\n        f += 1"}, {"id": 19140977, "name": "\ucd94\uc131\uc544", "x": 19.054929733276367, "y": 10.604682922363281, "label": 0, "group": 89, "code": "from sys import stdin\n\ncase = int(stdin.readline())\n\nfor _ in range(case) :\n    N,M = map(int, stdin.readline().split())\n    que = list(map(int, stdin.readline().split()))\n    check = [0 for _ in range(N)]\n    check[M] = 1\n    count = 0\n    while True :\n        if que[0] == max(que) :\n            count += 1\n            if check[0] == 1 :\n                print(count)\n                break\n            else :\n                que.pop(0)\n                check.pop(0)\n        else :\n            que.append(que.pop(0))\n            check.append(check.pop(0))\n"}, {"id": 6796688, "name": "\uc1a1\uc7ac\ud76c", "x": 1.107545256614685, "y": -28.196231842041016, "label": 0, "group": 89, "code": "for _ in range(int(input())) :\n    N,M = map(int,input().split())\n    priors = list(map(int,input().split()))\n    Max_prior,Target_prior = max(priors),priors[M]\n    n,p,find = 0,Max_prior,0\n    while not find :\n        for idx,val in enumerate(priors) :\n            if val==p :\n                if idx==M :\n                    find = n+1\n                    break\n                else :\n                    n,priors[idx] = n+1,0\n                    while not p in priors :\n                        p-=1\n    print(find)"}, {"id": 36024571, "name": "\uc724\uc740\ud61c", "x": 10.824759483337402, "y": 24.047550201416016, "label": 0, "group": 90, "code": "import sys\n\ninput=sys.stdin.readline\n\na = int(input())\n\nfor _ in range(a):\n  n,m = map(int,input().split())\n  lst = list(map(int,input().split()))\n  idx = list(range(len(lst)))\n  idx[m]='target'\n\n  order=0\n\n  while True:\n\n    if lst[0] == max(lst):\n      order+=1\n\n      if idx[0] == 'target':\n        print(order)\n        break\n      \n      else:\n        lst.pop(0)\n        idx.pop(0)\n\n    else:\n      lst.append(lst.pop(0))\n      idx.append(idx.pop(0))"}, {"id": 24764111, "name": "\ubc15\uc2dc\ud6c4", "x": -23.834152221679688, "y": 20.234100341796875, "label": 0, "group": 90, "code": "import operator\nimport sys\n\niteration = int(sys.stdin.readline().rstrip())\n\nfor i in range(iteration):\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n\n    # \uc8fc\uc5b4\uc9c4 \uc911\uc694\ub3c4 \uc21c \ubc0f \uac01 \uc911\uc694\ub3c4\uc758 \uc704\uce58, \ud604\uc7ac \uac00\ub9ac\ud0a4\uace0 \uc788\ub294 \uc704\uce58\n    imp = list(map(int, sys.stdin.readline().rstrip().split()))\n    loc = []\n    for j in range(len(imp)):\n        loc.append(j)\n    pos = 0\n\n    tmp = sorted(imp, reverse=True)\n    tmp_pos = 0\n    # \uc911\uc694\ub3c4 \uc21c\uc73c\ub85c \uc815\ub9ac\ud574\ub454 tmp \ubc30\uc5f4\uc5d0\uc11c \uc911\uc694\ub3c4\uac00 \ub192\uc740 \uac83\ubd80\ud130 \ud558\ub098\uc529 \ud655\uc778\n    # imp, loc\ub97c \ud1b5\ud574 tmp\ub97c \ub530\ub77c\uac00\uba74\uc11c \ubb38\uc81c\uc5d0\uc11c \uc8fc\uc5b4\uc9c4 M\uc774 \uba87 \ubc88\uc9f8\uc778\uc9c0 \ud655\uc778\n    while True:\n        if tmp[tmp_pos] == imp[pos]:\n            imp[pos] = -1\n            tmp_pos += 1\n            if loc[pos] == M:\n                break\n        else:\n            pos += 1\n            pos %= N\n\n    print(tmp_pos)"}, {"id": 40432352, "name": "\uc591\ud0dc\uc601", "x": 10.193964004516602, "y": -11.26539134979248, "label": 0, "group": 90, "code": "import sys\n\ntest_case = int(sys.stdin.readline())\nfor _ in range(test_case):\n    doc = []\n    n, target = map(int, sys.stdin.readline().split())\n    temp = list(map(int, sys.stdin.readline().split()))\n    for i in range(n):\n        doc.append([temp[i], i])\n\n    cnt = 1\n    while doc:\n        max_num = max(doc, key=lambda x: x[0])\n        out = doc.index(max_num)\n        temp = doc[out:] + doc[:out]\n        doc = temp\n        if doc[0][1] == target:\n            print(cnt)\n            break\n        else:\n            doc.pop(0)\n\n        cnt += 1\n"}, {"id": 13370470, "name": "\uc720\ubbfc ", "x": -24.35936164855957, "y": -17.47135353088379, "label": 0, "group": 90, "code": "import sys\na = int(sys.stdin.readline())\nfor l in range(a):\n    NM = list(map(int,sys.stdin.readline().split()))\n    m = NM[0]\n    n = NM[1]\n    order = list(map(int, sys.stdin.readline().split()))\n\n    result = 0\n    while len(order) > 0:\n        i = 0\n        temp = order[0]\n        for k in range(1,len(order)):\n            if temp < order[k]:\n                order.pop(0)\n                order.append(temp)\n                i += 1\n                if n == 0:\n                    n = len(order)-1\n                else:\n                    n -= 1\n                break\n    \n        if i == 0 and n == 0:\n            order.pop(0)\n            result += 1\n            print(result)\n            break\n        elif i == 0 and n != 0:\n            order.pop(0)\n            result += 1\n            n -= 1\n    "}, {"id": 41121844, "name": "\uc81c\uac08\uc11c\uc815", "x": -23.172340393066406, "y": 15.600370407104492, "label": 0, "group": 91, "code": "import sys\n\nn = int(sys.stdin.readline())\ncases = []\nimportance = []\nqueue = []\n\nfor i in range(n):\n    cases.append(list(map(int, sys.stdin.readline().split())))\n    importance = map(int, sys.stdin.readline().split())\n    tmp = []\n    for num, data in enumerate(importance):\n        tmp.append([num, data])\n    queue.append(tmp)\n\ndef findBigger(tmp, queue):\n    for k in range(len(queue[num])):\n        if tmp < queue[num][k][1]: # \uc6b0\uc120\uc21c\uc704\uac00 \ub354 \ud06c\uba74\n            return 1\n    return 0\n\n\nfor num, data in enumerate(cases):\n    cnt = 1\n    while(len(queue[num]) > 0):\n        tmp = queue[num][0][1]   # \uc6b0\uc120\uc21c\uc704 \n        if findBigger(tmp, queue):\n            queue[num].append(queue[num][0])    # \uac00\uc7a5 \uc55e\uc758 \ub370\uc774\ud130\ub97c \ub4a4\ub85c \ucd94\uac00\uc2dc\ud0b4\n            del queue[num][0]       # \uac00\uc7a5 \uc55e\uc758 \ub370\uc774\ud130\ub97c \uc9c0\uc6c0\n        else:\n            if(data[1] == queue[num][0][0]):\n                print(cnt)\n                break\n            else:\n                del queue[num][0]       # \uac00\uc7a5 \uc55e\uc758 \ub370\uc774\ud130\ub97c \uc9c0\uc6c0\n                cnt += 1\n"}, {"id": 18594231, "name": "\uc724\uc9c4\ud76c", "x": 13.698943138122559, "y": -1.2811174392700195, "label": 0, "group": 91, "code": "from sys import stdin\nfrom collections import deque\nread = lambda: stdin.readline().rstrip()\n\nt = int(read())\n\nfor _ in range(t):\n    n, m = map(int, read().split())\n\n    docp = list(map(int, read().split()))\n\n    pq = deque()\n    \n    for i in range(n):\n        pq.append([docp[i], i])\n    \n    c = 0\n    docp.sort(reverse=True)\n    mi = 0\n    while True:\n        v, idx = pq.popleft()\n        if v == docp[mi]:\n            c += 1\n            mi += 1\n            if idx == m:\n                break\n            continue\n        else:\n            pq.append([v, idx])\n\n    print(c)\n"}, {"id": 8672974, "name": "\ud669\ud61c\ube48", "x": -18.032651901245117, "y": -1.0338329076766968, "label": 0, "group": 91, "code": "def prt_q(que,idx_que,num):\n    cnt_prt=0\n    rt_cnt=0\n    while len(que)>0:\n        if max(que)!=que[0]:\n            que.append(que.pop(0))\n            idx_que.append(idx_que.pop(0))\n        else:\n            cnt_prt+=1\n            if num==idx_que[0]:\n                rt_cnt=cnt_prt\n            que.pop(0)\n            idx_que.pop(0)\n    return rt_cnt\n\nT=int(input())\nrt_lst=list()\nfor i in range(T):\n    N,M=map(int,input().split(' '))\n    q=[k for k in iter(map(int,input().split(' ')))]\n    idx_q=[i for i in range(len(q))]\n    rt=prt_q(q,idx_q,M)\n    rt_lst.append(rt)\n    \nfor i in rt_lst:\n    print(i)\n"}, {"id": 19539554, "name": "\uc774\ud0dc\uc784", "x": 16.935054779052734, "y": 3.6952743530273438, "label": 0, "group": 91, "code": "t = int(input()) #tast case\n\nfor i in range(t):\n    n,m =map(int, input().split())\n    notes = list(map(int, input().split()))\n    count = 0\n    idx = m\n    while True:\n        if notes[0] == max(notes):\n            count +=1\n            if idx==0:\n                print(count)\n                break\n            else:\n                if idx>0:\n                    idx-=1\n                notes.pop(0)\n        else:\n            if idx>0:\n                idx-=1\n            else:\n                idx=len(notes)-1\n            notes.append(notes.pop(0))\n"}, {"id": 38621904, "name": "\uc774\ud0dc\ub780", "x": 10.115412712097168, "y": -26.58515167236328, "label": 0, "group": 92, "code": "import sys\ninput=sys.stdin.readline\nx=int(input())\n\nfor i in range(x):\n        se=[]\n        n,m=map(int,input().split())\n        b=list(map(int,input().split()))\n        t=b[m]\n        b.insert(m+1,-1)\n\n        sum1=0\n\n        while True:\n \n                if b[0]==max(b) and b[0]>0:\n                \n                    sum1+=1\n\n                        \n                    if b[0]==t and b[1]==-1:\n                        \n                        \n                        print(sum1)\n\n                        break\n                    b.pop(0)\n                \n                                \n\n                else:\n\n                \n                    s=b.pop(0)\n                    b.append(s)\n"}, {"id": 25124807, "name": "\uc774\ubbfc\ud638", "x": -0.7561487555503845, "y": -23.989089965820312, "label": 0, "group": 92, "code": "N=int(input())\n\nfor _ in range(N):\n    num, index = map(int,input().split())\n    serious=list(map(int,input().split()))\n    cnt = 0\n    \n    while serious:\n\n        if serious[0] < max(serious):\n            serious.append(serious.pop(0))\n            \n            if index == 0:\n                index = len(serious)-1\n            else:\n                index-=1\n        else:\n            serious.pop(0)\n            cnt+=1\n            \n            if index==0:\n                break\n            else:\n                index-=1\n    print(cnt)\n  "}, {"id": 11526186, "name": "\uc774\ubcf4\uc601", "x": 22.769813537597656, "y": 40.87860870361328, "label": 0, "group": 92, "code": "Q = int(input())\nfor i in range(Q):\n\tN, index = map(int,input().split())\n\tqueue = list(map(int,input().split()))\n\tcount=0\n\twhile True:\n\t\tif max(queue) == queue[0]:\n\t\t\tqueue.pop(0)\n\t\t\tcount+=1\n\t\t\tif index==0:print(count);break\n\t\t\telse:index-=1\n\t\telse:\n\t\t\ttmp = queue.pop(0)\n\t\t\tqueue.append(tmp)\n\t\t\tif index==0:index=len(queue)-1\n\t\t\telse:index-=1"}, {"id": 15344117, "name": "\uc724\ud0dc\uc601", "x": -16.234256744384766, "y": -10.060749053955078, "label": 0, "group": 92, "code": "\ncase = int( input() )\n\nresult = []\n\nfor c in range ( case ):\n\n\n    NM = list( map(int, input().split(' ') ) )\n    N = NM[0]\n    M = NM[1]\n\n    priority = list( map(int, input().split(' ') ) )\n\n    queue = []\n    for n in range(N): queue.append( n )\n\n    outCount = 0\n  \n    while len(queue) > 0 :\n\n        v = queue[0]\n        p = priority[0]\n\n        isOutput = True\n        \n        for i in range(1, len(queue)):\n            if p < priority[i]:\n                isOutput = False\n\n                queue.append( v )\n                priority.append( p )\n\n                del queue[0]\n                del priority[0]\n                break\n\n        if isOutput == True:\n            outCount += 1\n            del queue[0]\n            del priority[0]\n            \n            if v == M : result.append( outCount )\n\n\nfor n in result:\n    print( n )\n"}, {"id": 21204919, "name": "\uae40\uc6d0\ud76c", "x": -18.518522262573242, "y": 0.4874696731567383, "label": 0, "group": 93, "code": "import sys\ndef solution(priorities, location):\n    answer = 0\n    queue = []\n    sorted_queue = []\n    for i in range(len(priorities)):\n        queue.append((priorities[i],i))\n    while len(queue) != 0:\n        count = 0\n        for i in range(len(queue)):\n            if queue[0][0] < queue[i][0]:\n                k = queue[0]\n                del queue[0]\n                queue.append(k)\n                count += 1\n        if count == 0 :\n            sorted_queue.append(queue[0])\n            del queue[0]\n    for i in range(len(sorted_queue)):\n        if sorted_queue[i][1] == location:\n            answer = i + 1\n    return answer\n\niter = int(sys.stdin.readline())\nfor k in range(iter):\n    temp = sys.stdin.readline().replace(\"\\n\",\"\").split()\n    user_input = sys.stdin.readline().replace(\"\\n\",\"\").split()\n    user_input = list(map(lambda x : int(x), user_input))\n    print(solution(user_input,int(temp[1])))"}, {"id": 43225631, "name": "\uc1a1\uc218\ud604", "x": -8.432653427124023, "y": -25.794525146484375, "label": 0, "group": 93, "code": "c=int(input())\nfor i in range(c):\n    cnt=0 \n    fir=list(map(int,input().split()))\n    sec=list(map(int,input().split()))\n    M=max(sec)\n    while(True):\n        if fir[1]==0:\n            if sec[0]<M:\n                sec.append(sec[0])\n                sec.pop(0)\n                fir[1]=len(sec)-1\n            else:\n                cnt+=1\n                print(cnt)\n                break\n        elif sec[0]<M:\n            sec.append(sec[0])\n            sec.pop(0)\n            fir[1]-=1 \n        else:\n            cnt+=1\n            sec.pop(0)\n            M=max(sec)\n            fir[1]-=1"}, {"id": 5985318, "name": "\ud669\uc131\uadfc", "x": -11.416892051696777, "y": -14.584644317626953, "label": 0, "group": 93, "code": "lst=[]\nPlst=[]\ntestCase=int(input())\ntemp=0\n\nfor i in range(testCase):\n    count=0\n    DocNum, finNum=input().split()\n    DocNum=int(DocNum)\n    finNum=int(finNum)\n    lst=input().split()\n    lst2=lst.copy()\n    lst2.sort()\n    lst2.reverse()\n    Plst.clear()\n    for j in range(DocNum):\n        if j==finNum:\n            Plst.append(1)\n        else:\n            Plst.append(0)\n    while True:\n        if lst[0]==lst2[0]:\n            count+=1\n            del(lst[0])\n            del(lst2[0])\n            if Plst[0]==1:\n                print(count)\n                break\n            del(Plst[0])\n        else:\n            temp=lst[0]\n            del(lst[0])\n            lst.append(temp)\n            temp=Plst[0]\n            del(Plst[0])\n            Plst.append(temp)\n"}, {"id": 26771783, "name": "\uc1a1\ubbfc\uc900", "x": 10.689956665039062, "y": 3.103924036026001, "label": 0, "group": 93, "code": "T = int(input())\n\nfor _ in range(T):\n    N,M = map(int,input().split())\n    Imp = input().split()\n    Seq = list(range(N))\n\n    count = 0\n\n    while True:\n        \n        if Imp[0] == max(Imp):\n            count += 1\n            if Seq[0] == M:\n                break\n            else:\n                del Imp[0]\n                del Seq[0]\n        else:\n            Imp.append(Imp.pop(0))\n            Seq.append(Seq.pop(0))\n\n    print(count)         \n"}, {"id": 34766202, "name": "\uacfd\uc2dc\uc591", "x": 4.233450889587402, "y": -5.276458263397217, "label": 0, "group": 94, "code": "# \ud504\ub9b0\ud130 \ud050\nimport sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    imp = list(map(int, input().split()))\n    temp = [i for i in range(n)]\n    target = temp[m]\n    cnt = 0\n    while True:\n        if imp[0] == max(imp):\n            cnt += 1\n            if temp[0] == target:\n                print(cnt)\n                break\n            imp.pop(0)\n            temp.pop(0)\n        else:\n            i = imp.pop(0)\n            t = temp.pop(0)\n            imp.append(i)\n            temp.append(t)"}, {"id": 34381763, "name": "\uc11c\ud604\uc625", "x": 22.23933982849121, "y": -1.1381069421768188, "label": 0, "group": 94, "code": "#%%\nimport sys\ninput = sys.stdin.readline\n#%%\ndef processing(file_length, file_num, file_importance_list):\n    lst = file_importance_list\n    sorted_lst = sorted(file_importance_list)\n    seq = 1\n    order = 0\n    while True:\n        if lst[order] == sorted_lst[-1]:\n            if order-file_num:\n                seq +=1\n                sorted_lst.pop()\n            else:\n                print(seq)\n                break\n        order = (order+1)%file_length\n\n#%%\nfor _ in range(int(input())):\n    file_length, file_num = map(int, input().split())\n    file_importance_list = list(map(int, input().split()))\n    processing(file_length, file_num, file_importance_list)"}, {"id": 30755038, "name": "\ubc30\ud61c\uc900", "x": 0.6218342185020447, "y": -0.9273413419723511, "label": 0, "group": 94, "code": "import sys\n\ntc = int(sys.stdin.readline())\n\nfor i in range(tc):\n    N, M = map(int, sys.stdin.readline().split())\n    priority = list(map(int, sys.stdin.readline().split()))\n    seq = [i for i in range(N)]\n    queue = []\n    result = []\n    idx = 0\n    while 1:\n        if priority[0] == max(priority):\n            idx += 1\n            if seq[0] == M:\n                print(idx)\n                break\n            priority.pop(0)\n            seq.pop(0)\n        else:\n            priority.append(priority.pop(0))\n            seq.append(seq.pop(0))"}, {"id": 45182583, "name": "\uc1a1\uc6b0\uc5f0", "x": -14.339106559753418, "y": -16.97137451171875, "label": 0, "group": 94, "code": "t = int(input())\ns1=[]\nfor i in range(t):\n    s1 = []\n    idx =0\n    c = 0\n    n,m= map(int,input().split())\n    a= list(map(int,input().split()))\n    for p,q in enumerate(a):\n        s1.append([q,p+1])\n    s1[m][1] = 0\n    \n    while a:\n        if idx > len(a)-1:\n            idx = idx%len(a)\n        e = max(a)\n        \n        if s1[idx][0]==e:\n            if s1[idx][1] == 0:\n                print(c+1)\n                break\n            s1.pop(idx)\n            a.pop(idx)\n            c +=1\n        elif s1[idx][0]<e:\n            idx+=1"}, {"id": 20880461, "name": "\uc774\ubbf8\uc5f0", "x": -4.784434795379639, "y": -9.266716957092285, "label": 0, "group": 95, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 28725166, "name": "\uc815\uc131\uc625", "x": -7.2699713706970215, "y": -10.67763900756836, "label": 0, "group": 95, "code": "num = int(input())\n\nfor x in range(num):\n    n, k = map(int, input().split())\n    data = list(map(int,input().split()))\n    data_backup = data.copy()\n    data_backup[k] = 0\n    cnt = 0\n\n    while data:\n        if data[0] == max(data):\n            cnt += 1\n            if data_backup[0] == 0:\n                print(cnt)\n                break\n            else:\n                data.pop(0)\n                data_backup.pop(0)\n        else:\n            data.append(data[0])\n            data_backup.append(data_backup[0])\n            del data[0]\n            del data_backup[0]"}, {"id": 19018133, "name": "\uace0\uc900\ud76c", "x": 6.595139026641846, "y": -1.176041841506958, "label": 0, "group": 95, "code": "testcase = int(input())\n\nfor _ in range(testcase):\n    n, point = map(int, input().split())\n    que = list(map(int, input().split()))\n    chk = [0 for _ in range(n)]\n    chk[point] = 1\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 1:\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))\n\n"}, {"id": 25083027, "name": "\uae40\uc0c1\uacbd", "x": -6.322555065155029, "y": -13.107791900634766, "label": 0, "group": 95, "code": "tc = int(input())\nfor i in range(tc):\n    now = 0\n    n, guess = map(int, input().split())\n    arr = list(map(int, input().split()))\n    lst = []\n    for i in range(len(arr)):\n        lst.append([arr[i], 0])\n    arr.sort(reverse=True)\n    lst[guess][1] = 1\n    now = 0\n    while arr:\n        if arr[0] == lst[0][0]:\n            now += 1\n            if lst[0][1] == 1:\n                print(now)\n                break\n            else:\n                del arr[0]\n                del lst[0]\n        else:\n            tmp = lst[0]\n            del lst[0]\n            lst.append(tmp)"}, {"id": 9705336, "name": "\uc2e0\ubcf4\uc5f0", "x": 6.95774507522583, "y": 11.46251392364502, "label": 0, "group": 96, "code": "import sys\nfrom sys import stdin\n\n\ndef print_que(importance, swi, ss):\n    for a in range(len(importance)):\n        if importance[a] > importance[0]:\n            if swi != 0:\n                swi-=1\n            else:\n                swi = len(importance)-1\n            return print_que(importance[1:]+[importance[0]], swi, ss)\n    if swi == 0:\n        return ss+1\n    else:\n        return print_que(importance[1:], swi-1, ss+1) \n\n\n\nr = lambda: sys.stdin.readline()\nfir = int(input())\nq =[]\nfor a in range(fir):\n    size, swi = map(int,r().split())\n    arr = [0] * size\n    importance = stdin.readline().split()\n    ss = 0\n    dab = print_que(importance, swi, ss)\n    print(dab)\n\n\n"}, {"id": 25509557, "name": "\uc131\ud0dc\uc6c5", "x": -36.20915985107422, "y": -3.7513058185577393, "label": 0, "group": 96, "code": "import sys\n\nclass Node():\n    def __init__(self,name,priority):\n        self.name=name\n        self.priority=priority\n\n    def getName(self):\n        return self.name\n\n    def getPriority(self):\n        return self.priority\n\nclass Queue():\n    def __init__(self):\n        self.items=[]\n        self.length=len(self.items)\n        self.idx=0\n\n    def dequeue(self):\n        if self.idx==self.length:\n            return -1\n        item=self.items[self.idx]\n        self.idx+=1\n        return item\n\n    def enqueue(self,innum):\n        self.items.append(innum)\n        self.length+=1\n\n    def front(self):\n        if self.idx==self.length:\n            return -1\n        item=self.items[self.idx]\n        return item\n\n\n\nnum=int(sys.stdin.readline().strip())\n\nfor k in range(num):\n    a,b=map(int,sys.stdin.readline().strip().split())\n    prio=sys.stdin.readline().strip().split()\n    queue=Queue()\n    #queue set\n    for p in range(a):\n        if p==b:\n            node=Node('target',prio[p])\n            queue.enqueue(node)\n        else:\n            node=Node('else',prio[p])\n            queue.enqueue(node)\n    prioidx=0\n    prio.sort(reverse=True)\n    count=0\n    while(True):\n        if queue.front()==-1:\n            print('no')\n            break\n        elif queue.front().getPriority()<prio[prioidx]:\n            item=queue.dequeue()\n            queue.enqueue(item)\n        else:\n            count+=1\n            item=queue.dequeue()\n            prioidx+=1\n            if item.getName()=='target':\n                print(count)\n                break\n            else:\n                pass\n\n\n\n"}, {"id": 36465564, "name": "\uae40\uc11d\ud6c8", "x": -19.255847930908203, "y": -19.222307205200195, "label": 0, "group": 96, "code": "import math\nimport sys\n\ndef Is_Max(N):\n    try:\n        if max(N[1:])>N[0]:\n            return 1\n    except:\n        return 0\n    \nqueue=[]\npos=0\nT=int(sys.stdin.readline())\n\nfor i in range(T):\n    N,M=map(int, sys.stdin.readline().split())\n    queue=list(map(int,sys.stdin.readline().split()))\n    pos=M\n    \n    while queue!=[]:\n        if Is_Max(queue)==1:\n            temp=queue.pop(0)\n            queue.append(temp)\n            pos-=1\n            if pos<0:\n                pos+=len(queue)\n        else:\n            if pos==0:\n                print(N-len(queue)+1)\n                break\n            else:\n                pos-=1\n            queue.pop(0)"}, {"id": 4738123, "name": "\uc131\uc9c4\ucca0", "x": 26.680421829223633, "y": 39.28205108642578, "label": 0, "group": 96, "code": "import sys\nfor _ in range(int(input())):\n\tN,M=map(int,input().split())\n\tm,c,Q=0,0,[]\n\tfor i,j in enumerate(map(int,sys.stdin.readline().split())):\n\t\tif m<j:m=j\n\t\tif i==M:Q.append([j,1])\n\t\telse:Q.append([j,0])\n\twhile(True):\n\t\tif Q[0][0]<m:\n\t\t\tQ.append(Q.pop(0))\n\t\telif Q[0][0]==m:\n\t\t\tc+=1\n\t\t\tif Q[0][1]==1:break\n\t\t\tm=0\n\t\t\tQ.pop(0)\n\t\t\tfor p in Q:\n\t\t\t\tif m<p[0]:m=p[0]\n\tprint(c)"}, {"id": 6705677, "name": "\uc784\uc2b9\ud604", "x": -10.689014434814453, "y": -18.751728057861328, "label": 0, "group": 97, "code": "iter = int(input())\nresult = []\nfor _ in range(iter):\n    num_doc, location = map(int, input().split(\" \"))\n    scores = list(map(int, input().split(\" \")))\n\n    check = []\n    for i in range(len(scores)):\n        if i == location:\n            check.append(1)\n        else:\n            check.append(0)\n\n    flag = True\n    cnt = 0\n    while flag:\n        if scores[0] >= max(scores):\n            cnt += 1\n            if check[0] == 1:\n                result.append(cnt)\n                flag = False\n            scores.pop(0)\n            check.pop(0)\n        else:\n            score = scores.pop(0)\n            c = check.pop(0)\n            scores.append(score)\n            check.append(c)\n\nfor i in result:\n    print(i)"}, {"id": 21551323, "name": "\ud669\uba85\uc790", "x": -24.283344268798828, "y": 23.52556610107422, "label": 0, "group": 97, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())    #n: \ubb38\uc11c\uc758 \uc218 / m: \uad81\uae08\ud55c\ubb38\uc11c\n    s = list(map(int, input().split())) #s: \uc6b0\uc120\uc21c\uc704 \ubc30\uc5f4\n    #\uc5ec\uae30\uae4c\uc9c0 \uc785\ub825\n\n    s_ = [0 for i in range(n)]  #\uc2e4\uc81c \ubb38\uc11c(\ud050\ub85c \uc4f8 \uac83)=> \uc5ec\uae30\uc11c\ub294 \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uac00 \uc791\uc544\uc11c \ub9ac\uc2a4\ud2b8 \uc0ac\uc6a9\uac00\ub2a5\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):  #\uac00\uc7a5 \uc55e\uc5d0 \uac83\uc774 \uc6b0\uc120\uc21c\uc704\uac00 \uac00\uc7a5 \ub192\ub2e4\uba74 => \uc774\ub188\uc744 \uc9c0\uc6cc\uc57c\ud568\n            cnt += 1\n            if s_[0] == 1:  #\uc774\ub188\uc774 \uc6b0\ub9ac\uac00 \uad81\uae08\ud55c \ub188\uc774\uba74 => \ucd9c\ub825\ud558\uace0 \ub05d\ub0b4\uc57c\ud568\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:               \n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 26670504, "name": "\ucc28\uc778\ud45c", "x": 0.26470863819122314, "y": 7.131072998046875, "label": 0, "group": 97, "code": "Test_Case = int(input())\n\nresult = list()\n\nfor i in range(Test_Case):\n    N,M = list(map(int,input().split()))\n    prior = list(map(int,input().split()))\n\n    queue = list()\n    loop =True\n\n    while loop:\n        if prior[0] == max(prior):\n            queue.append(prior.pop(0))\n            if M == 0:\n                result.append(str(len(queue)))\n                loop = False\n                break\n            else:\n                M -= 1\n        else:\n            prior.append(prior.pop(0))\n            if M == 0:\n                M = len(prior) - 1\n            else:\n                M -= 1\n\nprint('\\n'.join(result))"}, {"id": 18854904, "name": "\ubc15\uc740\ud61c", "x": 12.719328880310059, "y": 13.678773880004883, "label": 0, "group": 97, "code": "t = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    data = list(map(int, input().split()))\n    target = [data[m], m]\n    temp = []\n    for i in range(n):\n        temp.append([data[i], i])\n    q = []\n    if len(data) == 1:\n        print(1)\n    else:\n        while True:\n            if len(data) == 0:\n                break\n            if data[0] < max(data):\n                data.append(data.pop(0))\n                temp.append(temp.pop(0))\n            else:\n                data.pop(0)\n                q.append(temp.pop(0))\n        print(q.index(target)+1)"}, {"id": 40683740, "name": "\uc190\ucca0\uc6b0", "x": -2.339348077774048, "y": -18.168601989746094, "label": 0, "group": 98, "code": "import sys\n\ninput = sys.stdin.readline\n\nT = int(input())\nfor test_case in range(1, T + 1):\n    N, M = map(int, input().split())\n    ARR = list(map(int, input().split()))\n    m, cnt = M, 0\n    q = list(ARR)\n    while True:\n        if q[0] < max(q):\n            q.append(q.pop(0))\n            if 0 == m:\n                m = len(q) - 1\n            else:\n                m -= 1\n        else:\n            q.pop(0)\n            cnt += 1\n            if 0 == m:\n                break\n            else:\n                m -= 1\n    print(cnt)\n"}, {"id": 32578133, "name": "\uae40\uc724\uc9c4", "x": -11.908978462219238, "y": -2.6161088943481445, "label": 0, "group": 98, "code": "import sys\nT = int(input())\nanswer = []\nfor _ in range(T):\n    count = [0 for i in range(10)]\n    num = 0\n    cur = -1\n    N, M = map(int, sys.stdin.readline().split())\n    array = list(map(int, sys.stdin.readline().split()))\n    for i in range(N):\n        count[array[i] - 1] += 1\n        array[i] = [i, array[i]]\n    while cur != M:\n        prt = True\n        for i in range(array[0][1], 10, 1):\n            if count[i] > 0:\n                array.append(array.pop(0))\n                prt = False\n                break\n        if prt is True:\n            count[array[0][1] - 1] -= 1\n            cur = array.pop(0)[0]\n            num += 1\n    answer.append(num)\n    \nfor i in answer:\n    print(i)"}, {"id": 49114242, "name": "\ucd5c\uc720\ud654", "x": -27.890094757080078, "y": -17.563695907592773, "label": 0, "group": 98, "code": "#\ud504\ub9b0\ud130 \ud050(\uc2e4\ubc843)\nimport sys\nt=int(sys.stdin.readline())\nfor i in range(t):\n    n,m=map(int, sys.stdin.readline().split())\n    importance=list(map(int,sys.stdin.readline().split()))\n    order=1\n    temp=[0]*len(importance)\n    temp[m]='target'\n\n    while True:\n        if importance[0]<max(importance):\n            importance.append(importance.pop(0))\n            temp.append(temp.pop(0))\n        elif temp[0]=='target':\n            print(order)\n            break\n        else:\n            order=order+1\n            importance.pop(0)\n            temp.pop(0)\n            "}, {"id": 22398965, "name": "\uae40\ub0a8\uae38", "x": -16.88909912109375, "y": -4.259626865386963, "label": 0, "group": 98, "code": "def func(n, idx, lst):\n    if n == 1: return 1\n    \n    queue = []\n    for i, v in enumerate(lst):\n        queue.append([i,v])\n    cnt = 0\n    while lst:\n        _max = max(lst)\n        while True:\n#             print(queue, lst)\n            if queue[0][1] != _max:\n                a,b = queue.pop(0)\n                queue.append([a,b])\n            else:\n                cnt += 1\n                a,b = queue.pop(0)\n                if a == idx:\n                    return cnt\n                lst.remove(_max)\n                break\n\nN = int(input())\nfor _ in range(N):\n    n, idx = map(int, input().split())\n    lst = list(map(int, input().split()))\n    print(func(n, idx, lst))"}, {"id": 43011481, "name": "\uc81c\uac08\ud0dc\ud604", "x": -14.446077346801758, "y": -25.98193359375, "label": 0, "group": 99, "code": "import sys\ninput = sys.stdin.readline\nn = int(input().rstrip())\n\n\nfor _ in range(n):\n    m,k = map(int,input().rstrip().split())\n    prt = list(map(int,input().rstrip().split()))\n    ind = [i for i in range(len(prt))]\n    \n    \n    cnt = 0\n    while True:\n        max_temp = max(prt)\n        \n        if prt[0] == max_temp:\n            if ind[0] == k:\n                cnt += 1\n                break\n            else:\n                prt.pop(0)\n                ind.pop(0)\n                cnt += 1\n        else:\n            a = prt.pop(0)\n            b = ind.pop(0)\n            prt.append(a)\n            ind.append(b)\n    print(cnt)\n    \n            \n            \n            \n    \n    \n                \n                \n                \n        \n        \n        \n                \n        \n        \n        \n        \n\n    \n    \n    \n    "}, {"id": 40161737, "name": "\ud48d\uc11c\uc601", "x": -26.164634704589844, "y": 24.331422805786133, "label": 0, "group": 99, "code": "import sys, math\ninput = sys.stdin.readline\n\n# \ud604\uc7ac \ubb38\uc11c\ubcf4\ub2e4 \ub192\uc740 \uc911\uc694\ub3c4\ub97c \uac00\uc9c4 \ubb38\uc11c\uac00 \uc788/\uc5c6 -> T/F\ndef check(p):\n    global pl\n    for i in range(p+1, 10):\n        if pl[i] != 0:\n            return True\n    return False\n\ntc = int(input())\nfor _ in range(tc):\n    pl = [0]*10 # \uc911\uc694\ub3c4 1~9\uae4c\uc9c0 \uac01 \uc778\ub371\uc2a4\uc5d0 \uc800\uc7a5\n    cnt = 0 # \ubb38\uc11c\uac00 \uc778\uc1c4\ub418\ub294 \uc21c\uc11c\n    n, m = map(int, input().split()) # \ubb38\uc11c\uc758 \uac1c\uc218, \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc704\uce58\n    # \ud3ec\uc778\ud130\ub85c \uac00\ub974\ud0a4\uba74\uc11c \ub9ac\uc2a4\ud2b8\ub97c \uc6d0\ud615\ud050 \ucc98\ub7fc \uad6c\ud604\n    # \ub9e4\ubc88 \ub9ac\uc2a4\ud2b8\ub97c \ub2e4 \ud0d0\uc0c9\ud558\uc9c0\ub9d0\uace0 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8(pl) [] \ub9cc\ub4e4\uc5b4\uc11c\n    # \uc778\ub371\uc2a4(=\uc911\uc694\ub3c4) \ubcc4\ub85c \uba87\uac1c\uc758 \uc218\uac00 \uc788\ub294\uc9c0 \uc800\uc7a5\ud55c\ub2e4\uc74c\n    # \ud604\uc7ac \ubb38\uc11c\ub97c \ucc3e\uc744\ub54c \ud604\uc7ac \ubb38\uc11c\uc758 \uc911\uc694\ub3c4 \ubcf4\ub2e4 \ub192\uc740 \ubb38\uc11c\uac00 \uc788\ub2e4\ub294 \uac83\uc744\n    # pl\uc5d0\uc11c \uac80\uc0ac\ud558\uc790 -> O(9), \uc774\ud6c4 \uc787\ub2e4\uba74 \ud3ec\uc778\ud130\ub9cc ++\ud574\uc11c \ubc18\ubcf5\n    \n    # \uc911\uc694\ub3c4 \uc785\ub825\n    doc = list(map(int, input().split()))\n    for i in range(n):\n        pl[doc[i]] += 1\n    #print('doc: ', doc)\n    #print('pl: ', pl)\n    #temp = input()\n    idx = 0\n    #print(check(idx))\n    while True:\n        if doc[idx] != -math.inf and not check(doc[idx]): # \ud604\uc7ac\ubb38\uc11c\ubcf4\ub2e4 \uc911\uc694\ub3c4\uac00 \ub192\uc740 \ubb38\uc11c\uac00 \uc5c6\ub2e4\uba74\n            #print('if')\n            if idx == m: # \ucd9c\ub825\ud560 \ubb38\uc11c\ub77c\uba74\n                #print('if/if')\n                cnt += 1\n                print(cnt)\n                break\n            else:\n                #print('if/else')\n                cnt+=1\n                pl[doc[idx]] -= 1\n                doc[idx] = -math.inf # \ucd9c\ub825\ud55c \ubb38\uc11c \uccb4\ud06c\n\n        #elif doc[idx] != -math.inf and check(idx): # \ud604\uc7ac\ubb38\uc11c\ubcf4\ub2e4 \uc911\uc694\ub3c4\uac00 \ub192\uc740 \ubb38\uc11c\uac00 \uc788\ub2e4\uba74\n        idx += 1\n        if idx >= n:\n            idx = 0"}, {"id": 21838099, "name": "\uac15\ud6a8\ub0a8", "x": -5.6964616775512695, "y": -10.469842910766602, "label": 0, "group": 99, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 28182244, "name": "\uad8c\uc815\ud604", "x": 25.071945190429688, "y": 7.7809367179870605, "label": 0, "group": 99, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = list(map(int, input().split(' ')))\n    arr = list(map(int, input().split(' ')))\n    arr = [(idx, a) for idx, a in enumerate(arr)]\n    count = 0\n    max_a = max(arr, key = lambda x: x[1])[1]\n    while count < N:\n        if max_a == arr[0][1]:\n            count += 1\n            if arr[0][0] == M:\n                print(count)\n                break\n            arr.pop(0)\n            max_a = max(arr, key = lambda x: x[1])[1]\n        else:\n            arr.append(arr.pop(0))\n"}, {"id": 37530209, "name": "\ud48d\uc6b0\uc131", "x": -17.503589630126953, "y": -18.605281829833984, "label": 0, "group": 100, "code": "import sys\nn=int(sys.stdin.readline())\nfor i in range(n):\n    a,b=map(int,sys.stdin.readline().split())\n    L=list(map(int,input().split()))\n    M=[[L[i],0] for i in range(a)]\n    M[b][1]=1\n    count=0\n    k=0\n    N=[]\n    for i in range(1,10):\n        c=0\n        for j in range(a):\n            if L[j]==i:\n                c+=1\n        N.append(c)\n    for i in range(9,0,-1):\n        while N[i-1]>0:\n            for j in range(a):\n                if M[j][0]==i:\n                    count+=1\n                    if M[j][1]==1:\n                        print(count)\n                        N[i-1]=1\n                        k=1\n                    else:\n                        if j==0:\n                            del M[0]\n                        elif j==a-1:\n                            del M[j]\n                        else:\n                            M=M[j+1:]+M[:j]\n                    N[i-1]=N[i-1]-1\n                    break\n        \n        if k==1:\n            break"}, {"id": 46589670, "name": "\ud669\uc9c4\uc8fc", "x": -2.3727667331695557, "y": -20.722036361694336, "label": 0, "group": 100, "code": "\nimport sys\ninput = sys.stdin.readline\ncases = int(input())\nfor _ in range(cases):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    count = 0\n    target = m\n    while q:\n        temp = q[0]\n        if temp == max(q):\n            q.pop(0)\n            target -= 1\n            count += 1\n            if target < 0:\n                break\n            \n        else:\n            q.pop(0)\n            q.append(temp)\n            target -= 1\n            if target < 0:\n                target = len(q) - 1\n\n    print(count)"}, {"id": 44568039, "name": "\uae40\ud5a5\uae30", "x": -24.053159713745117, "y": 24.00455665588379, "label": 0, "group": 100, "code": "import sys \ninput = sys.stdin.readline\n\nres = []\n\nfor _ in range(int(input())) :\n    \n    N, M = map(int, input().split()) # N : \ubb38\uc11c\uc758 \uac1c\uc218, M : \uc54c\uace0\uc790 \ud558\ub294 \ubb38\uc11c\uc758 \ud604\uc7ac \uc778\ub371\uc2a4\n    printer = [t for t in enumerate(list(map(int, input().split())))] # (\ubb38\uc11c\uc758 \uc778\ub371\uc2a4, \uc911\uc694\ub3c4) \ud615\ud0dc\ub85c \uc800\uc7a5\n    importance = [x[1] for x in printer] # \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\ub9cc \ub530\ub85c \uc800\uc7a5\n    \n    \n    cnt = 1 # \uc778\uc1c4 \uc21c\uc11c\n    while True :\n        document = printer.pop(0) # \ub2e4\uc74c\uc73c\ub85c \uc778\uc1c4\ud558\uace0\uc790 \ud558\ub294 \ubb38\uc11c\n        if document[1] == max(importance) : # \ub2e4\uc74c\uc73c\ub85c \uc778\uc1c4\ud560 \ubb38\uc11c\uac00 \uac00\uc7a5 \uc911\uc694\ub3c4\uac00 \ub192\uc740 \uacbd\uc6b0\n            \n            if document[0] == M : # \uc54c\uace0\uc790 \ud558\ub294 \uc5b4\ub5a4 \ud55c \ubb38\uc11c\uc778 \uacbd\uc6b0\n                break\n            \n            importance.remove(document[1]) # \uc778\uc1c4\ud55c \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\ub294 \uc0ad\uc81c\n            cnt += 1 # \uc778\uc1c4 \uc21c\uc11c 1 \uc99d\uac00\n        \n        else : # \ub2e4\uc74c\uc73c\ub85c \uc778\uc1c4\ud560 \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\ubcf4\ub2e4 \ub192\uc740 \uc911\uc694\ub3c4\uc758 \ubb38\uc11c\uac00 \ub4a4\uc5d0 \ub300\uae30\ud558\uace0 \uc788\ub294 \uacbd\uc6b0\n            printer.append(document) # \ub2e4\uc2dc \ub300\uae30\uc5f4\uc758 \ub9e8 \ub4a4\uc5d0 \uc800\uc7a5\n        \n    \n    res.append(cnt)\n\nprint(*res, sep = '\\n')"}, {"id": 20773016, "name": "\uc0ac\uacf5\uc0c1\uc218", "x": 9.586079597473145, "y": -15.455854415893555, "label": 0, "group": 100, "code": "from sys import stdin\nnCase = int(input())\nfor _ in range(nCase):\n    nFile, curIdx = map(int, stdin.readline().split())\n    files = list(map(int, stdin.readline().split()))\n    priors = [prior for prior in files]\n    priors.sort(reverse=True)\n    i = 0\n    j = 0\n    cnt = 0\n    while 1:\n        if files[i] != priors[j]:\n            files.append(files[i])\n            if i == curIdx:\n                curIdx = len(files) - 1\n            i += 1\n        elif files[i] == priors[j]:\n            cnt += 1\n            if i == curIdx:\n                break\n            i += 1\n            j += 1\n    print(cnt)\n"}, {"id": 13334234, "name": "\uc124\ubbf8\uc9c4", "x": -15.203664779663086, "y": 12.579327583312988, "label": 0, "group": 101, "code": "TN = int(input()) # \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc758 \uc218\nfor test_case in range(TN):\n    #print(\"test case #{0}\".format(test_case))\n    N,M = map(int,input().split())\n    counter = 0 # counter for print turn\n    pos = M # position of M\n    docs = list(map(int,input().split()))\n    mx = max(docs)\n    while True:\n        #print(\"{0}\uc744 \ucc98\ub9ac \uc911\uc785\ub2c8\ub2e4.\".format(docs[0]))\n        if docs[0] == mx:\n            #print('{0}\uac00 \ucd5c\ub300\uac12\uc785\ub2c8\ub2e4.\ud504\ub9b0\ud2b8\ud569\ub2c8\ub2e4'.format(docs[0]))\n            #print(docs)\n            counter += 1\n            del docs[0]\n            if pos == 0:\n                print(counter)\n                break\n            else:\n                pos -= 1\n            mx = max(docs)\n        else:\n            docs.append(docs[0])\n            del docs[0]\n            if pos == 0:\n                pos =len(docs) - 1\n            else:\n                pos -= 1"}, {"id": 6375812, "name": "\ud64d\uc0c1\uc2dd", "x": 22.282434463500977, "y": 42.390785217285156, "label": 0, "group": 101, "code": "class printer():\n\tdef __init__(self, printing_queue, k):\n\t\tself.queue = printing_queue\n\t\tself.order = list(range(len(self.queue)))\n\t\tself.counter = 0\n\t\tself.search = k\n\tdef print1(self):\n\t\tn = self.queue.index(max(self.queue))\n\t\tself.queue = self.queue[n:]+self.queue[:n]\n\t\tself.order = self.order[n:]+self.order[:n]\n\t\tself.counter += 1\n\t\treturn self.queue.pop(0), self.order.pop(0)\n\tdef finder(self):\n\t\tx = (-1, -1)\n\t\twhile x[1] != self.search:\n\t\t\tx = self.print1()\n\t\treturn self.counter\n\nfor i in range(int(input())):\n\tn, k = map(int, input().split())\n\tlst = list(map(int, input().split()))\n\ttmp = printer(lst, k)\n\tprint(tmp.finder())"}, {"id": 21123744, "name": "\ubc31\ub3d9\uc601", "x": 14.132014274597168, "y": -3.7977874279022217, "label": 0, "group": 101, "code": "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n    n, k = map(int, stdin.readline().split())\n    priorities = list(map(int, stdin.readline().split()))\n    isPrinted = [False for _ in range(n)]\n    maxPriorities = sorted(priorities.copy())[::-1]\n    i = 0\n    rank = 0\n    while rank < n:\n        if isPrinted[i % n] == False and priorities[i % n] == maxPriorities[rank]:\n            rank += 1\n            if i % n == k:\n                print(rank)\n                break\n            else:\n                isPrinted[i % n] = True\n        i += 1"}, {"id": 15887205, "name": "\ud0c1\ub9cc\uc2dd", "x": 24.04521942138672, "y": 5.93893575668335, "label": 0, "group": 101, "code": "def when_m_printed(n, m):\n    priority = list(map(int, input().split()))\n    count = 0\n    while(True):\n        candidate = priority.pop(0)\n        if any(p > candidate for p in priority):\n            priority.append(candidate)\n        else:\n            count += 1\n            n -= 1\n            if m == 0:\n                return count\n        m = (n + m - 1) % n\n\n        \n        \ntest_case_count = int(input())\nfor _ in range(test_case_count):\n    n, m = list(map(int, input().split()))\n    print(when_m_printed(n, m))\n"}, {"id": 5876829, "name": "\ub178\uc724\uc6b0", "x": 6.45503044128418, "y": 22.397747039794922, "label": 0, "group": 102, "code": "case1 = int(input())\nfor x in range(case1):\n  cnt = 0\n  size,idx = input().split()\n  size = int(size)\n  idx = int(idx)\n  tmp = input().split()\n  n = list(map(int,tmp))\n\n  for x in range(size):\n    max_num = max(n)\n    while max_num != n[0]:\n      n += [ n[0]]\n      n.remove(n[0])\n      if idx == 0:\n        idx = len(n) - 1\n      else:\n        idx -= 1\n    if idx == 0:\n      cnt += 1\n      break\n    else:\n      n.remove(n[0])\n      idx -= 1\n      cnt += 1\n  print(cnt)"}, {"id": 43045758, "name": "\uac15\ud6a8\uc131", "x": -0.5682618618011475, "y": 0.4443974792957306, "label": 0, "group": 102, "code": "import sys\n\ninput = sys.stdin.readline\n\ntest_num = int(input().rstrip())\n\nfor _ in range(test_num):\n    cnt = 0\n    doc_num, ans = map(int,input().split())\n    priority = list(map(int,input().split()))\n    qu = list(range(len(priority)))\n    qu[ans] = 100\n\n    while 1:\n        if priority[0] == max(priority):\n            cnt += 1\n            if qu[0] == 100:\n                print(cnt)\n                break\n            else:\n                priority.pop(0)\n                qu.pop(0)\n        else:\n            qu.append(qu.pop(0))\n            priority.append(priority.pop(0))"}, {"id": 25772126, "name": "\uae40\uc815\uc740", "x": 26.310546875, "y": 1.2197452783584595, "label": 0, "group": 102, "code": "T = int(input())\nfor tc in range(T):\n    N, target = map(int, input().split())\n    Q = list(map(int, input().split()))\n\n    cnt = 0\n    while True:\n        maxN = maxIdx = 0\n        for i in range(N - cnt):\n            if Q[i] > maxN:\n                maxN = Q[i]\n                maxIdx = i\n        if target == maxIdx:\n            break\n        Q = Q[maxIdx + 1:] + Q[:maxIdx]\n        target += N - cnt - maxIdx - 1 if maxIdx > target else - maxIdx - 1\n        cnt += 1\n    print(cnt + 1)\n"}, {"id": 17182641, "name": "\ud55c\ud6a8\uc8fc", "x": -10.487066268920898, "y": -20.032386779785156, "label": 0, "group": 102, "code": "number = int(input())\nanswer = []\nNM = []\nfor i in range(0,number):\n    NM = list(map(int,input().split()))\n    number_of_card = NM[0]\n    location = NM[1]\n    count = 0\n    priority = list(map(int, input().split()))\n    while 1:\n        flag = True\n        for j in range(1,len(priority)):\n            if priority[0] < priority[j]:\n                pop = priority.pop(0)\n                priority.append(pop)\n                location = (location-1) % len(priority)\n                flag = False\n                break\n        if flag:\n            priority.pop(0)\n            count += 1\n            if location == 0:\n                answer.append(count)\n                break\n            location = (location - 1) % len(priority)\nfor i in answer:\n    print(i)\n"}, {"id": 38625668, "name": "\ud48d\uc7ac\uc2dd", "x": 16.789390563964844, "y": 10.853732109069824, "label": 0, "group": 103, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    papers = list(map(int, input().split()))\n    papers_target = papers[:]\n    papers_target[M] = \"target\"\n    res = 0\n\n    while True:\n        if papers[0] == max(papers):\n            res += 1\n\n            if papers_target[0] == \"target\":\n                print(res)\n                break\n            else:\n                del papers[0]\n                del papers_target[0]\n\n        else:\n            papers.append(papers[0])\n            del papers[0]\n\n            papers_target.append(papers_target[0])\n            del papers_target[0]"}, {"id": 26071358, "name": "\uc1a1\uc7ac\ub9bc", "x": -25.130983352661133, "y": -16.945344924926758, "label": 0, "group": 103, "code": "import sys\nsys.setrecursionlimit(10**8)\nT = int(input())\nfor _ in range(T):\n    n, m = map(int, sys.stdin.readline().split())\n    que = list(map(int, sys.stdin.readline().split()))\n    ans = 0\n    idx = 0\n    target = m\n    while True:\n        for i in range(idx+1, len(que)):\n            if que[i] > que[idx]:\n                que.append(que[idx])\n                if idx == target:\n                    target = len(que) - 1\n                idx += 1\n                break\n        else:\n            ans += 1\n            if idx == target:\n                print(ans)\n                break\n            idx += 1\n            "}, {"id": 31085034, "name": "\uc2ec\uc18c\uc740", "x": 7.136197090148926, "y": 23.132326126098633, "label": 0, "group": 103, "code": "T = int(input())\nleft=0\nfor _ in range(T):\n  N,M = map(int, input().split())\n  important = list(map(int,(input().split())))\n  seat = M\n  count = 0\n  while (1):\n    maxNum = max(important)\n    for _ in range(len(important)):\n      if important[0] == maxNum:\n        break\n      else:\n        if seat != 0:\n          seat -= 1\n          important.append(important.pop(0))\n        else:\n          seat = len(important)-1\n          important.append(important.pop(0))\n    if seat==0:\n      count+=1\n      break\n    if important[0] == maxNum:\n      important.pop(0)\n      count +=1\n      seat -= 1\n  print(count)\n"}, {"id": 21152930, "name": "\uc774\uc2dc\uc6d0", "x": -19.222984313964844, "y": 12.595880508422852, "label": 0, "group": 103, "code": "testCase = int(input())\n\nfor i in range(testCase):\n    cnt = 0\n    n,m = map(int, input().split()) #n\uc740 \ud504\ub9b0\ud2b8\ud560 \uac1c\uc218 m\uc740 \uc8fc\ubaa9\ud560 \uc778\ub371\uc2a4\n    printlsit = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n\n    cnt = 0\n    while 1:\n        if printlsit[0] == max(printlsit):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n                \n            else:\n                del printlsit[0]\n                del s_[0]\n        else:\n            printlsit.append(printlsit[0])\n            del printlsit[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 8253809, "name": "\uc804\uc778\uc6b1", "x": -36.355369567871094, "y": -6.209409236907959, "label": 0, "group": 104, "code": "import sys\nread = sys.stdin.readline\n\nclass queue:\n    def __init__(self):\n        self.arr = []\n        self.length = 0\n\n    def push(self, x, y):\n        self.arr += [[x, y]]\n        self.length += 1\n\n    def pop(self):\n        if self.length == 0:\n            return -1\n        else:\n            max1, mem, change = self.arr[0][0], 0, 0\n            for i, j in enumerate(self.arr):\n                if(j[0] > max1):\n                    mem = i\n                    max1 = j[0]\n                    change = 1\n            self.length -= 1 \n            if change == 1:\n                for _ in range(mem):\n                    ack = self.arr.pop(0)\n                    self.push(ack[0], ack[1])\n                return self.arr.pop(0)\n            return self.arr.pop(mem)\n\n\n    def size(self):\n        print(self.length)\n\n    def empty(self):\n        if self.length:\n            print(0)\n\n        else:\n            print(1)\n\n    def front(self):\n        if self.length == 0:\n            print(-1)\n        else:\n            print(self.arr[0])\n\n    def back(self):\n        if self.length == 0:\n            print(-1)\n        else:\n            print(self.arr[-1])\n\nfor _ in range(int(read())):\n    queue1 = queue()\n    a, b = map(int, read().split())\n    lst = list(map(int, read().split()))\n    for i, j in enumerate(lst):\n        if i == b:\n            queue1.push(j, 1)\n        else:\n            queue1.push(j, 0)\n    cnt = 0\n    while 1:\n        if queue1.pop()[1] == 1:\n            cnt += 1\n            break\n        else:\n            cnt += 1\n    print(cnt)"}, {"id": 30220926, "name": "\uc724\uc190\ud558", "x": 20.186357498168945, "y": 1.8497107028961182, "label": 0, "group": 104, "code": "test_num = int(input())\nflag = True\n\nfor i in range(test_num):\n    flag=True\n    num, idx = list(map(int, input().split()))\n    value = list(map(int, input().split()))\n\n    idx_list = [i for i in range(num)]\n    cnt = 0\n\n    while(flag==True):\n        max_idx = value.index(max(value))\n\n        while(max_idx!=0):\n            value.append(value.pop(0))\n            idx_list.append(idx_list.pop(0))\n            max_idx = value.index(max(value))\n        del value[0]\n        cnt+=1\n        if(idx == idx_list[0]):\n            print(cnt)\n            flag=False\n        del idx_list[0]\n\n"}, {"id": 12941226, "name": "\ud64d\ucda9\ubbfc", "x": 6.46986198425293, "y": 2.1705431938171387, "label": 0, "group": 104, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 37271979, "name": "\ub370\ub2c8\uc2a4 \uc624", "x": -11.22964096069336, "y": -16.718555450439453, "label": 0, "group": 104, "code": "from sys import stdin\nnum = int(stdin.readline())\n\nfor i in range(num):\n    data = list(map(int, stdin.readline().split()))\n    printer = list(map(int, stdin.readline().split()))\n    if data[0] == 1:\n        print(1)\n\n    elif len(set(printer)) == len(printer) or printer.count(printer[data[1]]) == 1:\n        print(sorted(printer, reverse=True).index(printer[data[1]]) + 1)\n\n    else:\n        find_arr = [\"false\"] * data[0]\n        find_arr[data[1]] = \"true\"\n        cnt = 0\n        while(1):\n            if \"true\" not in find_arr:\n                print(cnt)\n                break\n                \n            large = max(printer)\n            if len(set(printer)) == 1:\n                print(find_arr.index(\"true\") + 1 + cnt)\n                break\n            else:\n                temp = printer.index(large)\n                printer = printer[temp + 1:] + printer[:temp]\n                find_arr = find_arr[temp + 1 :] + find_arr[:temp]\n                cnt += 1\n\n\n\n\n\n\n\n\n"}, {"id": 6291773, "name": "\ud55c\uc18c\uc6d0", "x": 0.20904988050460815, "y": -21.196584701538086, "label": 0, "group": 105, "code": "t=int(input())\nfor _ in range(t):\n    n, m = map(int,input().split())\n    queue = list(map(int,input().split()))\n    count = 0\n    while( True ):\n        count += 1\n        max_index = queue.index(max(queue))\n        if ( queue[m] == max(queue) ):\n            if ( m != max_index ):\n                count += queue[:m].count(queue[m])\n            break\n        else:\n            queue = queue[max_index:]+queue[:max_index]\n            if ( max_index < m ):\n                m -= max_index + 1\n            elif ( m < max_index ):\n                m += len(queue) - max_index - 1\n            queue.pop(0)\n    print(count)"}, {"id": 25865361, "name": "\uc784\uc724\uc815", "x": 18.41183090209961, "y": 8.02587890625, "label": 0, "group": 105, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split()))\n    priority = list(map(int, input().split()))\n    idx = list(range(len(priority)))\n    idx[m] = 'target'  ## target \uc0bd\uc785\uc2dc\ucf1c \ub193\uae30 \n\n    # \uc21c\uc11c\n    order = 0\n    i = 0\n\n    while order != n:\n        if priority[0]==max(priority):\n            order += 1\n\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                priority.pop(0)\n                idx.pop(0)\n\n        else:\n            priority.append(priority.pop(0))\n            idx.append(idx.pop(0))\n\n\n"}, {"id": 18048708, "name": "\uae40\uc0ac\ub791", "x": 11.426851272583008, "y": 14.741238594055176, "label": 0, "group": 105, "code": "TESTCASE = int(input())\n\nfor i in range(TESTCASE):\n    M, N = list(map(int, input().split()))\n    array = [c for c in range(M)]\n    dictionary = {}\n    cnt = 1\n\n    if M == 1:\n        K = [int(input())]\n    else:\n        K = list(map(int, input().split()))\n\n    while True:\n        if len(K) == 1:\n            dictionary[array.pop(0)] = cnt\n            break\n\n        if max(K) != K[0]:\n            K.append(K.pop(0))\n            array.append(array.pop(0))\n        else:\n            K.pop(0)\n            dictionary[array.pop(0)] = cnt\n            cnt += 1\n\n    print(dictionary[N])\n\n"}, {"id": 20860256, "name": "\uace0\uc138\uc6d0", "x": 26.665483474731445, "y": -1.4624379873275757, "label": 0, "group": 105, "code": "from sys import stdin\nfor _ in range(int(input())):\n    N, M = map(int, stdin.readline().split())\n    q = list(map(int, stdin.readline().split()))\n    cnt = 0\n    while True:\n        if q[0] >= max(q):\n            q.pop(0)\n            cnt += 1\n            if M == 0:\n                break\n            else:\n                M -= 1\n        else:\n            q.append(q.pop(0))\n            if M == 0:\n                M = len(q) - 1\n            else:\n                M -= 1\n    print(cnt)\n"}, {"id": 9889797, "name": "\ubc30\uc6a9\uc900", "x": -21.524160385131836, "y": 4.892991065979004, "label": 0, "group": 106, "code": "import sys\n\n'''\ud504\ub9b0\ud130 \ud050\n\uc785\ub825 : \ubb38\uc11c \ub9ac\uc2a4\ud2b8, \uc54c\uace0\uc2f6\uc740 \ubb38\uc11c \uc704\uce58 \n\ucd9c\ub825: \ubb38\uc11c\uc758 \ucd9c\ub825 \ubc88\uc9f8\uc218'''\ndef get_doc_count(doc_queue, doc_loc):\n    count = 0\n\n    while True:\n        while doc_loc is not 0:\n            importance = doc_queue[0]\n            if len(doc_queue) is not 1 and importance < max(doc_queue[1:]):\n                doc_queue.append(doc_queue.pop(0))\n            else:\n                doc_queue.pop(0)\n                count += 1\n            doc_loc -= 1\n\n        if len(doc_queue) is not 1 and doc_queue[0] < max(doc_queue[1:]):\n            doc_queue.append(doc_queue.pop(0))\n            doc_loc = len(doc_queue)-1\n        else:\n            doc_queue.pop(0)\n            count += 1\n            break\n    return count\n\nif __name__ == '__main__':\n    test_case_num = int(input())\n    for _ in range(test_case_num):\n        n, loc = list(map(int, str(sys.stdin.readline()).rstrip().split(' ')))\n        queue = list(map(int, str(sys.stdin.readline()).rstrip().split(' ')))\n        print(get_doc_count(queue, loc))\n\n"}, {"id": 20155565, "name": "\ubc15\ud574\uc77c", "x": -34.99726486206055, "y": -4.857517719268799, "label": 0, "group": 106, "code": "import sys\n\nclass Queue:\n    def __init__(self):\n        self.items = []\n        self.front_Index = 0\n    def push(self, val, i):\n        x = []\n        x.append(val); x.append(i)\n        self.items.append(x)\n    def pop(self):\n        if len(self.items) == 0 or self.front_Index == len(self.items):\n            return -1\n        else:\n            x = self.items[self.front_Index][0]\n            self.front_Index += 1\n            return x\n    def front(self):\n        if len(self.items) == 0 or self.front_Index == len(self.items):\n            return -1\n        else:\n            x, y = self.items[self.front_Index][0], self.items[self.front_Index][1] \n            return x, y\n    def size(self):\n        return len(self.items) - self.front_Index\n    def empty(self):\n        return self.size() == 0\n\n\nn = int(input())\n\nfor i in range(n):\n    N, M = map(int,sys.stdin.readline().split())\n    input_list = list(map(int,sys.stdin.readline().split()))\n    cnt = 0\n    imp_list = []\n    my_Queue = Queue()\n    \n    for i in range(len(input_list)):\n        my_Queue.push(input_list[i], i)\n        val = my_Queue.items[i][0]\n        imp_list.append(val)\n    \n    imp_list.sort()\n\n    while not(my_Queue.empty()): #my_Queue.size() == False -> \uc774\ub807\uac8c \ub418\uba74 \ud2c0\ub9bc !\n        x, y = my_Queue.items[M]\n        val, index = my_Queue.front()\n        last = len(imp_list) - 1\n        most_imp = imp_list[last]\n        # val <= most_impt\n        if val < most_imp:\n            my_Queue.push(my_Queue.pop(), index)\n        else:\n            if val == x and index == y:\n                my_Queue.pop()\n                cnt += 1\n                print(cnt)\n                break\n            else:\n                my_Queue.pop()\n                cnt += 1\n                imp_list.pop()"}, {"id": 42630184, "name": "\ucd94\uae30\ucca0", "x": -19.202543258666992, "y": -5.008595943450928, "label": 0, "group": 106, "code": "import sys\ninput = sys.stdin.readline\n\ndef check_max():\n    global max_n\n    max_n = 0\n    for i in range(len(arr)):\n        if arr[i][1] > max_n:\n            max_n = arr[i][1]\n\nT = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    arr = list(enumerate(map(int, input().split())))\n    cnt = 0\n    max_n = 0\n    \n    check_max()\n    while True:\n        if arr[0][1] >= max_n:\n            cnt += 1\n            if arr[0][0] == M:\n                break\n            arr.pop(0)\n            check_max()\n        else:\n            doc = arr.pop(0)\n            arr.append(doc)\n\n    print(cnt)"}, {"id": 13240535, "name": "\ud48d\ud574\uc900", "x": 15.229933738708496, "y": 16.212263107299805, "label": 0, "group": 106, "code": "for i in range(int(input())):\n    N, M = map(int,input().split())\n    case = [i for i in range(N)]\n    arr = list(map(int,input().split()))\n    answer = []\n    while len(arr) != 0:\n        if arr[0] == max(arr):\n            answer.append(case[0])\n            del arr [0]\n            del case [0]\n        else:\n            arr.append(arr[0])\n            case.append(case[0])\n            del arr[0]\n            del case[0]\n    print(answer.index(M)+1)\n"}, {"id": 9141343, "name": "\ub958\uc6b0\uc900", "x": 15.585468292236328, "y": 3.675227403640747, "label": 0, "group": 107, "code": "t = int(input())\nb = []\nfor i in range(0, t):\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    i = 0\n    while True:\n        if a[0] == max(a):\n            if m == 0:\n                b.append(i+1)\n                break\n            a.pop(0)\n            i += 1\n            m -= 1\n        else:\n            a.append(a.pop(0))\n            m -= 1\n            if m < 0:\n                m += len(a)\n\nfor j in b:\n    print(j)"}, {"id": 47160138, "name": "\uc624\uc9c0\ud638", "x": 18.231096267700195, "y": 15.535548210144043, "label": 0, "group": 107, "code": "import sys\ninput=sys.stdin.readline\n\nk=int(input())\nfor i in range(k):\n    n,m=map(int,input().split())\n    data=list(map(int,input().split()))\n    data_q=[[j,l] for j,l in enumerate(data)]\n    data.sort(reverse=True)\n    j=0\n    cnt=1\n    while True:\n        while data_q[0][1]!=data[j]:\n            data_q.append(data_q[0])\n            del data_q[0]\n        j+=1\n        if data_q[0][0]==m:\n            print(cnt)\n            break\n        del data_q[0]\n        cnt+=1"}, {"id": 21414992, "name": "\uc608\ud61c\ubbf8", "x": -7.033580780029297, "y": 2.3483712673187256, "label": 0, "group": 107, "code": "import sys\n\ndef printer():\n    n, m = sys.stdin.readline().split()\n    n = int(n)\n    m = int(m)\n\n    q = []\n    s = sys.stdin.readline().split()\n    for i in range(n):\n        q.append((int(s[i]), i))\n\n    cnt = 1\n    while len(q) > 0:\n        k = max(q)\n        #print(q)\n        #print(k)\n        if k[0] == q[0][0]:\n            if q[0][1] == m:\n                return cnt\n            cnt += 1\n            del(q[0])\n        else:\n            q.append(q.pop(0))\n\n\ntc = int(sys.stdin.readline())\n\nfor i in range(tc):\n    print(printer())\n            \n"}, {"id": 31717518, "name": "\ubc15\ud638\uc900", "x": -0.5965415239334106, "y": -19.334274291992188, "label": 0, "group": 107, "code": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    m, k = map(int, input().split())\n    L = list(map(int, input().split()))\n    cnt = 0\n    while True:\n        B = True\n        for i in L:\n            if L[0] < i:\n                k = (k-1)%len(L)\n                L.append(L[0])\n                L.pop(0)\n                B = False\n        if B:\n            cnt += 1\n            if k == 0:\n                print(cnt)\n                break\n            else:\n                L.pop(0)\n                k -= 1"}, {"id": 8543151, "name": "\ubc30\uc131\ubbfc", "x": 5.7442708015441895, "y": -13.219334602355957, "label": 0, "group": 108, "code": "case = int(input())\nfor i in range(case):\n    N, M = map(int, input().split())\n    documents = list(map(int, input().split()))\n    \n    count = 0\n    temp = [0 for i in range(N)]\n    temp[M] = 1\n    while documents:\n        loc = documents.index(max(documents))\n        count += 1\n        if temp[loc]==1:\n            break\n        if loc == len(documents)-1:\n            documents = documents[:loc]\n            temp = temp[:loc]\n        else:\n            documents =  documents[loc+1:]+documents[:loc]\n            temp = temp[loc+1:]+temp[:loc]\n    print(count)"}, {"id": 39286334, "name": "\ud48d\ud574\uc601", "x": -22.60179328918457, "y": 20.228355407714844, "label": 0, "group": 108, "code": "import sys\nssr = sys.stdin.readline\n\nc = int(ssr())\nfor i in range(c):\n    n,m = map(int, ssr().split())#\ubb38\uc11c\uc758 \uac2f\uc218 n, \uad81\uae08\ud55c\uac8c \uc67c\ucabd \uba87 \ubc88\uc9f8\uc5d0 \uc788\ub294\uc9c0 m\n    imp = list(map(int, ssr().split()))#n\uac1c \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\uac00 \ucc28\ub840\ub300\ub85c \uc8fc\uc5b4\uc9d0\n    cnt = 0\n    for j in range(n):\n        idx = imp.index(max(imp))\n        if idx <= m:\n            _=1\n        else:\n            m += len(imp)\n        imp.extend(imp[0:idx])\n        del imp[0:idx]\n        m -= idx\n        imp.pop(0)\n        m -= 1\n        cnt += 1#\uc6d0\uc18c\uac00 \uc544\ub2c8\ub77c \uc6d0\ub798 \uc6d0\uc18c\uc758 \uc704\uce58\ub97c\n        if m == -1:\n            print(cnt)\n            break"}, {"id": 8622231, "name": "\ud55c\uc11d\uaddc", "x": 1.8655463457107544, "y": 1.1974542140960693, "label": 0, "group": 108, "code": "caseNo=int(input())\nfor x in range(caseNo):\n    docNo, doc=map(int,input().split())\n    doc_list=list(map(int,input().split()))\n\n    idx=[i for i in range(len(doc_list))]\n    result=[]\n    result_idx=[]\n\n    if len(doc_list)==1:\n        print(1)\n    else:\n        while True:\n\n            if doc_list[0]==max(doc_list):\n                result.append(doc_list.pop(0))\n                result_idx.append(idx.pop(0))\n                if result_idx[-1] == doc:\n                    print(len(result))\n                    break\n            else:\n                doc_list.append(doc_list.pop(0))\n                idx.append(idx.pop(0))"}, {"id": 36194904, "name": "\uc131\ubcd1\uace4", "x": -2.5074408054351807, "y": 10.854986190795898, "label": 0, "group": 108, "code": "T=int(input())\nfor i in range(T):\n    N,M=map(int,input().split())\n    P=list(map(int,input().split()))\n    Q=[]\n    S=[]\n    for j in range(N):\n        Q.append([j,P[j]])\n    P = sorted(P, reverse=True)\n    while P!=[]:\n        if Q[0][1]==P[0]:\n            S.append(Q[0])\n            Q.remove(Q[0])\n            P.remove(P[0])\n        else:\n            Q.append(Q[0])\n            Q.remove(Q[0])\n    for j in range(len(S)):\n        S[j]=[S[j][0],S[j][1],j]\n    S = sorted(S)\n    print(S[M][2]+1)"}, {"id": 25966723, "name": "\ucd5c\ud604\uc8fc", "x": 18.88762092590332, "y": 7.197830677032471, "label": 0, "group": 109, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n, m = list(map(int, input().split()))\n    imp = list(map(int, input().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n    order = 0\n    \n    while True:\n        if imp[0] == max(imp):\n            order += 1\n            \n            if idx[0] == 'target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 29859241, "name": "\uc190\ucca0\uc815", "x": -17.106975555419922, "y": 2.644676923751831, "label": 0, "group": 109, "code": "def solution(priorities, location):\n    answer = 0\n    maximum = max(priorities)\n    length = len(priorities)\n    while 1 :\n        if priorities[0] == maximum :\n            answer += 1\n            if location == 0 : return answer\n            priorities.pop(0)\n            maximum = max(priorities)\n            location -= 1\n            length -= 1\n        else :\n            if location : location -= 1\n            else : location = length - 1\n            priorities.append(priorities.pop(0))\n            \n    return answer\n\nn = int(input())\nfor i in range(n) :\n  a, b = map(int, input().split())\n  priorities = list(map(int, input().split()))\n  print(solution(priorities,b))"}, {"id": 18869028, "name": "\uc815\uc120\ud76c", "x": -7.571621417999268, "y": -24.74940299987793, "label": 0, "group": 109, "code": "T = int(input())\nfor t in range(1, 1+T):\n    N, M = map(int, input().split())\n    printer = list(map(int, input().split()))\n    max_num = max(printer)\n    num = []\n    for j in range(N):\n        num.append(j)\n    cnt = 0\n    while True:\n        if printer[0] < max_num:\n            printer.append(printer.pop(0))\n            num.append(num.pop(0))\n        elif printer[0] == max_num:\n            cnt += 1\n            printer.pop(0)\n            deQ = num.pop(0)\n            if len(printer) == 0:\n                print(cnt)\n                break\n            else:\n                max_num = max(printer)\n            if deQ == M:\n                print(cnt)\n                break"}, {"id": 48702349, "name": "\ud64d\uc778\uc815", "x": -16.28215980529785, "y": 21.17658805847168, "label": 0, "group": 109, "code": "import sys\ninput = sys.stdin.readline\nfor T in range(int(input())):\n    N, M = map(int, input().split())\n    target = list(map(int, input().split()))\n    cnt = 0\n    i = 0\n    while len(target) != 0:\n        if target[i] == max(target):      # \uc6b0\uc120\uc21c\uc704\uac00 \uac19\uc74c\n            cnt += 1                      # \uce74\uc6b4\ud305\n            if i == M:                    # \uc778\ub371\uc2a4\ub3c4 \uac19\uc73c\uba74 break\n                break\n            if i == len(target) - 1:\n                target.pop(i)\n                i = 0\n            else:\n                target.pop(i)\n                if i < M:\n                    M -= 1\n            N -= 1\n        else:\n            i = (i+1) % N\n\n    print(cnt)"}, {"id": 16178038, "name": "\ubc31\ubbf8\uc5f0", "x": -17.221784591674805, "y": 4.568453788757324, "label": 0, "group": 110, "code": "'''\nProblem URL: https://www.acmicpc.net/problem/1966\n'''\n\nimport sys\nimport os\nfrom collections import deque\nimport heapq\n\nif __name__ == '__main__':\n\n    T = int(sys.stdin.readline().strip())\n    for _ in range(T):\n        N, M = [int(x) for x in sys.stdin.readline().strip().split()]\n        importance = [int(x) for x in sys.stdin.readline().strip().split()]\n\n        # we need to save index in case of duplicate importance\n        # deq[i] = (index, importance)\n        deq = deque([(index, value) for (index, value) in enumerate(importance)])\n\n        # store max elements\n        # do not use set because I delete improtance from list\n        # since list.pop() is O(1) and list.pop(i) is O(n), use ascending order list\n        importance_list = sorted(importance)\n\n        answer = 1\n        while not(deq[0][0] == M and deq[0][1] == importance_list[-1]):\n            front = deq.popleft()\n            if front[1] < importance_list[-1]:\n                deq.append(front)\n            else:\n                importance_list.pop()\n                answer += 1\n\n        print(answer)\n"}, {"id": 34728981, "name": "\uad8c\ubbf8\uc9c4", "x": -13.013908386230469, "y": -17.012041091918945, "label": 0, "group": 110, "code": "a = int(input())\nres = []\n\nfor i in range(a):\n    cnt = 0\n    n ,m= map(int, input().split())\n    k = list(map(int, input().split(' ')))\n    '''\n    tmp_list = []\n    for j in range(len(k)):\n        if j == m:\n            tmp_list.append('key')\n        else:\n            tmp_list.append(str(j))\n    dict_ = dict(zip(tmp_list, k))\n    print(dict_.pop(0))\n    '''\n    tmp_list = []\n    for j in range(len(k)):\n        if j == m:\n            tmp_list.append('key')\n        else:\n            tmp_list.append(str(j))\n    \n    while True:\n        tmp = k.pop(0)\n        tmp2 = tmp_list.pop(0)\n        if len(k) == 0:\n            cnt += 1\n            break\n        if max(k) <= tmp:\n            cnt += 1\n            if tmp2 == 'key':\n                break\n        else:\n            k.append(tmp)\n            tmp_list.append(tmp2)\n        \n    res.append(cnt)\n\nfor i in range(len(res)):\n    print(res[i])"}, {"id": 18565782, "name": "\ud55c\uc2b9\uc740", "x": -2.728781223297119, "y": 8.874841690063477, "label": 0, "group": 110, "code": "N = input()\n#data = [1,1,9,1,1,1]\nque=[]\norder =0\n#n,m = 6,0\nfor _ in range(int(N)):\n    n,m =  list(map(int, input().split()))\n    data = list(map(int, input().split()))\n    que=[]\n    order =0\n\n    for idx, val in enumerate(data):\n        que.append((val, idx))\n    while True :\n        if que[0][0] == max(que)[0]:\n\n            a = que.pop(0)\n            order +=1\n            if a[1] == m:\n                print(order)\n                break\n        else : \n            que.append(que.pop(0))\n    \n#if que[0][0] ==max"}, {"id": 12133382, "name": "\uae40\uaddc\ub9ac", "x": -17.685211181640625, "y": -20.221622467041016, "label": 0, "group": 110, "code": "from sys import stdin as st\nN=eval(st.readline())\n\nfor z in range(N):\n    a, b= map(eval, st.readline().split())\n    x=list(map(eval,st.readline().split()))\n    c=[]\n    for j in x:\n        c.append(j)\n    l=1\n    while True:\n        if b==0:\n            if max(c)==c[0]:\n                c.pop(0)\n                print(l)\n                break\n            else:\n                b=len(c)-1\n                c.append(c.pop(0))\n        else:\n            if max(c)==c[0]:\n                c.pop(0)\n                l+=1\n                b-=1\n            else:\n                c.append(c.pop(0))\n                b-=1"}, {"id": 33307622, "name": "\uc2e0\ud0dc\uc724", "x": -2.1647305488586426, "y": 13.123201370239258, "label": 0, "group": 111, "code": "import heapq\n\ncases = int(input())\nresult = []\n\nfor i in range(cases):\n    count = 1\n    documents, interested = map(int, input().split(' '))\n    priority = list(map(int, input().split(' ')))\n    pq = [(priority[i], i) for i in range(documents)]\n    while pq:\n        max_priority = max([x[0] for x in pq])\n        while pq[0][0] != max_priority:\n            pq.append(pq.pop(0))\n        data = pq.pop(0)\n        if data[1] == interested:\n            result.append(count)\n            break\n        count += 1\n\nfor _ in range(cases):\n    print(result[_])\n"}, {"id": 21102626, "name": "\uc720\ubbf8\uc120", "x": -2.780212163925171, "y": -23.345829010009766, "label": 0, "group": 111, "code": "tc = int(input())\n\nfor t in range(tc):\n    n, pos = map(int, input().split())\n    count = 0\n    q = list(map(int, input().split()))\n    m = max(q)\n    while q:\n        if q[0] == m and pos == 0:\n            count += 1\n            q.pop(0)\n            break\n            \n        elif q[0] == m:\n            q.pop(0)\n            m = max(q)\n            count += 1\n\n        else:\n            q.append(q.pop(0))\n            \n        if pos == 0:\n            pos = len(q) - 1\n        else:\n            pos -= 1\n    \n    print(count)"}, {"id": 12309255, "name": "\uc624\ubbfc\uae30", "x": -23.97771453857422, "y": -4.6734619140625, "label": 0, "group": 111, "code": "import sys\n\ndef printer(N,M,L):\n    result=[]\n    print_que=[0]*N\n    print_que[M]=1\n    while L!=[]:  \n        i=0\n        while i<len(L):\n            a=L[0]\n            if a<L[i]:\n                L=L[1:]\n                L.append(a)\n                print_que.append(print_que[0])\n                print_que=print_que[1:]\n                i=0\n                continue\n            else:\n                i+=1\n        result.append(print_que[0])\n        print_que=print_que[1:]\n        L=L[1:]\n\n    return result.index(1)+1\n\nfor i in range(int(sys.stdin.readline())):\n    s1=str(sys.stdin.readline()).rstrip().split(\" \")\n    s1=list(map(int,s1))\n    s2=str(sys.stdin.readline()).rstrip().split(\" \")\n    s2=list(map(int,s2))\n    print(printer(s1[0],s1[1],s2))"}, {"id": 22218778, "name": "\ud558\uc2dc\ud558", "x": -11.439796447753906, "y": 18.901756286621094, "label": 0, "group": 111, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    # \ubb38\uc11c \uc218, \uad81\uae08\ud55c \ubb38\uc11c \uc704\uce58\n    n, m = list(map(int, input().split()))\n    # \ubb38\uc11c \uc911\uc694\ub3c4\n    docs = list(map(int, input().split()))\n\n    ##### \uc778\ub371\uc2a4 \ub9ac\uc2a4\ud2b8 \ub9cc\ub4dc\ub294\uac8c \uc778\uc0c1\uc801\n    idx = [0] * len(docs)\n\n    idx[m] = 'target'\n    answer = 0\n\n    while True:\n        if docs[0] == max(docs):\n            docs.pop(0)\n            answer += 1\n            if idx.pop(0) == 'target':\n                print(answer)\n                break\n        else:\n            docs.append(docs.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 39431417, "name": "\uc2ec\uc724\uc7ac", "x": 14.607478141784668, "y": -12.791361808776855, "label": 0, "group": 112, "code": "import sys\n\nT = int(sys.stdin.readline())\nfor t in range(T):\n    N,M = map(int, sys.stdin.readline().split())\n    DOCS = list(map(int, sys.stdin.readline().split()))\n\n    DOCS = [[i,v] for i,v in enumerate(DOCS)]\n    prior = max(DOCS, key=lambda x: x[1])[1]\n\n    cnt = 0\n    while DOCS:\n        x = DOCS.pop(0)\n        if x[1] == prior:\n            if x[0] == M:\n                break\n            prior = max(DOCS, key=lambda x: x[1])[1]\n            cnt += 1\n            continue\n        else:\n            DOCS.append(x)\n    print(cnt+1)"}, {"id": 26074822, "name": "\uc624\uc21c\uc7ac", "x": -11.053193092346191, "y": -21.88482666015625, "label": 0, "group": 112, "code": "n = int(input())\n\norder = []\nfor i in range(n):\n    m, p = list(map(int, input().split(' ')))\n    queue = list(map(int,input().split(' ')))\n    index = p\n    count = 0\n    while len(queue) > 0:\n        if queue[0] == max(queue):\n            if index == 0:\n                count += 1\n                order.append(count)\n                break\n            else:\n                index -= 1\n                count += 1\n                del queue[0]\n        else:\n            temp = queue[0]\n            del queue[0]\n            queue.append(temp)\n            if index == 0:\n                index = len(queue) - 1\n            else:\n                index -= 1\n\nfor s in order:\n    print(s)"}, {"id": 43248374, "name": "\ucd5c\uacbd\uc77c", "x": -36.09892654418945, "y": -3.8285558223724365, "label": 0, "group": 112, "code": "cases = []\n\nclass Doc:\n    def __init__(self, i):\n        self.important = i\n        self.target = False\n\nclass Docs:\n    def __init__(self):\n        self.docs = []\n        self.printCnt = 0\n\n    def addDocs(self, doc):\n        self.docs.append(doc)\n\n    def setTarget(self, t):\n        self.docs[t].target = True\n\n    def print(self):\n        t = self.docs.pop(0)\n        if self.isMax(t):\n            self.printCnt += 1\n            if t.target:\n                return True\n            return False\n        else:\n            self.docs.append(t)\n\n    def isMax(self, t):\n        for i in self.docs:\n            if i.important > t.important:\n                return False\n        return True\n\nfor _ in range(int(input())):\n    N, M = map(int, input().split())\n    d = list(map(int, input().split()))\n    docs = Docs()\n    for i in d:\n        docs.addDocs(Doc(i))\n    docs.setTarget(M)\n    cases.append(docs)\n\nfor docs in cases:\n    while True:\n        if docs.print():\n            print(docs.printCnt)\n            break"}, {"id": 44942612, "name": "\uc815\uc9c0\ud6c4", "x": 22.911588668823242, "y": 1.9737416505813599, "label": 0, "group": 112, "code": "# Baekjoon 1966\n\nfrom sys import stdin\nT = int(stdin.readline())\n\nfor i in range(T):\n    N, M = list(map(int, stdin.readline().split()))\n    queue = list(map(int, stdin.readline().split()))\n    target = [False] * N\n    target[M] = True\n    order = 1\n    while len(queue) != 0:\n        if queue[0] < max(queue):\n            queue.append(queue.pop(0))\n            target.append(target.pop(0))\n        else:\n            if target[0]:\n                print(order)\n                break\n            queue.pop(0)\n            target.pop(0)\n            order += 1\n"}, {"id": 19797413, "name": "\uc804\uc601\ubbf8", "x": -1.5665714740753174, "y": -21.736106872558594, "label": 0, "group": 113, "code": "t = int(input())\nwhile t:\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    cnt=1\n    while True:\n        if q.index(max(q)) == 0:\n            if m==0:\n                break\n            else:\n                del q[0]\n                m-=1\n                cnt+=1\n        else:\n            temp = q[0]\n            del q[0]\n            q.append(temp)\n            if m==0:\n                m=len(q)-1\n            else:\n                m-=1\n    print(cnt)\n    t-=1"}, {"id": 29965686, "name": "\ubcf5\ubcf4\uc120", "x": -23.556365966796875, "y": 22.347946166992188, "label": 0, "group": 113, "code": "import sys\n\ntest_case = int(sys.stdin.readline())\n\nfor _ in range(test_case):\n    n,m = map(int,sys.stdin.readline().split())\n    priority = list(map(int,sys.stdin.readline().split()))  #\ubb38\uc11c \uc911\uc694\ub3c4\ub97c \ub9ac\uc2a4\ud2b8\uc5d0 \ub2f4\ub294\ub2e4\n    answer = 0\n\n    while True:\n        if priority[0] != max(priority):    #\uccab \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\uac00 \uac00\uc7a5 \ub192\uc9c0 \uc54a\ub2e4\uba74\n            priority.append(priority[0])    #\uccab \ubb38\uc11c\ub97c \ub9e8\ub4a4\ub85c \uc62e\uae34\ub2e4\n            priority.remove(priority[0])    #\uccab \ubb38\uc11c \uc0ad\uc81c\n            \n            if m != 0:      #\uc778\ub371\uc2a4 \uac12 \uc774\ub3d9\n                m -= 1\n            else:\n                m = len(priority)-1\n\n        elif priority[0] == max(priority):  #\uccab \ubb38\uc11c\uac00 \uc911\uc694\ub3c4\uac00 \uac00\uc7a5 \ub192\ub2e4\uba74\n            priority.remove(priority[0])    #\uccab \ubb38\uc11c\uc0ad\uc81c\n            answer += 1 #\ucd9c\ub825 \uc21c\uc11c \uc99d\uac00\n            if m == 0:  #\ud655\uc778\ud558\uace0 \uc2f6\uc740\uac8c \ucd9c\ub825\ub41c\ub2e4\uba74, \ubc18\ubcf5\ubb38 \ud0c8\ucd9c\n                break\n            m -= 1\n\n    print(answer)    "}, {"id": 7414781, "name": "\uc1a1\ud61c\uad50", "x": -17.877479553222656, "y": -13.840718269348145, "label": 0, "group": 113, "code": "from sys import stdin, exit\n\nread = lambda : stdin.readline().rstrip()\ntest = int(read())\n# print(test)\n\nfor i in range(test):\n    read = lambda: stdin.readline().rstrip()\n    element = list(map(int,read().split()))\n    priority = list(map(int,read().split()))\n    # print(element, priority)\n    targetidx = element[1]\n    count = 0\n    while priority:\n        # print(priority, targetidx)\n        if priority[0] == max(priority):\n            if targetidx == 0:\n                count += 1\n                print(count)\n                break\n            else:\n                count += 1\n                priority.remove(priority[0])\n                targetidx -= 1\n        else:\n            if targetidx == 0:\n                priority.append(priority[0])\n                priority.remove(priority[0])\n                targetidx = len(priority) - 1\n            else:\n                priority.append(priority[0])\n                priority.remove(priority[0])\n                targetidx -= 1"}, {"id": 38210568, "name": "\uc2e0\uc601\uc9c4", "x": -6.502703666687012, "y": -3.7237050533294678, "label": 0, "group": 113, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    n, i = map(int, input().split())\n    importance = list(map(int, input().split()))\n    index_checking = [0 for i in range(n)]\n    index_checking[i] = 1\n    cnt = 0\n    while 1:\n        if importance[0] == max(importance):\n            cnt += 1\n            if index_checking[0] == 1:\n                print(cnt)\n                break\n            else:\n                del index_checking[0]\n                del importance[0]\n        else:\n            index_checking.append(index_checking[0])\n            del index_checking[0]\n            importance.append(importance[0])\n            del importance[0]"}, {"id": 36626335, "name": "\uc815\uc2b9\uc544", "x": -26.438705444335938, "y": 25.506145477294922, "label": 0, "group": 114, "code": "import sys\n\ndef checkPriority(arData:list): # Function Annotation\n    # \ud30c\uc774\uc36c\uc758 \uace0\uc9c8\uc801\uc778 return or parameter \ud0c0\uc785 \ud45c\uae30\uc758 \ubb38\uc81c\ub97c \uc644\ud654\uc2dc\ucf1c\uc8fc\ub294 \uc560\n    # arData:list\uc758 \ub73b\uc740 arData\ub77c\ub294 \ubcc0\uc218\uac00 parameter\ub85c \ub4e4\uc5b4\uc624\ub294\ub370, \uc598\ub294 list\uc5ec\uc57c\ud55c\ub2e4\ub294\ub73b\n    maxNum = 9 # \uac00\uc7a5 \ub192\uc740 \uc6b0\uc120\uc21c\uc704\ubd80\ud130 \uae4e\uc73c\uba74\uc11c \uc21c\uc704\ub97c \ub123\uc5b4\uc904 \uc608\uc815\n    breakPoint = len(arData) # \ub370\uc774\ud130\uc758 \ud06c\uae30\ub97c \uc7bc\n    # count\ub791 index\ub97c \uc0ac\uc6a9\ud560\uac74\ub370, \ubc29\uae08 \ubcf4\uc5ec\uc900\uac83\uacfc \uac19\uc774 index\ub85c \ub370\uc774\ud130\ub97c \uc870\ud68c\ud588\uc744\ub54c, \uac12\uc774 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc73c\uba74 error\uac00 \ub0a8\n    # error type\uc740 ValueError\ub85c try except\uad6c\ubb38\uc744 \uc4f0\uac70\ub098 count\ub85c \uc788\ub098 \uc5c6\ub098 \uc870\ud68c\ub97c \ud574\ubcf4\uace0 index\ud574\ub3c4 \ub428.\n    # \ud6c4\uc790\ub97c \ucd94\ucc9c\ud568. try except\ub294 \uad6c\uba4d\ub09c \ubc30\uc5d0 \ud14c\uc774\ud504\ub85c \ub9c9\ub294\uac83\uacfc \ube44\uc2b7\ud574\uc11c \ub0a8\ubc1c\ud558\uba74 \uce68\ubab0\ud568\n    result = list() # \uc6b0\uc120\uc21c\uc704\ub300\ub85c \uc774 \ub9ac\uc2a4\ud2b8\uc5d0 \ud55c\uaebc\ubc88\uc5d0 \uc800\uc7a5\ud55c \ud6c4 \uacb0\uacfc\ub97c \ubf51\uc744\uc608\uc815\n    for i in range(10):\n        if arData.count(maxNum) > 0:\n            tryIndex = arData.index(maxNum) # \ud604\uc7ac \uc778\ub371\uc2a4\ub294 \ucc98\uc74c \ub531 \ud55c\ubc88\ub9cc \uc120\uc5b8\ud574\uc8fc\ub294\ub370, \uac00\uc7a5 \uc55e\uc5d0 \uc788\uc73c\uba74\uc11c \uac00\uc7a5 \ud070 \uc6b0\uc120\uc21c\uc704\ub97c \uac00\uc9c4 \uc778\ub371\uc2a4\uac00\n                                            # \ubb34\uc870\uac74 \uccab\ubc88\uc9f8\uc774\uace0 \uc774\ud6c4\ubd80\ud134 \ub530\ub85c \uc120\uc5b8 X\n            break\n        else:\n            maxNum-=1\n    nextTarget = 0\n    while True:\n        if breakPoint == arData.count(0): # 7\ubc88\uc904\uc5d0\uc11c \uc120\uc5b8\ud55c\uac78 \uac00\uc9c0\uace0\uc640\uc11c 0\uc778 \uc22b\uc790\uac00 \ub9ac\uc2a4\ud2b8\uc758 \ud06c\uae30\uc640 \uac19\uc73c\uba74 \ub9ac\ud134\ud558\uace0 \uc885\ub8cc\n            # \uac19\ub2e4\ub294\uac74 \uc989 \ubaa8\ub4e0 \uac12\uc774 0\uc73c\ub85c \ub418\uc5b4\uc788\ub2e4\ub294 \ub73b\uc774\ub77c\uc11c\n            return result # \ub9ac\ud134 \uac12\uc744 \ud1a0\ub300\ub85c m\ubc88\uc9f8 \uac12\uc774 \uba87\ubc88 \uc778\ub371\uc2a4\uc5d0 \uc788\ub294\uc9c0 \ucc3e\uc74c. \uadf8\uac8c \uace7 \uadf8 \uac12\uc758 \ucd9c\ub825 \uc21c\uc11c\n        if arData.count(maxNum) == 0:\n            maxNum -= 1\n        for i in range(arData.count(maxNum)):\n            try:\n                nextTarget = arData.index(maxNum,tryIndex)\n            except ValueError:\n                nextTarget = arData.index(maxNum)\n            tryIndex = nextTarget\n            if tryIndex >= len(arData):\n                tryIndex = 0\n            if arData[tryIndex] == maxNum:\n                result.append(tryIndex)\n                arData[tryIndex] = 0\n            tryIndex += 1\n\ndef main():\n    nInputTestCase = int(sys.stdin.readline())\n    # \ubb38\uc11c\uc758 \uac1c\uc218n, \uc870\ud68c\ud560 \ub370\uc774\ud130 \uc21c\uc11c m :: \uc608) 4\uac1c\uc758 \ubb38\uc11c \uc911 0\ubc88\uc9f8 \ub370\uc774\ud130\uc758 \ucd9c\ub825\uc21c\uc11c\uac00 \uad81\uae08\ud558\ub2e4\n    # \uc0ac\uc871\uc744 \ubd99\uc774\uc790\uba74, \ud504\ub85c\uadf8\ub798\ubc0d\uc740 \ub098\ube44\ud6a8\uacfc \uc815\ub3c4\ub85c \uc0dd\uac01\ud574\uc57c\ud568.\n    # \uccab\ubc88\uc9f8 \ubd84\uae30\uc5d0\uc11c \uc5b4\ub5a4 \ucf54\ub4dc\ub97c \uc9dc\ub290\ub0d0\uc5d0 \ub530\ub77c \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd\uc774 \ub2ec\ub77c\uc9d0.\n    # \ub2e4\ub9cc, \uc815\ub2f5\uc774 \uc815\ud574\uc9c0\uc9c0 \uc54a\uc740\uac74 \uac19\uc74c \ubaa8\ub4e0\uac8c \uc815\ub2f5\uc774\uc790 \uc815\ub2f5\uc774 \uc544\ub2d8.\n    # \uc5ec\uae30\uc11c n,m\uc774\ub77c \uc815\uc758\ud588\uc9c0\ub9cc, \uc5b4\ucc28\ud53c 2\uac1c\uc758 \ub370\uc774\ud130\uac00 \uace0\uc815\uc801\uc73c\ub85c \ub4e4\uc5b4\uc624\uace0 n,m\uc4f0\uae30 \uadc0\ucc2e\uc544\uc11c \ub9ac\uc2a4\ud2b8\ub85c \uad00\ub9ac\ud560 \uc0dd\uac01\n    for i in range(nInputTestCase):\n        queueList = list(map(int,sys.stdin.readline().split())) # 6 0\n        # prioirties\n        priorities = list(map(int,sys.stdin.readline().split())) # 1 1 9 1 1 1\n\n        # \uc5ec\uae30\uc11c\ub3c4 \ud558\ub098\uc758 \ubd84\uae30\uac00 \uc0dd\uae38\uc218\ub3c4 \uc788\uc744\ub4ef.\n        # 6 0 / 1 1 9 1 1 1 \uc758 \uc608\uc81c\ub97c \ubcfc\ub54c, 6\uac1c\uc758 \ubb38\uc11c \uc911 0\ubc88\uc778\ub371\uc2a4\uac00 \uba87\ubc88\uc9f8\ub85c \ucd9c\ub825\ub418\ub294\uc9c0\ub97c \uc54c\uace0\uc2f6\uc740\uac74\ub370, \n        # \uc6b0\uc120\uc21c\uc704\ub97c for\ubb38\uc744 \uc774\uc6a9\ud574 n\uac1c\uc758 \ub370\uc774\ud130\uc758 \uc6b0\uc120\uc21c\uc704\ub97c \ubc1b\ub290\ub0d0, \uc544\ub2c8\uba74 \uc0c1\uad00\uc5c6\uc774 \uadf8\ub0e5 \ubc1b\ub290\ub0d0\uc758 \ucc28\uc774\n        # \ucc38\uace0\ub85c \ud574\ub2f9 \ubb38\uc81c\ub294 \uc0c1\uad00\uc774 \uc5c6\uc9c0\ub9cc, \uc2e4\uc81c \ucf54\ub529\uc758 \uacbd\uc6b0 \uc804\uc790\ub85c \uc9dc\uc57c\ud568\n\n        priorList = checkPriority(priorities) # \uc2e4\uc9c8\uc801\uc778 \uacc4\uc0b0\ud558\ub294 \ud568\uc218. \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740\ub300\ub85c \ub9ac\uc2a4\ud2b8\uc5d0 \uaf42\uc544\uc90c\n\n        result = priorList.index(queueList[1]) + 1\n        print(result)\n        \n        \n\nmain()"}, {"id": 29919939, "name": "\ud5c8\uc740\uc625", "x": -24.167644500732422, "y": 21.575098037719727, "label": 0, "group": 114, "code": "# \ubb38\uc81c\uc218\ntestCnt = int(input())\nans = []\n\nfor i in range(testCnt):\n    # \ubb38\uc11c\uc218, \uc54c\uace0\uc2f6\uc740 \ubb38\uc11c\ubc88\ud638\n    printCnt, printNum = map(int, input().split())\n\n    # \ud504\ub9b0\ud2b8\ud050\n    printQue = list(map(int, input().split()))\n\n    # \ubb38\uc11c\ucd9c\ub825 \uce74\uc6b4\ud2b8\n    cnt = 0\n\n    while printQue:\n        # \ucd9c\ub825\uc5ec\ubd80\n        isPrint = True\n\n        for j in range(1, len(printQue)):\n            # \ud604\uc7ac\ubb38\uc11c\ubcf4\ub2e4 \ud070 \ubb38\uc11c\uac00 \uc788\uc73c\uba74 \ucd9c\ub825\uc548\ud568\n            if printQue[0] < printQue[j]:\n                isPrint = False\n                break\n\n        if isPrint:\n            # \ucd9c\ub825\uc218 \uce74\uc6b4\ud2b8\n            cnt += 1\n\n            # \ucd9c\ub825\n            printQue.pop(0)\n\n            # \ud604\uc7ac\ubb38\uc11c\uac00 \ub0b4\uac00 \uc54c\uace0\uc2f6\uc740 \ubb38\uc11c\uc774\uba74 \uc885\ub8cc\n            if printNum == 0:\n                ans.append(cnt)\n                break\n        else:\n            # \ucd9c\ub825\uc744 \ud558\uc9c0 \uc54a\uace0 \ud604\uc7ac\ubb38\uc11c\ub97c \uac00\uc7a5 \ub4a4\ub85c\n            printQue.append(printQue.pop(0))\n\n        if printNum == 0:\n            printNum = len(printQue) - 1\n        else:\n            printNum -= 1\n\nfor i in ans:\n    print(i)"}, {"id": 20522036, "name": "\uc804\uc601\ub0a8", "x": -17.67393684387207, "y": -10.954523086547852, "label": 0, "group": 114, "code": "import sys\n\ns = sys.stdin.readline()\ntc = int(s)\n\nfor t in range(tc):\n    s = sys.stdin.readline()\n    N,M = map(int,s.split())\n    order = [i for i in range(N)]\n    s = sys.stdin.readline()\n    priority = list(map(int,s.split()))\n    pq = []\n    for i in range(N):\n        pq.append((order[i],priority[i]))\n\n    result = 1\n    while True:\n        flag = True\n        p = pq[0][1]\n        for i in range(1,len(pq)):\n            if pq[i][1] > p:\n                flag = False\n                break\n\n        if flag == True:\n            if pq[0][0] == M:\n                print(result)\n                break\n            else:\n                pq.pop(0)\n                result+=1\n        else:\n            pq.append(pq[0])\n            pq.pop(0)\n\n\n\n"}, {"id": 40052548, "name": "\ud669\ubbf8\ub098", "x": -19.80879020690918, "y": 3.2948267459869385, "label": 0, "group": 114, "code": "# \ud504\ub85c\uadf8\ub798\uba38\uc2a4 \ud504\ub9b0\ud130\nimport sys\ninput = sys.stdin.readline\n\n\ndef solution(priorities, location):\n    m = max(priorities)\n    leng = len(priorities)\n    answer = 0\n    while priorities:\n        val = priorities.pop(0)\n        if m > val:\n            priorities.append(val)\n            if location == 0:\n                location = (leng-1)\n            else:\n                location -= 1\n        else:\n            if location == 0:\n                answer += 1\n                break\n            else:\n                m = max(priorities)\n                leng -= 1\n                location -= 1\n                answer += 1\n    return answer\n\n\nfor _ in range(int(input())):\n    N, M = map(int, input().split())\n    arr = list(map(int, input().split()))\n    print(solution(arr, M))\n"}, {"id": 44479115, "name": "\uc815\uc758\ucca0", "x": 19.142553329467773, "y": 17.211538314819336, "label": 0, "group": 115, "code": "\nt = int(input())\n\n\ndef print_order():\n    i = 0\n    result = 0\n    for j in range(9, 0, -1):\n        for k in range(c[j]):\n            while priorities[i] != j:\n                i = (i + 1) % n\n\n            priorities[i] = 0\n            result += 1\n            if m == i:\n                return result\n            \nfor _ in range(t):\n    n, m = map(int, input().split())\n    priorities = list(map(int, input().split()))\n    \n    c = [0] * 10\n    for p in priorities:\n        c[p] += 1\n\n    print(print_order())\n"}, {"id": 46443986, "name": "\uc18c\uc9c0\uc12d", "x": 1.8258720636367798, "y": -11.899859428405762, "label": 0, "group": 115, "code": "import sys\ninput = sys.stdin.readline\nT=int(input())\nfor i in range(T):\n    count = 0\n    N,M= map(int,input().split())\n    lst=list(map(int,input().split()))\n    while(len(lst)):\n        if(lst[0]==max(lst)):\n            lst.pop(0)\n            count += 1\n            if(M==0):\n                print(count)\n                break\n            else:\n                M=M-1\n        else:\n            lst.append(lst.pop(0))\n            if (M == 0):\n                M = len(lst) - 1\n            else:\n                M = M - 1\n\n"}, {"id": 8628044, "name": "\uae40\ubbfc\ud76c", "x": 16.148101806640625, "y": -4.781526565551758, "label": 0, "group": 115, "code": "x = lambda:map(int,input().split())\nT = int(input())\nfor t in range(T):\n    N,M = x()\n    l = list(x())\n    loc = -1\n    cnt = 1\n    for a in sorted(l,reverse=True):\n        ls = l[loc+1:]+l[:loc+1]\n        loc =  (loc+ls.index(a)+1)%len(l)\n        if loc==M:\n            break\n        else:\n            cnt+=1\n    print(cnt)"}, {"id": 41582376, "name": "\ub0a8\uad81\ubbfc\uc6b0", "x": 25.33699607849121, "y": -6.61376953125, "label": 0, "group": 115, "code": "t = int(input())\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    v = list(map(int, input().split()))\n\n    s = sorted(v, reverse=True)\n    r = 0\n\n    while True:\n        k = v[0]\n        del v[0]\n        m -= 1\n\n        if k == s[0]:\n            r += 1\n            del s[0]\n            n -= 1\n\n            if m < 0: break\n        else:\n            v.append(k)\n            if m < 0: m = n - 1\n\n    print(r)"}, {"id": 31012511, "name": "\ud074\ub77c\ub77c", "x": 8.043045043945312, "y": -12.464877128601074, "label": 0, "group": 116, "code": "from sys import stdin\n\ntest_case = int(stdin.readline())\n\nfor _ in range(test_case):\n    m,n = map(int, stdin.readline().split(\" \"))\n    arr = list(map(int, stdin.readline().split(\" \")))\n    max_priority_arr = arr.copy()\n    max_priority_arr.sort()\n    result_check = 0\n    index = 0\n    while True:\n        if arr[index] < max_priority_arr[-1]:\n            arr.append(arr[index])\n            if index == n:\n                n = len(arr)-1\n        else:\n            max_priority_arr.pop()\n            result_check += 1\n            if index == n:\n                break\n        index += 1\n    print(result_check)"}, {"id": 46279307, "name": "\uc774\uaddc\ud55c", "x": 20.977466583251953, "y": 9.003633499145508, "label": 0, "group": 116, "code": "import sys\nT = int(input())\nfor _ in range(T):\n    M, N = map(int, sys.stdin.readline().split())\n    case = sys.stdin.readline().split()\n    idx = list(range(len(case)))\n    idx[N] = 'target'\n\n    order = 0\n\n    while True:\n        if case[0] == max(case):\n            order += 1\n\n            if idx[0] == 'target':\n                print(order)\n                break\n            else:\n                case.pop(0)\n                idx.pop(0)\n        else:\n            case.append(case.pop(0))\n            idx.append(idx.pop(0))\n    "}, {"id": 25258086, "name": "\ud558\uc138\ud638", "x": 16.714101791381836, "y": 8.399194717407227, "label": 0, "group": 116, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    idx = [j for j in range(n)]\n    count = 1\n    while(True) :\n        if q[0] != max(q) :\n            q.append(q[0])\n            del q[0]\n            idx.append(idx[0])\n            del idx[0]\n        else :\n            if(idx[0] == m) :\n                print(count)\n                break\n            else :\n                del q[0]\n                del idx[0]\n            count += 1"}, {"id": 22887814, "name": "\uc0ac\uacf5\ud615\ubbfc", "x": -18.677806854248047, "y": 15.599688529968262, "label": 0, "group": 116, "code": "T = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    imp = list(map(int, input().split()))\n    idx = list(range(len(imp)))\n    idx[M] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n\n    while True:\n        # \uccab\ubc88\uc9f8 if : imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12? \n        if imp[0] == max(imp):\n            order += 1\n    \n            # \ub450\ubc88\uc9f8 if : idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0] == 'target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 36668086, "name": "\uc190\ud0dc\uc601", "x": -18.134397506713867, "y": 15.083516120910645, "label": 0, "group": 117, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split( )))\n    imp = list(map(int, input().split( )))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n    \n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0)) "}, {"id": 31075769, "name": "\uc774\ucc9c\ud76c", "x": -14.947671890258789, "y": -14.708107948303223, "label": 0, "group": 117, "code": "import sys\n \nt = int(sys.stdin.readline())\nfor i in range(t):\n    q = []\n    N,M = map(int,input().split())\n    queue = list(map(int,input().split()))\n    for i in queue:\n        q.append(i)\n    p = M\n    cnt = 0\n    while(True):\n        if(max(q) == q[0]):\n            q.pop(0)\n            cnt += 1\n            if(p == 0):\n                print(cnt)\n                break\n            else:\n                p -= 1\n                if(p<0):\n                    p = len(q)-1\n        else:\n            p -= 1\n            if(p<0):\n                p = len(q)-1\n            q.append(q.pop(0))"}, {"id": 12017909, "name": "\ubd09\uacbd\ud61c", "x": -26.381576538085938, "y": -3.9952218532562256, "label": 0, "group": 117, "code": "###### ### input case \nC = int(input())\nNM = [[]] * C\nN = [0] * C\nM = [0] * C\nimp_s = [0] * C\nimp_i = [[]] * C\ncnt = [0] * C\njudge = [[]] * C\nfor i in range(C):\n    NM[i] = list(input().split(' '))\n    N[i] = int(NM[i][0]) ##  \ucd1d \ubb38\uc11c\uc758 \uac2f\uc218 \uac01 case \ub2f9 \n    M[i] = int(NM[i][-1]) ###  \uc54c\uace0\uc790 \ud558\ub294 \ubb38\uc11c\uc758 \uc704\uce58 \n    imp_s[i] = list(input().split(' '))\n    imp_i[i] = [0] * len(imp_s[i])\n    judge[i] = [0] * N[i]\n    judge[i][M[i]] = 'T'\n    for j in range(len(imp_s[i])):\n        imp_i[i][j] = int(imp_s[i][j]) ## \uc911\uc694\ub3c4\ub97c \ub9ac\uc2a4\ud2b8\ub85c \n\n    ##f len(imp_i[i]) == N[i]:\n    while True:\n        if imp_i[i][0] == max(imp_i[i]):\n            cnt[i] += 1\n            if judge[i][0] == 'T':\n                print(cnt[i])\n                break\n            else:\n                imp_i[i].pop(0)\n                judge[i].pop(0)\n        else:\n            imp_i[i].append(imp_i[i].pop(0))\n            judge[i].append(judge[i].pop(0))\n"}, {"id": 29031663, "name": "\uc608\uc601\uc900", "x": 23.64068031311035, "y": 2.606788158416748, "label": 0, "group": 117, "code": "from sys import stdin\n\nresult = []\nT = int(stdin.readline())\nfor i in range(T):\n    N, Prior = map(int, stdin.readline().split())\n    K = list(map(int, stdin.readline().split()))\n\n    cnt = 0\n    while True:\n        while K[0] < max(K):\n            K.append(K.pop(0))\n            Prior = (N + Prior - 1) % N\n        \n        K.pop(0)\n        cnt += 1\n        N -= 1\n\n        if Prior == 0:\n            break\n\n        Prior -= 1\n    result.append(cnt)\n\nfor i in result:\n    print(i)"}, {"id": 15191043, "name": "\uc774\uc720\ube44", "x": -0.29534322023391724, "y": -28.58146095275879, "label": 0, "group": 118, "code": "n = int(input())\n\nfor _ in range(n):\n    target = list(map(int, input().split()))[1]\n    queue = list(map(int, input().split()))\n    order = list(range(len(queue)))\n    out_count = 0\n    while queue:\n        max_val = max(queue)\n        if queue[0] < max_val:\n            max_index = queue.index(max_val)\n            for _ in range(max_index):\n                queue.append(queue.pop(0))\n                order.append(order.pop(0))\n            value, idx = queue.pop(0), order.pop(0)\n            out_count += 1\n            if idx == target:\n                print(out_count)\n        else:\n            value, idx = queue.pop(0), order.pop(0)\n            out_count += 1\n            if idx == target:\n                print(out_count)"}, {"id": 12894208, "name": "\uc548\uc131\uae30", "x": -14.157867431640625, "y": -4.334815979003906, "label": 0, "group": 118, "code": "def printQueue(baseList, checkList):\n    cnt = 0\n\n    while True:\n        if baseList[0] == max(baseList):\n            if checkList[0] == 'T':\n                cnt += 1\n                print(cnt)\n                break\n            else:\n                cnt += 1\n                del baseList[0]\n                del checkList[0]\n\n        else:\n            baseList.append(baseList[0])\n            checkList.append(checkList[0])\n            del baseList[0]\n            del checkList[0]\n\n\na = int(input())\n\nfor _ in range(a):\n    n, m = map(int, input().split(\" \"))\n    baseList = list(map(int, input().split(\" \")))\n    checkList = [0 for _ in range(n)]\n    checkList[m] = 'T'\n    printQueue(baseList, checkList)\n"}, {"id": 34088755, "name": "\uc720\uc601\uc11d", "x": 24.53985023498535, "y": 40.93248748779297, "label": 0, "group": 118, "code": "import sys\n\ninput = sys.stdin.readline\n\ndef inputData():\n\tT = int(input())\n\tfor _ in range(T):\n\t\tn,m = [int(i) for i in input().split(\" \")]\n\t\tdocs = [int(i) for i in input().split(\" \")]\n\t\tmaxValue = max(docs)\n\t\tprinter(docs,m,maxValue)\n\ndef printer(docs,m,maxValue):\n\tarr = makeOrderQueue(docs,maxValue)\n\tcnt = 1\n\tfor i in arr:\n\t\tif i[1] == m:\n\t\t\tbreak\n\t\tcnt += 1\n\tprint(cnt)\n\t\ndef makeOrderQueue(docs,maxValue):\n\tprinterOrder = []\n\tqueue = []\n\tfor i in range(len(docs)):\n\t\tqueue.append((docs[i],i))\n\tcount = 0\n\twhile queue:\n\t\ta = queue[0]\n\t\tif maxValue > a[0]:\n\t\t\ttmp = queue.pop(0)\n\t\t\tqueue.append(tmp)\n\t\telif maxValue == a[0]:\n\t\t\tprinterOrder.append(queue[0])\n\t\t\tqueue.pop(0)\n\t\t\tif queue:\n\t\t\t\tmaxValue = max(queue)[0]\n\treturn printerOrder\ninputData()"}, {"id": 33888907, "name": "\uc774\ub098\uc601", "x": 18.632816314697266, "y": 13.386837005615234, "label": 0, "group": 118, "code": "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    arr = list(map(int, input().split()))\n    target, arr[M] = arr[M], 0\n    cnt = 1\n    for x in range(9, target, -1):\n        idx = -1\n        for i, v in enumerate(arr):\n            if v == x:\n                idx = i\n                cnt += 1\n        if idx != -1 : arr = arr[idx+1:] + arr[:idx+1]\n    for c in arr:\n        if c == target: cnt += 1\n        elif c == 0:\n            print(cnt)\n            break"}, {"id": 24504021, "name": "\ud669\ubcf4\uc7ac\uc6b1", "x": -3.1491832733154297, "y": -24.097349166870117, "label": 0, "group": 119, "code": "n=int(input())\nfor _ in range(n):\n    N,location=map(int,input().split())\n    arr=list(map(int,input().split()))\n    m=max(arr)\n    count=0\n    while 1:\n        p=arr.pop(0)\n        if p==m:\n            if location==0:\n                count+=1\n                break\n            else:\n                location-=1\n                count+=1\n                m=max(arr)\n        else:\n            arr.append(p)\n            if location==0:\n                location=len(arr)-1\n            else:\n                location-=1\n    print(count)"}, {"id": 14446134, "name": "\ucd5c\uc2dc\uc6b1", "x": -6.616931438446045, "y": -24.619731903076172, "label": 0, "group": 119, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    docs = list(map(int, input().split()))\n    target = []\n    for i in range(n):\n        if i == m:\n            target.append(True)\n        else:\n            target.append(False)\n    cnt = 0\n    while True:\n        tmp = docs[0]\n        tmp_t = target[0]\n        if docs[0] == max(docs):\n            docs.remove(tmp)\n            target.remove(tmp_t)\n            cnt += 1\n            if tmp_t:\n                break\n        else:\n            tmp = docs[0]\n            tmp_t = target[0]\n            docs.remove(tmp)\n            docs.append(tmp)\n            target.remove(tmp_t)\n            target.append(tmp_t)\n    print(cnt)"}, {"id": 12357954, "name": "\ub958\ub3c4\uc900", "x": 1.108491063117981, "y": -19.054563522338867, "label": 0, "group": 119, "code": "import sys\nfor _ in range(int(input())):\n    N,M=map(int,input().split())\n    a=list(map(int,input().split()))\n    chul=1\n    while True :\n        #print(a, M)\n        if a[0] == max(a):\n            if M==0:\n                print(chul)\n                break\n            else:\n                a.pop(0)\n                chul+=1\n                M-=1\n        else :\n            a.append(a.pop(0))\n            if M==0:\n                M=len(a)-1\n            else :\n                M-=1"}, {"id": 12238168, "name": "\uc1a1\uc724\uc544", "x": -8.691761016845703, "y": -21.983156204223633, "label": 0, "group": 119, "code": "TT = int(input())\n\nfor _ in range(TT):\n    N, M = map(int, input().split())\n    if N == 1:\n        importance = [int(input())]\n    else :\n        importance = list(map(int, input().split()))\n    documents = [i for i in range(N)]\n    importance_dict = {}\n    for key, value in enumerate(importance):\n        importance_dict[key] = value\n\n    print_list = []\n    max_importance = max(importance)\n    front = documents[0]\n\n    while documents:\n        front = documents[0]\n        if max_importance == importance_dict[front]:\n            documents.remove(front)\n            print_list.append(front)\n            importance.remove(max_importance)\n            if len(importance):\n                max_importance = max(importance)\n            else:\n                break\n        else:\n            documents.remove(front)\n            documents.append(front)\n\n    for idx, i in enumerate(print_list):\n        if i == M:\n            print(idx + 1)\n"}, {"id": 18835936, "name": "\uc124\uacbd\uad6c", "x": 21.674421310424805, "y": 41.989601135253906, "label": 0, "group": 120, "code": "from operator import itemgetter\n\n\ndef q_finder(numbers, target_position, order):\n\tfirst = numbers[0]\n\n\n\tfor i in range(1, len(numbers)):\n\t\tif(numbers[i][0] > first[0]):\n\t\t\tnumbers.append(first)\n\t\t\tnumbers.pop(0)\n\n\t\t\treturn q_finder(numbers, target_position, order)\n\n\tif(first[1]== target_position):\n\t\treturn order\n\n\treturn q_finder(numbers[1:], target_position, order+1)\n\n\nn = int(input())\nfor i in range(n):\n\tnumber, m= [int(x) for x in input().split()]\n\tnumbers = []\n\ttarget_position = m\n\n\tnumbers = [int(x) for x in input().split()]\n\tnumber_pair = [(numbers[y],y) for y in range(len(numbers)) ]\n\t\n\tprint(q_finder(number_pair, target_position, 1))"}, {"id": 26254943, "name": "\uc2e0\uae30\uc6b0", "x": 21.26337432861328, "y": 9.328150749206543, "label": 0, "group": 120, "code": "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n    N, M = map(int, stdin.readline().split())\n    argent = list(map(int, stdin.readline().split()))\n\n    check = list(range(len(argent)))\n    check[M] = -1\n\n    order = 0\n    while True:\n        if argent[0] == max(argent):\n            order += 1\n            if check[0] == -1:\n                print(order)\n                break\n            else:\n                argent.pop(0)\n                check.pop(0)\n        else:\n            argent.append(argent.pop(0))\n            check.append(check.pop(0))\n"}, {"id": 37879552, "name": "\uc774\uc19c", "x": 1.9147051572799683, "y": 2.735755443572998, "label": 0, "group": 120, "code": "import sys\ninput = sys.stdin.readline\na = int(input())\n\nfor i in range(a):\n    n, idx = map(int, input().split())\n    priority = list(map(int,input().split()))\n\n    checkList = [0 for _ in range(n)]\n    checkList[idx] = \"target\"\n\n    count = 0\n\n    while True:\n        if priority[0] == max(priority):\n            count += 1\n\n            if checkList[0] == 'target':\n                print(count)\n                break\n        \n            priority.pop(0)\n            checkList.pop(0)\n        else:\n            priority.append(priority.pop(0))\n            checkList.append(checkList.pop(0))\n"}, {"id": 30257218, "name": "\ud669\ubcf4\uc18c\ubbf8", "x": -16.235462188720703, "y": -4.0538153648376465, "label": 0, "group": 120, "code": "def makeArr(N):\n\n    arr = list(map(int, input().split()))\n    return arr\n\ndef check(arr):\n    cur = arr[0]\n\n    for idx in range(1, len(arr)):\n        if arr[idx] > cur:\n            return False\n    return True\n\nT = int(input())\n\nfor _ in range(T):\n    N, idx = map(int, input().split())\n    arr = makeArr(N)\n    cnt = 0\n\n    while arr:\n        if check(arr):\n            arr.pop(0)\n            cnt += 1\n            idx -= 1\n\n            if idx == -1:\n                print(cnt)\n                break\n        else:\n            arr.append(arr.pop(0))\n            idx -= 1\n            if idx == -1:\n                idx = len(arr) - 1"}, {"id": 25907703, "name": "\ud5c8\ud638\uc815", "x": 8.151594161987305, "y": -20.983871459960938, "label": 0, "group": 121, "code": "from sys import stdin\n\ncase = int(stdin.readline())\nfor i in range(case):\n    n, target = map(int, stdin.readline().split())\n    importances = list(map(int, stdin.readline().split()))\n\n    count = 1\n    while True:\n        if len(importances) == 1:\n            print(count)\n            break\n        current = importances[0]\n        importances = importances[1:]\n        if current >= max(importances):\n            if target == 0:\n                print(count)\n                break\n            count += 1\n        else:\n            importances += [current]\n        target = len(importances) - 1 if target == 0 else target - 1\n"}, {"id": 40026283, "name": "\ud669\ubcf4\ud604\uc900", "x": -14.952574729919434, "y": -9.514524459838867, "label": 0, "group": 121, "code": "n = int(input())\n\nresult = []\n\nfor i in range(1, n + 1):\n    cnt = 0\n    priortyIdx = 0\n    docs = []\n\n    doc_cnt, target_pos = list(map(int, input().split()))\n    priorties = list(map(int, input().split()))\n    for doc_idx in range(0, doc_cnt):\n        doc = {'is_target': False, 'priorty': 0}\n        if doc_idx == target_pos:\n            doc['is_target'] = True\n        doc['priorty'] = priorties[doc_idx]\n        docs.append(doc)\n\n    priorties.sort(reverse=True)\n\n    while len(docs) > 0:\n        pop_target = docs.pop(0)\n        if pop_target['priorty'] != priorties[0]:\n            docs.append(pop_target)\n            continue\n        else:\n            if pop_target['priorty'] == priorties[0]:\n                priorties.pop(0)\n                cnt += 1\n\n            if pop_target['is_target'] == True:\n                result.append(str(cnt))\n                break\n\nprint('\\n'.join(result))"}, {"id": 16704695, "name": "\ud669\ubbf8\uc9c4", "x": 4.5477142333984375, "y": -22.568782806396484, "label": 0, "group": 121, "code": "import sys\n\nn = int(sys.stdin.readline().strip())\n\n\nfor i in range(n):\n    count = 0\n\n    a, b = map(int, sys.stdin.readline().strip().split())\n    queue = list(map(int, sys.stdin.readline().strip().split()))\n\n    while bool(queue):\n        if b == 0:\n            if queue[0] >= max(queue):\n                del queue[0]\n                count += 1\n                break\n            else:\n                queue.append(queue.pop(0))\n                b = len(queue) - 1\n        else:\n            if queue[0] >= max(queue):\n                del queue[0]\n                count += 1\n                b -= 1\n            else:\n                queue.append(queue.pop(0))\n                b -= 1\n\n    print(count)\n"}, {"id": 21640105, "name": "\uc720\uc6d0\ube48", "x": 8.53037166595459, "y": -19.07455825805664, "label": 0, "group": 121, "code": "import sys\n\ntest_case = int(input())\nfor _ in range(test_case):\n    N, target = map(int,sys.stdin.readline().split())\n    queue = []\n    temp = map(int,sys.stdin.readline().split())\n    for i , ele in enumerate(temp):\n        queue.append((ele,i))\n    count = 0\n    while queue :\n        front , number = queue.pop(0)            \n        for ele,i in queue:\n            if ele > front :\n                queue.append((front,number))\n                break\n        else:\n            count +=1\n            if number == target:\n                break\n    print(count)"}, {"id": 12242321, "name": "\uc870\uc815\ud604", "x": -13.558576583862305, "y": 4.693939208984375, "label": 0, "group": 122, "code": "tase_case = int(input())\norder = []\ninput_data = []\npriority_queue = []\n\nfor _ in range(tase_case):\n    input_data.append([input() for x in range(2)])\n\nfor i in input_data:\n    N, M = i[0].split()\n    priority = i[1].split()\n    priority = [int(x) for x in priority]\n    priority_queue = [[n, x] for n, x in enumerate(priority)]\n\n    while 1:\n        if priority_queue[0][1] < max(priority):\n            priority_queue = priority_queue[1:] + priority_queue[0:1]\n        else:\n            order.append(priority_queue[0])\n            priority.remove(priority_queue[0][1])\n            priority_queue.remove(priority_queue[0])\n        if len(priority_queue) == 0:\n            break\n        \n    for i in order:\n        if i[0] == int(M):\n            print(order.index(i) + 1)\n\n    order = []\n"}, {"id": 19899999, "name": "\ucd94\uacbd\uc7ac", "x": -20.81850814819336, "y": -6.3403425216674805, "label": 0, "group": 122, "code": "import sys\n\ndef solve(n : int,m : int, arr : list):\n    if n == 1:\n        return 1\n    mn = max(arr, key= lambda x :x[1])[1]\n    cnt = 0\n    m = arr[m]\n    while m in arr:\n\n        if arr[0][1] != mn:\n            arr.append(arr[0])\n            del arr[0]\n            \n        else :\n            del arr[0]\n            cnt +=1\n\n            if len(arr)==1 and arr[0] == m:\n                return cnt+1\n            if len(arr)==1 and arr[0] != m:\n                return cnt\n            mn = max(arr, key= lambda x :x[1])[1]\n\n    return cnt\n            \n\na = int(sys.stdin.readline())\nfor i in range(0,a,1):\n    n,m = map(int,sys.stdin.readline().split())\n    arr = [0]*n\n    arr = list(map(int,sys.stdin.readline().split()))\n    for j in range(0,len(arr),1):\n        arr[j] = [j,arr[j]]\n    print(solve(n,m,arr))\n\n"}, {"id": 9804232, "name": "\uc870\ud615\uc6b0", "x": -15.597278594970703, "y": -14.136157035827637, "label": 0, "group": 122, "code": "n = int(input())\nwhile n > 0:\n    casenum, documentnum  = map(int, input().split())\n    queue = [int(x) for x in input().split()]\n    sortedqueue = queue[:]\n    sortedqueue.sort()\n    sortedqueue.reverse()\n    while queue != []:\n        if(queue[0] == sortedqueue[0]):\n            if(documentnum == 0) :\n                print(casenum-len(queue)+1)\n                break\n            queue.pop(0)\n            sortedqueue.pop(0)\n            documentnum = documentnum - 1\n        else :\n            goback = queue[0]\n            queue.pop(0)\n            queue.append(goback)\n\n            if(documentnum == 0):\n                documentnum = len(queue)-1\n            else:\n                documentnum = documentnum - 1\n    n = n - 1\n        \n"}, {"id": 9094682, "name": "\uc190\uc2dc\ud558", "x": -8.02898120880127, "y": 4.533987045288086, "label": 0, "group": 122, "code": "import sys\n\ndef impl(ln,b,want):\n    count = 0\n    while b:\n        if want == ln - len(b) and max(b) ==b[0]:\n            count+=1\n            break\n        elif b[0] == max(b):\n            b.pop(0)\n            count+=1\n        else:\n            if want == ln - len(b):\n                want = ln -1\n            else:\n                want-=1\n            b.append(b.pop(0))\n    \n    return count\n\nc = int(sys.stdin.readline().strip())\n\nre =[]\nfor x in range(c):\n    i = sys.stdin.readline().strip()\n\n    ii = i.split()\n\n    ln =int(ii[0])\n    want = int(ii[1])\n\n    i2 = sys.stdin.readline().strip()\n\n    imp =i2.split()\n\n    b = [int(imp[x]) for x in range(ln)]\n\n    \n    re.append(impl(ln,b,want))\n\nfor x in re:\n    print(x)\n    \n\n\n\n\n\n\n\n    \n"}, {"id": 27479339, "name": "\ubc30\ub204\ub9ac", "x": -21.244861602783203, "y": -9.105701446533203, "label": 0, "group": 123, "code": "\n\nN=int(input())\n\ndef get_topp(li):\n    ret=1\n    for a in range(1,10):\n        if(li[a]>0):\n            ret=a\n    return ret\n\nfor _ in range(N):\n    a=[int(i) for i in input().split(\" \")]\n    n, t=a[0], a[1]\n    li=[int(i) for i in input().split(\" \")]\n\n    pri=[0]*10\n    target_pri=li[t]\n\n    for e in li:\n        pri[e]+=1\n\n    ans=1\n\n    while(True):\n        cur_pri=get_topp(pri)\n        if(t==0):\n            if(cur_pri==target_pri):\n                print(ans)\n                break\n            else:\n                a=li.pop(0)\n                li.append(a)\n                t=n-1\n        else:\n            a=li.pop(0)\n            if(cur_pri==a):\n                n-=1\n                ans+=1\n                pri[a]-=1\n            else:\n                li.append(a)\n            t-=1\n                \n            \n\n\n        \n"}, {"id": 49104286, "name": "\ub958\ud0dc\uc6b1", "x": 11.317005157470703, "y": 22.906841278076172, "label": 0, "group": 123, "code": "from sys import stdin\nT =int(stdin.readline())\nfor _ in range(T):\n  N, M = map(int, stdin.readline().split())\n  s = list(map(int, stdin.readline().split()))\n  s_ = [0 for i in range(N)]\n  s_[M] = 1\n  cnt = 0\n  while True:\n    if s[0] == max(s):\n      cnt += 1\n      if s_[0] == 1:\n        print(cnt)\n        break\n      else:\n        del s[0]\n        del s_[0]\n    else:\n      s.append(s[0])\n      del s[0]\n      s_.append(s_[0])\n      del s_[0]"}, {"id": 37440815, "name": "\uc548\uc601\uc6b1", "x": 8.081899642944336, "y": -9.6161527633667, "label": 0, "group": 123, "code": "import sys\ntestcase = int(sys.stdin.readline())\nfor tc in range(testcase):\n    n, index = map(int,sys.stdin.readline().split())\n    values = list(map(int,sys.stdin.readline().split()))\n    queue = [i for i in range(n)]\n    turn = 0\n    while True:\n        tempMax = max(values)\n        while values[0] != tempMax:\n            values.append(values.pop(0))\n            queue.append(queue.pop(0))\n        turn += 1\n        if queue[0] == index:\n            break\n        else:\n            values.pop(0)\n            queue.pop(0)\n    print(turn)"}, {"id": 17893283, "name": "\ucc28\uc608\ub828", "x": -4.403600692749023, "y": 12.249366760253906, "label": 0, "group": 123, "code": "t=int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    plist=list(map(int,input().split()))\n    queue=[i for i in range(n)]\n    \n    prinum=[]\n    for doc in plist:\n        prinum.append(doc)\n    \n    result=[0 for x in range(n)]\n    \n    seq=1\n    while queue:\n        if plist[queue[0]]==max(prinum):\n            prinum.remove(max(prinum))\n            result[queue.pop(0)]=seq\n            seq+=1\n        else:\n            queue.append(queue.pop(0))\n    print(result[m])\n    "}, {"id": 18462850, "name": "\ubd09\ud6a8\ube48", "x": 27.33136749267578, "y": -0.5835790634155273, "label": 0, "group": 124, "code": "T = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    docs = list(map(int, input().split()))\n    cnt = 0\n\n    while docs:\n        if docs[0] == max(docs):\n            docs.pop(0)\n            cnt += 1\n            if M == 0:\n                break\n            M -= 1\n            continue\n        docs.append(docs.pop(0))\n        M -= 1\n        if M < 0:\n            M = len(docs)-1\n    print(cnt)\n"}, {"id": 24349848, "name": "\ub0a8\ud574\uc131", "x": -2.6028823852539062, "y": -19.261823654174805, "label": 0, "group": 124, "code": "# 1966 \ud504\ub9b0\ud130 \ud050\n\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    N, M = map(int, input().strip().split())\n    N_list = list(map(int, input().strip().split()))\n    count = 0\n    target = M\n    while True:\n        check = N_list.pop(0)\n        target -= 1\n        if not N_list:\n            count += 1\n            print(count)\n            break\n        elif check >= max(N_list):\n            count += 1\n            if target == -1:\n                print(count)\n                break\n        else:\n            N_list.append(check)\n            if target == -1:\n                target += len(N_list)\n"}, {"id": 17656763, "name": "\uad6c\ud61c\uc120", "x": -5.247614860534668, "y": -15.925497055053711, "label": 0, "group": 124, "code": "t=int(input())\nwhile t>0:\n    n,m=map(int,input().split())\n    que=list(map(int,input().split()))\n    com=list(set(que))\n    com.sort(reverse=True)\n    cnt=0\n    while m>=0:\n        if que[0]==com[0]:\n            del que[0]\n            if que.count(com[0])==0:\n                del com[0]\n            cnt+=1\n            m-=1\n        elif m==0:\n            que.append(que[0])\n            del que[0]\n            m=len(que)-1\n        else:\n            que.append(que[0])\n            del que[0]\n            m-=1\n    print(cnt)\n    t=t-1\n"}, {"id": 36815860, "name": "\ud669\ucd98\uc218", "x": -7.691512107849121, "y": -5.600581169128418, "label": 0, "group": 124, "code": "from sys import stdin\n\nt = int(stdin.readline())\nfor i in range(t):\n    n, m = map(int, stdin.readline().split())\n    arr = list(map(int, stdin.readline().split()))\n    arr2 = [0 for i in range(n)]\n    arr2[m] = 1\n    cnt = 0\n    while True:\n        if arr[0] == max(arr):\n            cnt += 1\n            if arr2[0] == 1:\n                print(cnt)\n                break\n            else:\n                del arr[0]\n                del arr2[0]\n        else:\n            arr.append(arr[0])\n            del arr[0]\n            arr2.append(arr2[0])\n            del arr2[0]"}, {"id": 29098077, "name": "\uac15\ud55c\ub098", "x": -7.730923175811768, "y": 9.975286483764648, "label": 0, "group": 125, "code": "TestCase=int(input())\n\nfor t in range(TestCase):\n    N,M=list(map(int,input().split()))\n    importance=list()\n    queue=[]\n    for i in range(9):\n        importance.append([])\n\n    string=input()\n    for i in range(N):\n        importance[int(string[i*2])-1].append(i+1)\n\n    last=0\n    ll=int()\n    for i in range(8,-1,-1):\n        for j in range(len(importance[i])):\n            if last<importance[i][j]:\n                queue.append(importance[i][j])\n                ll=importance[i][j]\n        for j in range(len(importance[i])):\n            if last>importance[i][j]:\n                queue.append(importance[i][j])\n                ll=importance[i][j]\n        last=ll\n\n    for i in range(len(queue)):\n        if queue[i]==M+1:\n            print(i+1)\n            break"}, {"id": 17078000, "name": "\uae40\uc218\ubbf8", "x": -5.240362167358398, "y": 12.33572769165039, "label": 0, "group": 125, "code": "import sys\n\nT = int(sys.stdin.readline().rstrip())\n\nfor i in range(0,T):\n    N, M = map(int,sys.stdin.readline().rstrip().split())\n    arr = list(map(int,sys.stdin.readline().rstrip().split()))\n    prior_number = []\n    \n    for j in arr:\n        prior_number.append(j) \n    \n    result = [0 for _ in range(N)]\n    queue = [k for k in range(N)]\n    sequence = 1\n    while queue:\n        if arr[queue[0]] == max(prior_number):\n            prior_number.remove(max(prior_number))\n            result[queue.pop(0)] = sequence\n            sequence += 1\n        else:\n            queue.append(queue.pop(0))\n    print(result[M])"}, {"id": 30155327, "name": "\ucd94\uc601\uc724", "x": -1.0740883350372314, "y": -20.50516128540039, "label": 0, "group": 125, "code": "a = int(input())\nfor i in range(a):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    count = 0\n    flag = True\n    while flag:\n        f = s[0]\n        if f == max(s):\n            count+=1\n            if m == 0:\n                print(count)\n                flag = False\n            else:\n                m-=1\n            s.pop(0)\n        else:\n            s.append(s.pop(0))\n            if m==0:\n                m = len(s)-1\n            else:\n                m-=1"}, {"id": 13007947, "name": "\uace0\ud604\uc815", "x": 9.875519752502441, "y": -3.9633662700653076, "label": 0, "group": 125, "code": "tc = int(input())\nfor i in range(tc):\n    a, b = map(int, input().split())\n    c = list(map(int, input().split()))\n    count=0\n    d = b\n    while 1:\n        while c[0] != max(c):\n            c.append(c[0])\n            del c[0]\n            d = d-1\n\n        count = count+1\n        if d == 0:\n            print(count)\n            break\n        else:\n            d = d%len(c)\n            del c[0]\n            d = d-1"}, {"id": 42733255, "name": "\uc7a5\uc2e0\uc601", "x": 12.531450271606445, "y": -18.181804656982422, "label": 0, "group": 126, "code": "from sys import stdin\ninput = stdin.readline\n\nfor line in range(int(input())):\n    N,M = map(int,input().rstrip().split())\n    Queue = input().rstrip().split()\n    cnt = 0\n\n    while 1:\n        \n        if max(Queue)!= Queue[0]:\n            Queue.append(Queue.pop(0))\n            if M==0:\n                M=len(Queue)\n        else:\n            del Queue[0]\n            cnt += 1\n            if M==0:\n                break\n        M -= 1\n    print(cnt)"}, {"id": 36823958, "name": "\ud558\uc740\uc218", "x": 3.375978469848633, "y": 0.44716572761535645, "label": 0, "group": 126, "code": "num = int(input())\n\nfor _ in range(num):\n    n,m = list(map(int, input().split()))\n    n_li = list(map(int, input().split()))\n    find = list(range(len(n_li)))\n    find[m] = 'target'\n    \n    count = 0\n    \n    while True:\n        if n_li[0] == max(n_li):\n            count += 1\n            \n            if find[0] == 'target':\n                print(count)\n                break\n            else:\n                n_li.pop(0)\n                find.pop(0)\n        else:\n            n_li.append(n_li.pop(0))\n            find.append(find.pop(0))"}, {"id": 26058100, "name": "\uc870\uc9c4\uc544", "x": 17.95988655090332, "y": 11.193634986877441, "label": 0, "group": 126, "code": "import sys\ninput=sys.stdin.readline\n\nT=int(input())\nfor i in range(T) :\n    N, M=map(int, input().split())\n    Q=list(map(int, input().split()))\n    idx=[0]*N\n    idx[M]=1\n    count=0\n    while True :\n        if Q[0]==max(Q) :\n            count+=1\n            if idx[0]==1 :\n                print(count)\n                break\n            else :\n                Q.pop(0)\n                idx.pop(0)\n        else :\n            Q.append(Q.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 28421974, "name": "\ud5c8\ubbfc\ud6c8", "x": -10.34195613861084, "y": 20.51163101196289, "label": 0, "group": 126, "code": "# \ubc31\uc900 1966 \ud504\ub9b0\ud130 \ud050\n# \uad6c\ud604, \uc790\ub8cc\uad6c\uc870, \uc2dc\ubbac\ub808\uc774\uc158, \ud050\n# \uc2e4\ubc84 3\n\nimport sys\n\nN = int(sys.stdin.readline())\n\nfor _ in range(N):\n\n    M, num = list(map(int, sys.stdin.readline().split()))\n    data = list(map(int, sys.stdin.readline().split()))\n    data_index = sorted(data)\n    result = [0] * M\n    idx = 0\n    count = 1\n\n    while data_index:\n\n        if data_index[-1] == data[idx]:\n            result[idx] = count\n            count += 1\n            data_index.pop()\n\n        idx = (idx + 1) % M\n\n    print(result[num])\n"}, {"id": 20423926, "name": "\uc11c\ud558\uc900", "x": 16.72586441040039, "y": 20.88003921508789, "label": 0, "group": 127, "code": "import sys\nT = int(input())\n\nfor _ in range(T):\n  N, M = map(int, input().split())\n  arr = list(map(int, input().split()))\n  pr_count = 0\n  pos = [0] * N\n  pos[M] = 1\n\n  while True:\n    if max(arr) == arr[0]:\n      pr_count += 1\n      if pos[0] == 1:\n        print(pr_count)\n        break\n      else:\n        del arr[0]\n        del pos[0]\n    else:\n      arr.append(arr[0])\n      del arr[0]\n      pos.append(pos[0])\n      del pos[0]  "}, {"id": 19750633, "name": "\uc774\uc740\uc131", "x": -3.9468653202056885, "y": -10.369682312011719, "label": 0, "group": 127, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 26328906, "name": "\ub958\ub2e4\uc5f0", "x": -20.0686092376709, "y": 1.302620530128479, "label": 0, "group": 127, "code": "def find_sequence(order, seq):\n    max_index = seq.index(max(seq))\n    result = 1\n    while True:\n        max_value = max(seq)\n        max_index = seq.index(max_value)\n        seq = seq[max_index:] + seq[:max_index]\n        if order < max_index:\n            order += len(seq) - max_index - 1\n        elif order > max_index:\n            order -= max_index + 1\n        else:\n            break\n        seq.pop(0)\n        result += 1\n        if order > len(seq):\n            order -= len(seq)\n    return result\n\n\nnum = int(input())\ndata = []\nfor i in range(num*2):\n    data.append(input().split())\n\nfor i in range(len(data)):\n    for j in range(len(data[i])):\n        data[i][j] = int(data[i][j])\n\ntarget = [x[1] for x in data[0::2]]\nsequence = data[1::2]\n\n# print(target)\n# print(sequence)\n\nreal_result = []\nfor i in range(num):\n    real_result.append(find_sequence(target[i], sequence[i]))\n\nfor i in real_result:\n    print(i)"}, {"id": 20967333, "name": "\uace0\uc740\uc544", "x": -5.050121307373047, "y": 8.232863426208496, "label": 0, "group": 127, "code": "k = int(input())\nn = []\narr = []\nfor _ in range(k):\n    n.append(list(map(int, input().split())))\n    arr.append(list(map(int, input().split())))\nfor i in range(k):\n    q = arr[i]\n    index = list(range(len(q)))\n    count = 0\n    while q:\n        if q[0] != max(q):\n            q.append(q.pop(0))\n            index.append(index.pop(0))\n        else:\n            b = q.pop(0)\n            count += 1\n            if index[0] == n[i][1]:\n                break\n            else:\n                index.pop(0)\n    print(count)\n"}, {"id": 26841194, "name": "\ubb38 \uba54\uc774\uc2a8", "x": -9.009910583496094, "y": -19.911142349243164, "label": 0, "group": 128, "code": "\n\ndef solution(n, m, data):\n    cnt = 0\n    mx = max(data)\n    data_list = list()\n    for i in range(0, len(data)):\n        data_list.append((i, data[i]))\n    isFind = True\n    while isFind:\n        mx = max(data)\n        for tu in data_list:\n            if tu[1] == mx:\n                cnt += 1\n                if m == tu[0]:\n                    isFind = False\n                    break\n                else:\n                    data.remove(tu[1])\n                    data_list.remove(tu)\n                    break\n            else:\n                tmp = tu;\n                data_list.remove(tu)\n                data_list.append(tmp)\n                break\n    print(cnt)\n\ndef main():\n    case = int(input())\n    for i in range(0, case):\n        n, m = list(map(int, input().split(' ')))\n        data = list(map(int, input().split(' ')))\n        solution(n, m, data)\n\n\nif __name__ == \"__main__\":\n    main()"}, {"id": 38554733, "name": "\uc724\ub3d9\uc218", "x": 21.431379318237305, "y": 10.306207656860352, "label": 0, "group": 128, "code": "import sys\nt=int(sys.stdin.readline().rstrip())\nfor i in range(t):\n    n,m=list(map(int,sys.stdin.readline().split(\" \")))\n    a=list(map(int,sys.stdin.readline().split(\" \")))\n    b=list(range(len(a)))\n    target=b[m]\n\n    cnt=0\n\n    while True:\n        if a[0]==max(a):\n            cnt=cnt+1\n            if b[0]==target:\n                print(cnt)\n                break\n            else:\n                a.pop(0)\n                b.pop(0)\n        else:\n            a.append(a.pop(0))\n            b.append(b.pop(0))"}, {"id": 26744184, "name": "\uc774\uc5f0\ud76c", "x": 8.521778106689453, "y": -5.673219203948975, "label": 0, "group": 128, "code": "T =int(input()) \n\nfor i in range(T):\n    a, b = map(int, input().split())\n    lst1 = list(map(int, input().split()))\n    lst2 = [0]*a\n    lst2[b] = 1\n    \n    cnt = 1\n    \n    while True:\n        m = max(lst1)\n\n        if lst1[0] == m and lst2[0] == 1:\n            break\n        elif lst1[0] == m and lst2[0] != 1:\n            lst1.pop(0)\n            lst2.pop(0)\n            cnt += 1\n        else:\n            lst1.append(lst1.pop(0))\n            lst2.append(lst2.pop(0))  \n\n    print(cnt)"}, {"id": 12879430, "name": "\uae40\uc9c4\uacbd", "x": -27.56227684020996, "y": 25.981666564941406, "label": 0, "group": 128, "code": "'''\n\ubb38\uc81c\n\n\uc5ec\ub7ec\ubd84\ub3c4 \uc54c\ub2e4\uc2dc\ud53c \uc5ec\ub7ec\ubd84\uc758 \ud504\ub9b0\ud130 \uae30\uae30\ub294 \uc5ec\ub7ec\ubd84\uc774 \uc778\uc1c4\ud558\uace0\uc790 \ud558\ub294 \ubb38\uc11c\ub97c \uc778\uc1c4 \uba85\ub839\uc744 \ubc1b\uc740 \u2018\uc21c\uc11c\ub300\ub85c\u2019, \uc989 \uba3c\uc800 \uc694\uccad\ub41c \uac83\uc744 \uba3c\uc800 \uc778\uc1c4\ud55c\ub2e4. \uc5ec\ub7ec \uac1c\uc758 \ubb38\uc11c\uac00 \uc313\uc778\ub2e4\uba74 Queue \uc790\ub8cc\uad6c\uc870\uc5d0 \uc313\uc5ec\uc11c FIFO - First In First Out - \uc5d0 \ub530\ub77c \uc778\uc1c4\uac00 \ub418\uac8c \ub41c\ub2e4. \ud558\uc9c0\ub9cc \uc0c1\uadfc\uc774\ub294 \uc0c8\ub85c\uc6b4 \ud504\ub9b0\ud130\uae30 \ub0b4\ubd80 \uc18c\ud504\ud2b8\uc6e8\uc5b4\ub97c \uac1c\ubc1c\ud558\uc600\ub294\ub370, \uc774 \ud504\ub9b0\ud130\uae30\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc870\uac74\uc5d0 \ub530\ub77c \uc778\uc1c4\ub97c \ud558\uac8c \ub41c\ub2e4.\n\n    \ud604\uc7ac Queue\uc758 \uac00\uc7a5 \uc55e\uc5d0 \uc788\ub294 \ubb38\uc11c\uc758 \u2018\uc911\uc694\ub3c4\u2019\ub97c \ud655\uc778\ud55c\ub2e4.\n    \ub098\uba38\uc9c0 \ubb38\uc11c\ub4e4 \uc911 \ud604\uc7ac \ubb38\uc11c\ubcf4\ub2e4 \uc911\uc694\ub3c4\uac00 \ub192\uc740 \ubb38\uc11c\uac00 \ud558\ub098\ub77c\ub3c4 \uc788\ub2e4\uba74, \uc774 \ubb38\uc11c\ub97c \uc778\uc1c4\ud558\uc9c0 \uc54a\uace0 Queue\uc758 \uac00\uc7a5 \ub4a4\uc5d0 \uc7ac\ubc30\uce58 \ud55c\ub2e4. \uadf8\ub807\uc9c0 \uc54a\ub2e4\uba74 \ubc14\ub85c \uc778\uc1c4\ub97c \ud55c\ub2e4.\n\n\uc608\ub97c \ub4e4\uc5b4 Queue\uc5d0 4\uac1c\uc758 \ubb38\uc11c(A B C D)\uac00 \uc788\uace0, \uc911\uc694\ub3c4\uac00 2 1 4 3 \ub77c\uba74 C\ub97c \uc778\uc1c4\ud558\uace0, \ub2e4\uc74c\uc73c\ub85c D\ub97c \uc778\uc1c4\ud558\uace0 A, B\ub97c \uc778\uc1c4\ud558\uac8c \ub41c\ub2e4.\n\n\uc5ec\ub7ec\ubd84\uc774 \ud560 \uc77c\uc740, \ud604\uc7ac Queue\uc5d0 \uc788\ub294 \ubb38\uc11c\uc758 \uc218\uc640 \uc911\uc694\ub3c4\uac00 \uc8fc\uc5b4\uc84c\uc744 \ub54c, \uc5b4\ub5a4 \ud55c \ubb38\uc11c\uac00 \uba87 \ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\ub294\uc9c0 \uc54c\uc544\ub0b4\ub294 \uac83\uc774\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc704\uc758 \uc608\uc5d0\uc11c C\ubb38\uc11c\ub294 1\ubc88\uc9f8\ub85c, A\ubb38\uc11c\ub294 3\ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\uac8c \ub41c\ub2e4.\n\uc785\ub825\n\n\uccab \uc904\uc5d0 test case\uc758 \uc218\uac00 \uc8fc\uc5b4\uc9c4\ub2e4. \uac01 test case\uc5d0 \ub300\ud574\uc11c \ubb38\uc11c\uc758 \uc218 N(100\uc774\ud558)\uc640 \uba87 \ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\uc5c8\ub294\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uac00 \ud604\uc7ac Queue\uc758 \uc5b4\ub5a4 \uc704\uce58\uc5d0 \uc788\ub294\uc9c0\ub97c \uc54c\ub824\uc8fc\ub294 M(0\uc774\uc0c1 N\ubbf8\ub9cc)\uc774 \uc8fc\uc5b4\uc9c4\ub2e4. \ub2e4\uc74c\uc904\uc5d0 N\uac1c \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\uac00 \uc8fc\uc5b4\uc9c0\ub294\ub370, \uc911\uc694\ub3c4\ub294 1 \uc774\uc0c1 9 \uc774\ud558\uc774\ub2e4. \uc911\uc694\ub3c4\uac00 \uac19\uc740 \ubb38\uc11c\uac00 \uc5ec\ub7ec \uac1c \uc788\uc744 \uc218\ub3c4 \uc788\ub2e4. \uc704\uc758 \uc608\ub294 N=4, M=0(A\ubb38\uc11c\uac00 \uad81\uae08\ud558\ub2e4\uba74), \uc911\uc694\ub3c4\ub294 2 1 4 3\uc774 \ub41c\ub2e4.\n\ucd9c\ub825\n\n\uac01 test case\uc5d0 \ub300\ud574 \ubb38\uc11c\uac00 \uba87 \ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\ub294\uc9c0 \ucd9c\ub825\ud55c\ub2e4.\n'''\ndef push(q,a):\n    q.append(a)\n\ndef pop(q):\n    if(empty(q)):\n        return -1\n    return q.pop(0)\n\ndef size(q):\n    return len(q)\n\ndef empty(q):\n    if(q == []):\n        return 1\n    return 0\n\ndef front(q):\n    if(empty(q)):\n        return -1\n    return q[0]\n\ndef back(q):\n    if(empty(q)):\n        return -1\n    return q[len(q)-1]\n\n\nqueue = []\n\nN = int(input())\n\nwhile(N>0):\n    com = input().split()\n    n = int(com[0])\n    tar= int(com[1])\n    counter =0\n\n    q = input().split()\n    for i in range(len(q)):\n        q[i] = int(q[i])\n    #print(q)\n    while(tar >=0):\n        if(tar ==0):\n            if(q[tar] == max(q)):           # \ud0c0\uac9f\uc774 \uc824 \uc55e\uc774\uace0, \ucd5c\ub300 \uc6b0\uc120\ub3c4\uc778\uacbd\uc6b0\n                print(counter+1)\n                break\n            else:                           # \ud0c0\uac9f\uc774 \uc824 \uc55e\uc774\uc9c0\ub9cc, \ucd5c\ub300 \uc6b0\uc120\ub3c4\ub294 \uc544\ub2cc\uacbd\uc6b0\n                q.append(q[tar])\n                q.pop(0)\n                tar = len(q)-1\n\n        else:\n            if(q[0] == max(q)):     # \uc824 \uc55e\uc6d0\uc18c\uac00 \ucd5c\ub300 \uc6b0\uc120\ub3c4\uc778\uacbd\uc6b0\n                q.pop(0)\n                counter =counter +1\n                tar =tar-1\n            else:                   # \uc824 \uc55e \uc6d0\uc18c\uac00 \ucd5c\ub300 \uc6b0\uc120\ub3c4\uac00 \uc544\ub2cc\uacbd\uc6b0\n                q.append(q[0])\n                q.pop(0)\n                tar = tar -1\n\n\n    N = N-1\n\n\n\n\n\n\n"}, {"id": 29325191, "name": "\uc7a5\uc601\uc7ac", "x": 17.395627975463867, "y": -4.169342994689941, "label": 0, "group": 129, "code": "a = int(input())\nfor i in range(a):\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    idx = lst.index(max(lst))\n    lst[idx] = -1\n    answer = 1\n    leng = len(lst)\n    \n    while m != idx:\n        try:\n            idx = (idx + 1 + lst[(idx + 1) % leng:].index(max(lst))) % leng\n        except:\n            idx = lst[:idx].index(max(lst))\n        lst[idx] = -1\n        answer += 1\n    print(answer)"}, {"id": 48487367, "name": "\ucd5c\uc601\uc740", "x": -23.497682571411133, "y": 12.71010971069336, "label": 0, "group": 129, "code": "Answer=[]\n\ndef printerQueue(N,M):\n    #N: \ucd1d \ubb38\uc11c\uc758 \uac1c\uc218, M : M\ubc88\uc9f8 \uc6d0\uc18c\uc758 \ucd9c\ub825 \uc21c\uc11c\n    importance=list(map(int,input().split(\" \")))\n    maximportance=max(importance)\n    dic={i:importance[i] for i in range(len(importance))}\n    paper=[i for i in range(len(importance))]\n    count=0\n    deleted=-1\n\n    while deleted!=M: #\uc0ad\uc81c\ub418\ub294 \uc778\ub371\uc2a4\uc640 M\uc774 \uac19\ub2e4\uba74\n        popping=paper.pop(0)\n        if dic[popping]==maximportance:\n            dic[popping]=-1\n            maximportance=max(dic.values())\n            deleted=popping\n            count+=1\n        else:\n            paper.append(popping)\n    Answer.append(count)\n    \nn=int(input())\n\ninputs=[]\nfor _ in range(n):\n    N,M=map(int,input().split(\" \"))\n    printerQueue(N,M)\n    \nfor i in Answer:\n    print(i)"}, {"id": 20183042, "name": "\uc11c\uc9c0\ud61c", "x": -13.598685264587402, "y": -0.49808207154273987, "label": 0, "group": 129, "code": "import sys\nnum_input = int(sys.stdin.readline())\n# num_list = [[1, 0], [4, 2], [6, 0]]\n# weight_list= [[5], [1, 2, 3, 4], [1, 1, 9, 1, 1, 1]]\nnum_list,weight_list  = list(),list()\nfor i in range(num_input):\n    num_list.append(list(map(int,sys.stdin.readline().strip().split())))\n    weight_list.append(list(map(int,sys.stdin.readline().strip().split())))\n    \n\n\ndef function(num_list, weight_list):\n    print_index = 1\n    num_list_index = num_list[1]\n    while weight_list: \n        if max(weight_list) == weight_list[0]:\n            if num_list_index == 0:\n                print(print_index)\n                break\n            del weight_list[0]\n            print_index +=1\n            num_list_index-=1\n        if max(weight_list) > weight_list[0]:\n    \n            weight_list.append(weight_list[0])\n            del weight_list[0]\n            if num_list_index == 0:\n                num_list_index = len(weight_list)-1\n            else:\n                num_list_index -=1\n        \nfor i in range(len(num_list)):\n    function(num_list[i],weight_list[i])\n\n\n"}, {"id": 37529982, "name": "\uae40\uc6b0\ube48", "x": 13.113897323608398, "y": 20.546497344970703, "label": 0, "group": 129, "code": "import sys\n\ntest_cases = int(input())\n\nfor a in range(test_cases):\n  # input\n  n,target = list(map(int,sys.stdin.readline().split( )))\n  important = list(map(int,sys.stdin.readline().split( )))\n  \n  count = 0\n  \n  while True:\n    if important[0] == max(important):\n      # \ucd9c\ub825\n      important.pop(0)\n      count+=1\n      if target == 0:\n        break\n      else:\n        target -= 1\n    else:\n      # \ub9e8 \ub4a4\ub85c \ub118\uae40\n      important.append(important.pop(0))\n      if target == 0:\n        target = len(important)\n      target -= 1\n\n  print(count)"}, {"id": 31064423, "name": "\ubc30\ud0dc\ud6c8", "x": 25.543964385986328, "y": 10.955387115478516, "label": 0, "group": 130, "code": "for i in range(int(input())) :\n    n, x = map(int, input().split())\n    important = list(map(int, input().split()))\n\n    files = [chr(i) for i in range(65, 65 + n)]\n    target = files[x]\n    answer = []\n\n    for j in range(n) :\n        temp = important.index(max(important))\n        answer.append(files[temp])\n        files = files[temp + 1:] + files[:temp]\n        important = important[temp + 1:] + important[:temp]\n\n    print(answer.index(target) + 1)"}, {"id": 21526943, "name": "\ub958\ubcd1\ud76c", "x": 23.891759872436523, "y": 17.12666130065918, "label": 0, "group": 130, "code": "test = int(input())\nresult = []\n\nfor i in range(test):\n    fir_in = 0\n    count = 0\n    n, m = list(map(int, input().split()))\n    que = list(map(int, input().split()))\n    while True:\n        if(que[fir_in]==max(que)):\n            if(fir_in==m):\n                result.append(count+1)\n                break\n            else:\n                que[fir_in] = 0\n                count += 1\n        else:\n            fir_in += 1\n            fir_in = fir_in%n\n\nfor i in result:\n    print(i)"}, {"id": 31327281, "name": "\uae40\uc7ac\uc6d0", "x": -7.70305061340332, "y": -8.006996154785156, "label": 0, "group": 130, "code": "n = int(input())\n\nfor i in range(n):\n    x, y = map(int, input().split())\n    z = list(map(int, input().split()))\n    list1 = [0 for j in range(x)]\n    list1[y] = 1\n    flag = 0\n\n    while True:\n        if z[0] == max(z):\n            flag += 1\n            if list1[0] == 1:\n                print(flag)\n                break\n            else:\n                del list1[0]\n                del z[0]\n        else:\n            z.append(z[0])\n            del z[0]\n            list1.append(list1[0])\n            del list1[0]\n"}, {"id": 27042442, "name": "\uc81c\uac08\uc2dc\uc6d0", "x": 14.932634353637695, "y": 10.747241020202637, "label": 0, "group": 130, "code": "import sys\nt = int(sys.stdin.readline())\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    importance = list(map(int, sys.stdin.readline().split()))\n    have_to_find = [0]*n\n    have_to_find[m]=1\n    cnt = 0\n    while True:\n        if importance[0]==max(importance):\n            cnt+=1\n            if have_to_find[0]==1:\n                print(cnt)\n                break\n            else:\n                del importance[0]\n                del have_to_find[0]\n        else:\n            importance.append(importance[0])\n            del importance[0]\n            have_to_find.append(have_to_find[0])\n            del have_to_find[0]\n"}, {"id": 43484307, "name": "\uae40\ud76c\ucca0", "x": 25.13901138305664, "y": 41.679351806640625, "label": 0, "group": 131, "code": "from sys import stdin, stdout\n\nfor _ in range(int(stdin.readline())):\n\tn, m = map(int, stdin.readline().split())\n\tli = list(map(int, stdin.readline().split()))\n\t\n\tdi = {}\n\tfor e in li:\n\t\tif e in di:\n\t\t\tdi[e] += 1\n\t\telse:\n\t\t\tdi[e] = 1\n\t\n\tqu = 0\n\tfinish = False\n\t\n\tmaximum = max(di)\n\t\n\twhile True:\n\t\tif finish:\n\t\t\tbreak\n\t\t\t\n\t\tfor i in range(n):\n\t\t\tif li[i] == maximum:\n\t\t\t\tqu += 1\n\t\t\t\t\n\t\t\t\tif i == m:\n\t\t\t\t\tfinish = True\n\t\t\t\t\tbreak\n\t\t\t\t\n\t\t\t\tdi[li[i]] -= 1\n\t\t\t\t\n\t\t\t\tif di[li[i]] == 0:\n\t\t\t\t\tdel di[maximum]\n\t\t\t\t\tmaximum = max(di)\n\t\t\t\t\t\n\tstdout.write(str(qu) + \"\\n\")\n"}, {"id": 7543364, "name": "\uc724\uc18c\ud76c", "x": -21.680538177490234, "y": 1.725359320640564, "label": 0, "group": 131, "code": "import sys\n\ndef lst2str(lst) :\n    return \"\".join(list(map(str, lst)))\n\ndef printer(lst, target) :\n    max_value = max(lst)\n    target_value = lst[target]\n    \n    indexed_lst = []\n    for idx, v in enumerate(lst) :\n        indexed_lst.append((idx, v))\n\n    #\uc790\uc2e0\uc774 \ucd5c\ub300\uac12\uc77c \uacbd\uc6b0\n    if max_value == target_value :\n        return lst[:target].count(target_value) + 1\n\n    #\uadf8 \uc678\n    count = 0\n    temp1, temp2 = lst[:target], lst[target:]\n    \n    while max_value > target_value :\n        num_max_value = lst.count(max_value)\n        latest_index = lst2str(lst).rfind(str(max_value))\n\n        if latest_index < target :\n            target -= (latest_index + 1)\n        else :\n            target += len(lst[latest_index:]) - temp1.count(max_value) - 1\n        \n        lst = list(lst[latest_index:] + lst[:latest_index])\n        lst = list(filter(lambda x : x != max_value, lst))\n\n        temp1, temp2 = lst[:target], lst[target:]\n        count += num_max_value\n        max_value = max(lst)\n\n        if max_value == target_value :\n            return temp1.count(target_value) + count +1\n        \nnum = int(input())\nfor idx in range(num) :\n    page, target = list(map(int, input().split()))\n    lst = list(map(int, sys.stdin.readline().split()))\n    \n    result = printer(lst, target)\n    print(result)\n\n"}, {"id": 47186866, "name": "\uc804\uacbd\ud61c", "x": -16.61818504333496, "y": -11.440495491027832, "label": 0, "group": 131, "code": "import sys\n\nresult = []\nT = int(sys.stdin.readline())\nfor i in range(T):\n    cnt = 0\n    N, M = map(int, sys.stdin.readline().split())\n    printList = []\n    checkList = [0 for _ in range(N)]\n    checkList[M] = 1\n    printList = list(map(int, sys.stdin.readline().split()))\n    while True:\n        if printList[0] == max(printList):\n            cnt += 1\n            if checkList[0] == 1:\n                result.append(cnt)\n                break\n            else:\n                del(printList[0])\n                del(checkList[0])\n\n        else:\n            printList.append(printList[0])\n            checkList.append(checkList[0])\n            del(printList[0])\n            del(checkList[0])\n\nfor i in result:\n    print(i)"}, {"id": 48738294, "name": "\uace0\uc544\ub77c", "x": -25.098909378051758, "y": 23.817325592041016, "label": 0, "group": 131, "code": "import sys\nT = int(input())\n\nfor _ in range(T):\n    # N\uc740 \ubb38\uc11c\uc758 \uac1c\uc218, M \uad81\uae0d\ud55c \ubb38\uc11c \ud604\uc7ac \uba87\ubc88\uc9f8\uc5d0 \ub193\uc5ec\uc788\ub294\uc9c0 \ub098\ud0c0\ub0b4\ub294 \uc815\uc218(0\uc774 \ub9e8\uc67c\ucabd)\n    N, M = map(int, sys.stdin.readline().split())\n    # N\uac1c \ubb38\uc11c\uc758 \uc911\uc694\ub3c4 \ucc28\ub840\ub300\ub85c \uc785\ub825(\uc911\uc694\ub3c4 \uac19\uc744 \uc218 \uc788\uc74c)\n    Prioritys = list(map(int, sys.stdin.readline().split()))\n\n    index = [i for i in range(N)]\n    index[M] = 'target' # target\uc73c\ub85c \ub9de\ucdb0\uc11c \uc778\ub371\uc2a4 \uae30\uc5b5\ud558\uae30\n    cnt = 0 \n\n    while Prioritys:\n        if Prioritys[0] == max(Prioritys): # \uc911\uc694\ub3c4\uac00 \uc81c\uc77c \ub192\ub2e4\uba74\n            cnt += 1 # \ucd9c\ub825 \n            if index[0] == 'target': # \uc6b0\uc120\uc21c\uc704\uac00 \uac00\uc7a5\ub192\uace0, \uc6b0\ub9ac\uac00 \uc6d0\ud55c \ud0c0\uac9f\uc778\uc9c0 \ud655\uc778\n                print(cnt)\n                break\n            Prioritys.pop(0)\n            index.pop(0)\n        else:  # \uc911\uc694\ub3c4\uac00 \uac00\uc7a5 \ub192\uc9c0 \uc54a\ub2e4\uba74\n            Prioritys.append(Prioritys.pop(0)) # \uc6b0\uc120\uc21c\uc704\uc640 \uc778\ub371\uc2a4 pop\ud574\uc11c \ub9e8\ub4a4\ub85c \ubd99\uc774\uae30\n            index.append(index.pop(0))\n"}, {"id": 13552650, "name": "\uc5f0\uc6b0\uc9c4", "x": -27.039262771606445, "y": 2.3279566764831543, "label": 0, "group": 132, "code": "Case = int(input())\n\ndef priority_print(queue, M, print_count):\n    priority = max(queue.values())\n    \n    for key, item in queue.items():\n        if(priority == item):\n            if(M == key):\n                return print_count\n            else:\n                queue.pop(key)\n                return priority_print(queue, M, print_count + 1)\n        else:\n            cur_key = key\n            cur_item = item\n            queue.pop(cur_key)\n            queue.update({cur_key: cur_item})\n            return priority_print(queue, M, print_count)\n\nfor _ in range(Case):\n    # N : \ubb38\uc11c\uc758 \uc218 \n    # M : \uba87\ubc88\uc9f8\ub85c \uc778\uc1c4\ub420\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc704\uce58\n    N, M = map(int, input().split())\n    \n    if(N == 1):\n        dummy = input()\n        print(1)\n        continue\n    \n    num_list = map(int, input().split())\n    \n    queue = dict()\n    for i, num in enumerate(num_list):\n        queue[i] = num\n        \n    print(priority_print(queue, M, 1))"}, {"id": 27323295, "name": "\uc190\uc740\uc2dd", "x": -3.596482992172241, "y": -22.287656784057617, "label": 0, "group": 132, "code": "test_case = int(input())\nfor t in range(test_case):\n    n, location = map(int,input().split())\n    arr = list(map(int,input().split()))\n    cnt = 0\n    while arr:\n        if location == 0:\n            if arr[location] == max(arr):\n                cnt += 1\n                print(cnt)\n                break\n            else:\n                arr.append(arr.pop(0))\n                location = len(arr) - 1\n\n        else:\n            if arr[0] == max(arr):\n                arr.pop(0)\n                cnt += 1\n                location = location - 1\n            else:\n                arr.append(arr.pop(0))\n                location = location - 1\n            \n\n"}, {"id": 23015616, "name": "\uc624\uc11c\uc5f0", "x": -3.922640562057495, "y": -9.139204025268555, "label": 0, "group": 132, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 19479120, "name": "\ubd09\ud76c\uc7ac", "x": -15.997032165527344, "y": -11.602862358093262, "label": 0, "group": 132, "code": "from sys import stdin\n\ntc = int(input())\nresult = list()\n\nfor i in range(tc):\n    n, m = list(map(int, stdin.readline().split()))\n    doc = list(map(int, stdin.readline().split()))\n    cursor = [0] * n\n    cursor[m] = 1\n    cnt = 0\n    \n    while True:\n        if doc[0] == max(doc):\n            cnt += 1\n            if cursor[0] == 1:\n                result.append(cnt)\n                break\n            else:\n                del doc[0]\n                del cursor[0]\n        else:\n            doc.append(doc[0])\n            del doc[0]\n            cursor.append(cursor[0])\n            del cursor[0]\n\nfor i in result:\n    print(i)"}, {"id": 30350261, "name": "\uc815\uc7ac\uc219", "x": 1.8646199703216553, "y": -11.803367614746094, "label": 0, "group": 133, "code": "import sys\n\nt = int(sys.stdin.readline())\nfor i in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    importance = list(map(int, sys.stdin.readline().split()))\n    i=0\n    while(len(importance)):\n        if(importance[0] == max(importance)):\n            importance = importance[1:]\n            i += 1\n            if(m==0):\n                print(i)\n                break\n            m -= 1\n        else:\n            importance.append(importance[0])\n            importance = importance[1:]\n            if(m==0):\n                m = len(importance)-1\n            else:\n                m -= 1"}, {"id": 42085289, "name": "\uc774\uc138\uc6c5", "x": 13.048700332641602, "y": 23.543954849243164, "label": 0, "group": 133, "code": "import sys\ninput=sys.stdin.readline\n\nN=int(input())\nfor _ in range(N):\n  List_N=list(map(int,input().split(\" \")))\n  List_M=list(map(int,input().split(\" \")))\n  k=List_N[1]\n  List=list(List_M)\n  List[k]=0\n  answer=0\n  while True:\n    if List_M[0]==max(List_M):\n      answer+=1\n      if List[0]==0:\n        print(answer)\n        break\n      else:\n        List_M.pop(0)\n        List.pop(0)\n    else:\n      List_M.append(List_M.pop(0))\n      List.append(List.pop(0))"}, {"id": 18988075, "name": "\uac15\uc9c4\uc625", "x": 24.225128173828125, "y": -4.367231369018555, "label": 0, "group": 133, "code": "\"\"\"\n1966, printer queue\n\"\"\"\n\nn_case = int(input())\n\nfor i in range(n_case):\n    n_queue, target = map(int, input().split())\n    q = input().split()\n    cnt = 0\n\n    while True:\n        m = max(q)\n        if q[0] == m:\n            q.pop(0)\n            cnt = cnt + 1\n            if target == 0:\n                break\n            else:\n                target = target - 1\n        else:\n            q.append(q.pop(0))\n            if target == 0:\n                target = len(q) - 1\n            else:\n                target = target - 1\n\n    print(cnt)"}, {"id": 45472507, "name": "\uc608\uc815\ud6c8", "x": -9.549885749816895, "y": 19.41307830810547, "label": 0, "group": 133, "code": "import sys\nT = int(sys.stdin.readline())\n\n# \uac12\uc774 \uac19\uc744 \ub54c \uc81c\ub300\ub85c \uc548 \ub098\uc634!\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    qu = list(map(int, sys.stdin.readline().split()))\n    lst = [0] * N\n    lst[M] = 1\n\n    while len(qu) > 0:\n        if qu[0] == max(qu):\n            if lst[0] == 1:\n                print(N - len(qu) + 1)\n                break\n            x = qu.pop(0)\n            lst.pop(0)\n        else:\n            qu.append(qu.pop(0))\n            lst.append(lst.pop(0))"}, {"id": 19631846, "name": "\uc815\uc2dc\uc544", "x": 13.973283767700195, "y": -12.502129554748535, "label": 0, "group": 134, "code": "from _collections import deque\nT=int(input())\nres=[]\nfor _ in range(T):\n    num,loc=map(int,input().split())\n    score=[(key,value)for key,value in enumerate(list(map(int,input().split())))]\n    Q=deque(score)\n    cnt=0\n    while True:\n        num1=Q.popleft()\n        if any(num1[1]<x[1]for x in Q):\n            Q.append(num1)\n        else:\n            cnt+=1\n            if num1[0]==loc:\n                res.append(cnt)\n                break\nfor y in res:\n    print(y)\n"}, {"id": 42385474, "name": "\uae40\uace0\uc6b4", "x": -6.890327453613281, "y": -21.560977935791016, "label": 0, "group": 134, "code": "n = int(input())\n\nans = [0] * n\nfor i in range(n):\n    num_p, key = map(int, input().split())\n    printer = list(map(int, input().split()))\n\n    cnt = 1\n\n    while printer:\n        #print(printer)\n        tmp_p = printer.pop(0)\n        if len(printer) == 0:\n            break\n        if max(printer) > tmp_p:\n            printer.append(tmp_p)\n            if key == 0:\n                key = num_p -1\n            else: \n                key -= 1\n        else:\n            if key == 0:\n                break\n            cnt += 1\n            num_p -= 1\n            key -= 1\n        \n    ans[i] = cnt \n\n\nfor i in range(n):\n    print(ans[i])"}, {"id": 24708816, "name": "\ud558\ud61c\uc218", "x": -0.8177955746650696, "y": -10.592315673828125, "label": 0, "group": 134, "code": "\nnum = int(input())\n\n\nfor i in range(num):\n    n, m = list(map(int, input().split()))\n    imp = list(map(int, input().split()))\n\n    target = [1 if i==m else 0 for i in range(n)]\n    count = 0\n\n    while(True):\n        \n        if imp[0]  == max(imp):\n            count +=1\n            if target[0] == 1:\n                print(count)\n                break\n            else:\n                del imp[0]\n                del target[0]\n        else:\n            imp.append(imp[0])\n            del imp[0]\n            target.append(target[0])\n            del target[0]"}, {"id": 26954997, "name": "\uc774\uc778\ud638", "x": -13.61037540435791, "y": -13.655259132385254, "label": 0, "group": 134, "code": "from sys import stdin\nr = stdin.readline\n\nres = []\nfor _ in range(int(r())):\n    n, m = map(int, r().split())\n\n    q = list(map(int, r().split()))\n    if q.count(q[m]) == 1:\n        res.append(len([i for i in q if i >= q[m]]))\n    else:\n        c = 0\n        while q:\n            if q[0] == max(q):\n                del q[0]\n                c += 1\n                if not m:\n                    break\n                m -= 1\n            else:\n                q.append(q.pop(0))\n                if not m:\n                    m = len(q) - 1\n                else:\n                    m -= 1\n\n        res.append(c)\n\nfor r in res:\n    print(r)"}, {"id": 28750755, "name": "\ud45c\uc9c4\ud76c", "x": 3.396705150604248, "y": -2.1441197395324707, "label": 0, "group": 135, "code": "import sys\ninput = sys.stdin.readline\ncase = int(input())\nfor _ in range(case):\n    n,m = map(int,input().split())\n    important = list(map(int,input().split()))\n    check = [0 for _ in range(n)]\n    check[m] = 1\n    cnt = 0 \n    while True:\n        if important[0] == max(important):\n            cnt+=1\n            if check[0]==1:\n                print(cnt)\n                break\n            else:\n                important.pop(0)\n                check.pop(0)\n        else:\n            important.append(important.pop(0))\n            check.append(check.pop(0))\n\n\n"}, {"id": 11583042, "name": "\uc11c\uc9c0\uc11d", "x": 17.795560836791992, "y": 3.274066209793091, "label": 0, "group": 135, "code": "for i in range(int(input())):\n    count=0\n    n,m=map(int,input().split())\n    arr=list(map(int,input().split()))\n    while 1:\n        if arr[0]==max(arr):\n            count+=1\n            if m==0:\n                print(count)\n                break\n            arr.pop(0)\n            m-=1\n        else:\n            arr.append(arr.pop(0))\n            if m==0:\n                m=len(arr)-1\n            else:\n                m-=1"}, {"id": 31175969, "name": "\uc190\uc608\uc9c4", "x": -26.400896072387695, "y": 23.222017288208008, "label": 0, "group": 135, "code": "from sys import stdin\n\n# \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uc785\ub825.\ntest_case = int(stdin.readline())\n\n# \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \ub9cc\ud07c \uc2e4\ud589\ub428.\nfor _ in range(test_case):\n\n    # \uc785\ub825.\n    m,n = map(int, stdin.readline().split(\" \"))\n    arr = list(map(int, stdin.readline().split(\" \")))\n\n    # \uc785\ub825 \ubc1b\uc740 \ubc30\uc5f4\uc5d0 \ub300\ud574\uc11c, \uc815\ub82c \ubc84\uc804 \ud558\ub098 \ub354 \ub9cc\ub4ec.\n    max_priority_arr = arr.copy()\n    max_priority_arr.sort()\n\n    result_check = 0 # \ub3cc\ub9ac\ub294 \ud69f\uc218 (\uacb0\uacfc).\n    index = 0 # \ud0d0\uc0c9 \uc778\ub371\uc2a4.\n    while True:\n\n        # \ub9cc\uc57d \uc9c0\uae08 \ud0d0\uc9c0\ub41c \uc694\uc18c\uac00, \uac00\uc7a5 \uc6b0\uc120\uc21c\uc704\uac00 \ub192\uc740 \uc694\uc18c\ubcf4\ub2e4 \uc6b0\uc120\uc21c\uc704\uac00 \ub0ae\ub2e4\uba74,\n        if arr[index] < max_priority_arr[-1]:\n            arr.append(arr[index]) # \ud0d0\uc9c0\ub41c \uc694\uc18c\uc758 \uac12\uc744, \ubc30\uc5f4\uc758 \uc824\ub4a4\uc5d0 \ucd94\uac00 \ud574\uc90c.\n            if index == n: # \ub9cc\uc57d \ud0d0\uc9c0\ub41c \uc694\uc18c\uac00, \uc6b0\ub9ac\uac00 \uc9c0\uc815 \ubc1b\uc740 n \ubc88\uc9f8 \uc694\uc18c\ub77c\uba74,\n                n = len(arr)-1 # \uc824 \ub4a4\ub97c \uac00\ub9ac\ud0a4\uac8c \ubcc0\uacbd.\n\n        # \ub9cc\uc57d \uc9c0\uae08 \ud0d0\uc9c0\ub41c \uc694\uc18c\uc758 \uc6b0\uc120\uc21c\uc704\uac00 \uac00\uc7a5 \ub192\uac70\ub098 \uac19\ub2e4\uba74,\n        else:\n            max_priority_arr.pop() # \uc6b0\uc120\uc21c\uc704 \ubc30\uc5f4\uc5d0 \ub300\ud574\uc11c, \ub9c8\uc9c0\ub9c9\uaec4 \uc5c6\uc560\uc90c.\n            result_check += 1 # check.\n            if index == n: # \ub9cc\uc57d \ud0d0\uc9c0\ub41c \uc694\uc18c\uac00, \uc6b0\ub9ac\uac00 \uc9c0\uc815 \ubc1b\uc740 n \ubc88\uc9f8 \uc694\uc18c\ub77c\uba74,\n                break # \ub05d\ub0c4.\n\n        # \uc778\ub371\uc2a4\ub294 \ub9e4\ubc88 \uc99d\uac00 \uc2dc\ud0b4. \ub9e4\ubc88 \uc55e\uc5d0 \uc694\uc18c\ub97c \uc5c6\uc560\ub294\uac8c \uc544\ub2c8\ub77c, \uadf8\ub300\ub85c \ub0c5\ub450\uace0, \ub4a4\uc5d0 \uc313\uc73c\uba74\uc11c, \ud0d0\uc0c9\ud558\uae30 \ub54c\ubb38.\n        # \ubc30\uc5f4\uc758 \uc55e, \uc911\uac04 \uc694\uc18c\ub97c \uc0ad\uc81c \ud55c\ub2e4\ub294\uac74 \uaf64\ub098 \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \ud589\uc704\uc784. \uadf8\ub798\uc11c \uc774 \ubc29\uc2dd\uc744 \ud0dd\ud55c\uac70.\n        index += 1\n\n    # \ucd9c\ub825.\n    print(result_check)"}, {"id": 6716416, "name": "\uace0\uc544\uc131", "x": 1.5190755128860474, "y": -8.869144439697266, "label": 0, "group": 135, "code": "for i in range(int(input())):\n    x, y = input().split()\n    x = int(x)\n    y = int(y)\n\n    qu = list(map(int, input().split()))\n    qu = [[qu[i], i] for i in range(x)]\n    m = max(qu[i][0] for i in range(len(qu)))\n\n    order = 0\n    c = 1\n\n    while c:\n        for i in range(len(qu)):\n            t = qu.pop(0)\n            if(t[0] == m):\n                order += 1\n                if(t[1] == y):\n                    c = 0\n                    break\n                m = max(qu[i][0] for i in range(len(qu)))\n            else:\n                qu.append(t)\n\n    print(order)\n"}, {"id": 33801822, "name": "\uad6c\uc9c0\uc131", "x": -9.60720157623291, "y": -24.616756439208984, "label": 0, "group": 136, "code": "T = int(input())\nfor tc in range(1, T + 1):\n    N, M = map(int, input().split())\n    points = list(map(int, input().split()))\n\n    cnt = 0\n    front = 0\n    rear = (N - front - 1) % N\n    while True:\n        m_value = max(points)\n        if max(points[front:]) == m_value:\n            m_idx = points[front:].index(m_value) + front\n        else:\n            m_idx = points.index(m_value)\n        cnt += 1\n\n        if m_idx == M:\n            break\n        elif m_idx > M:\n            points.pop(m_idx)\n            N -= 1\n            if m_idx == N:\n                front = 0\n            else:\n                front = m_idx\n            rear = (N + front - 1) % N\n        else:\n            points.pop(m_idx)\n            N -= 1\n            front = m_idx\n            M -= 1\n            rear = (N + front - 1) % N\n\n    print(cnt)"}, {"id": 20275329, "name": "\ucd5c\uc11c\ud558", "x": -23.226974487304688, "y": 4.77639102935791, "label": 0, "group": 136, "code": "testCase = int(input())\ndef process(D, docs):\n    def putBack():\n        tmp, tmpIdx = docs[0], indexTag[0]\n        del docs[0]\n        del indexTag[0]\n        docs.append(tmp)\n        indexTag.append(tmpIdx)\n    \n    cnt = 1\n    indexTag = [i for i in range(len(docs))]\n    \n    while True:\n#         print(docs)\n        hasBigger = False\n        firstVal = docs[0]\n        for i in range(1, len(docs)):\n            if firstVal < docs[i]:\n#                 print(\"before\",docs, indexTag)\n                putBack()\n#                 print(\"after\",docs, indexTag)\n                hasBigger = True\n                break\n            else:\n                continue\n        #\ub9cc\uc57d \uc911\uac04\uc5d0 \ub354 \uac00\uce58\uac00 \ud070\uac8c \uc5c6\uc73c\uba74 \uc0ad\uc81c\uc2dc\ud0b4\n        if not hasBigger:\n            tag = indexTag[0]\n            del docs[0]\n            del indexTag[0]\n            if tag == D:\n                return cnt\n            else:\n                cnt += 1\n            \n        \nfor i in range(testCase):\n    N, D = map(int, input().split())\n    docs = list(map(int, input().split()))\n    print(process(D, docs))\n    \n        \n    "}, {"id": 14003732, "name": "\ud64d\uc601\ubbf8", "x": -24.9877872467041, "y": 18.409835815429688, "label": 0, "group": 136, "code": "testcase = int(input())\nwhile(testcase):\n    N,M = map(int, input().strip().split())\n    que = list(map(int , input().strip().split()))\n    cnt = 0\n    target = M  #M\uc740 que \uc5d0\uc11c \uc778\ub371\uc2a4\ucc98\ub7fc \uc0ac\uc6a9. \uacc4\uc18d \ubcc0\ud558\uac8c \ub420 \uac83.\n    flag=  True\n    while(flag):\n        MAX = max(que)\n        if(que[target] ==MAX and target ==0):\n            del que[0]\n            cnt +=1\n            flag= False\n        else:\n            # \ud0c0\uac9f \ub370\uc774\ud130\uac00 \ub9e8 \ub4a4\ub85c \uc62e\uaca8\uc84c\uc744 \ub54c.\n            if( que[0] != MAX and target ==0):\n                que.append(que[0])\n                del que[0]\n                target = len(que)-1\n            #\ub2e4\ub978 \uc6d0\uc18c\uac00 \uc790\uc2e0\uc758 \ub4a4\ub85c \uc62c \ub54c.\n            if(que[0] != MAX and  target !=0):\n                que.append(que[0])\n                del que[0]\n                target -=1\n            #MAX \uac12 \uc6d0\uc18c\uac00 pop \ub420 \ub54c.\n            if(que[0] == MAX and target !=0):\n                del que[0]\n                target -=1\n                cnt +=1\n    print(cnt)\n    testcase -=1\n"}, {"id": 16035902, "name": "\ubc15\uc9c4\ud76c", "x": 9.0123872756958, "y": 1.0827828645706177, "label": 0, "group": 136, "code": "n = int(input())\n\nfor i in range(n):\n    a, b = map(int, input().split(' '))\n\n    importance = list(map(int, input().split(' ')))\n\n    masking = [0] * a\n    masking[b] = 1\n\n    # print('masking : ', masking)\n    # print('importance : ', importance)\n    # print('max : ', max(importance))\n    output = 0\n\n    while True:\n\n        if (importance[0] == max(importance)) and (masking[0] == 1):\n            # print('first')\n            output += 1\n            break\n\n        elif (importance[0] == max(importance)) and (masking[0] == 0):\n            # print('second')\n            importance.pop(0)\n\n            masking.pop(0)\n\n            output += 1\n\n        else:\n            # print('third')\n            p = importance.pop(0)\n            importance.append(p)\n\n            p = masking.pop(0)\n            masking.append(p)\n\n        # print(importance)\n        # print(masking)\n    print(output)\n"}, {"id": 17719649, "name": "\ubc15\uac74\ud615", "x": 9.828752517700195, "y": -1.7570388317108154, "label": 0, "group": 137, "code": "import sys\n\nnum=int(sys.stdin.readline())\n\nfor i in range(num):\n    NM=list(map(int,sys.stdin.readline().split()))\n    Doc=list(map(int,sys.stdin.readline().split()))\n    init=0\n    result=0\n\n    while Doc:\n        if Doc[init]<max(Doc):\n            Doc.append(Doc[init])\n            Doc.pop(init)\n            if NM[1]==init:\n                NM[1]=len(Doc)-1\n            else:\n                NM[1]=NM[1]-1\n\n        else:\n            Doc.pop(init)\n            result+=1\n            if NM[1]==init:\n                print(result)\n                break\n            NM[1] = NM[1] - 1"}, {"id": 26844126, "name": "\uac15\uc18c\ub77c", "x": -10.437124252319336, "y": -4.808537483215332, "label": 0, "group": 137, "code": "import sys\n\nTestCase = int(sys.stdin.readline())\nfor i in range(TestCase):\n    N,M = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    arr_with_order = []\n\n    for j in range(len(arr)):\n        arr_with_order.append([arr[j], j])\n        \n    count = 0\n    while True:\n        if arr[0]==max(arr):\n            if arr_with_order[0][1]==M:\n                count+=1\n                break\n            arr.pop(0)\n            arr_with_order.pop(0)\n            count+=1\n        else:\n            arr.append(arr.pop(0))\n            arr_with_order.append(arr_with_order.pop(0))\n    print(count)"}, {"id": 29434119, "name": "\ucd94\uacbd\uc11d", "x": -20.478103637695312, "y": -11.481371879577637, "label": 0, "group": 137, "code": "import sys \n\nread = sys.stdin.readline\n\nCase = int(read())\n\nfor _ in range(Case):\n    count, index = list(map(int, read().split()))\n    pr = list(map(int, read().split()))\n    prcount = [pr.count(n) for n in range(10)]\n    prmax = max(pr)\n    turn = 1\n    pos = 0\n    \n    while True:\n        pos = pos if pos < count else 0\n        if pr[pos] != prmax:\n            pos += 1 \n            continue\n        \n        if pos == index:\n            print(turn)\n            break\n        \n        pos += 1\n        turn += 1\n        prcount[prmax] -= 1\n        if prcount[prmax] == 0:\n            while prmax != 0:\n                prmax -= 1\n                if prcount[prmax] != 0:\n                    break\n"}, {"id": 29134566, "name": "\ucd5c\uc131\ubbfc", "x": 21.243671417236328, "y": 5.3913750648498535, "label": 0, "group": 137, "code": "import sys\n\nloop = int(input())\n\nfor _ in range(loop):\n    many, idx = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n\n    watch = idx\n    count = 0\n    while True:\n        maxPri = max(arr)\n        if arr[0] >= maxPri:\n            count+=1\n            if watch == 0:\n                print(count)\n                break\n            else:\n                arr.pop(0)\n        else:\n            arr.append(arr.pop(0))\n\n        if 0 == watch:\n            watch = len(arr)-1\n        else:\n            watch -= 1"}, {"id": 33136507, "name": "\uae40\ud61c\uc218", "x": 9.331262588500977, "y": 21.88227081298828, "label": 0, "group": 138, "code": "t = int(input())\n\nfor i in range(t):\n  n, m = map(int, input().split())\n  docs = list(map(int, input().split()))\n  orderArr = []\n  for j in range(n):\n    orderArr.append(j)\n  \n  cnt = 1\n  while len(docs) != 0:\n    \n    # print(cnt, docs)\n    if max(docs) == docs[0]:\n      if orderArr[0] == m:\n        print(cnt)\n        break\n      else:\n        docs.pop(0)\n        orderArr.pop(0)\n        cnt += 1\n    else:\n      docs.append(docs.pop(0))\n      orderArr.append(orderArr.pop(0))"}, {"id": 9482496, "name": "\uae40\uc608\uc6d0", "x": -6.231255054473877, "y": 12.252754211425781, "label": 0, "group": 138, "code": "def algorithm():\n    nm_list = [int(x) for x in input().split()]\n    num_list = [[int(x),0] for x in input().split()]\n    temp_list = list()\n    num_list[nm_list[1]][1] = 1\n    temp = num_list[nm_list[1]][0]\n    num_list = [x for x in num_list if x[0]>=temp]\n\n    for x in range(nm_list[0]):\n        check = num_list.index(max(num_list))\n        if num_list[check][1]:\n            result = len(num_list[:check]) + len(temp_list) + 1\n            break\n        front_list = num_list[:check]\n        rear_list  = num_list[check:]\n        num_list = rear_list + front_list\n        temp_list.append(num_list[0])\n        num_list.pop(0)\n\n    return result\n\n\nnum = int(input())\nresult_list = list()\nfor x in range(num):\n    result_list.append(algorithm())\nfor x in result_list:\n    print(x)"}, {"id": 20999439, "name": "\uc81c\uac08\uae30\ud6c8", "x": 7.171831130981445, "y": 2.4599764347076416, "label": 0, "group": 138, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 47048181, "name": "\uc804\uc608\uc900", "x": 18.191343307495117, "y": 15.541669845581055, "label": 0, "group": 138, "code": "import sys\ninput=sys.stdin.readline\n\nk=int(input())\nfor i in range(k):\n    n,m=map(int,input().split())\n    data=list(map(int,input().split()))\n    data_q=[[j,l] for j,l in enumerate(data)]\n    data.sort(reverse=True)\n    j=0\n    cnt=1\n    while True:\n        while data_q[0][1]!=data[j]:\n            data_q.append(data_q[0])\n            del data_q[0]\n        j+=1\n        if data_q[0][0]==m:\n            print(cnt)\n            break\n        del data_q[0]\n        cnt+=1\n        "}, {"id": 29915992, "name": "\uac15\ubcc4", "x": 18.67561149597168, "y": -7.478662967681885, "label": 0, "group": 139, "code": "import sys\n\n\ndef solve(inp, idx):\n    inp_ = [(inp[i], i == idx)for i in range(len(inp))]\n    acc = 0\n    while True:\n        v, b = inp_.pop(0)\n        can_print = True\n        for v_, b_ in inp_:\n            if v < v_:\n                can_print = False\n                break\n        if can_print:\n            acc += 1\n            if b:\n                print(acc)\n                return\n        else:\n            inp_.append((v, b))\n\n\nif __name__ == \"__main__\":\n    n = int(sys.stdin.readline().strip())\n    for _ in range(n):\n        idx = int(sys.stdin.readline().strip().split()[1])\n        inp = [int(c) for c in sys.stdin.readline().strip().split()]\n        solve(inp, idx)\n"}, {"id": 38577946, "name": "\uc218\uc560", "x": -14.740492820739746, "y": -14.591221809387207, "label": 0, "group": 139, "code": "import sys\n \ncase = int(sys.stdin.readline())\nfor i in range(case):\n    table = []\n    n, m = map(int,sys.stdin.readline().split())\n    queue = list(map(int,sys.stdin.readline().split()))\n    for i in queue:\n        table.append(i)\n    p = m\n    count = 0\n    while(True):\n        if(max(table) == table[0]):\n            table.pop(0)\n            count += 1\n            if(p == 0):\n                print(count)\n                break\n            else:\n                p -= 1\n                if(p < 0):\n                    p = len(table) - 1\n        else:\n            p -= 1\n            if(p < 0):\n                p = len(table) - 1\n            table.append(table.pop(0))"}, {"id": 15263501, "name": "\uae40\uc18c\ud604", "x": 3.0310561656951904, "y": -3.559074640274048, "label": 0, "group": 139, "code": "from sys import stdin\n\ndata = stdin.read().split(\"\\n\")\n\ndata.pop(0)\n\nfor case in range(int(len(data)/2)):\n    document = int(data.pop(0).split()[1])\n    queue = data.pop(0).split()\n    for i in range(len(queue)):\n        queue[i] = (int(queue[i]), document == i)\n\n    count = 1\n    while True:\n        current = queue.pop(0)\n\n        if len(queue) == 0:\n            print(count)\n            break\n\n        if current[0] != max(queue + [current])[0]:\n            queue.append(current)\n        elif not current[1]:\n            count += 1\n        else:\n            print(count)\n            break"}, {"id": 9986379, "name": "\uc774\ub2e4\ud574", "x": -22.595518112182617, "y": -13.317981719970703, "label": 0, "group": 139, "code": "import sys\n\n\ncase=int(sys.stdin.readline().rstrip())\nfor i in range(case):\n    N, idx = list(map(int,sys.stdin.readline().rstrip().split()))\n    q = list(map(int,sys.stdin.readline().rstrip().split()))\n    start=0\n    result=1\n    Min=min(q)\n    while True:\n        if max(q)>q[idx]:\n            start=q.index(max(q))\n            q[start]=Min-1\n            result+=1\n            q=q[start:]+q[:start]\n            idx+=N-start\n            if idx>=N:\n                idx-=N\n        elif max(q)==q[idx]:\n            for i in range(idx):\n                k=i\n                if k>=N:\n                    k-=N\n                if q[k]==q[idx]:\n                    result+=1\n            break\n    print(result)    \n        "}, {"id": 43399332, "name": "\ub958\ub9cc\uc138", "x": 18.668750762939453, "y": 24.593730926513672, "label": 0, "group": 140, "code": "import sys;iN=lambda:map(int,sys.stdin.readline().split())\nfor _ in range(*iN()):\n N,M=iN();p=list(iN());q=sorted(p);o=1;i=0\n while 1:\n  if p[i]==q[-1]:\n   if i-M:o+=1;q.pop()\n   else:print(o);break\n  i=(i+1)%N"}, {"id": 36060699, "name": "\ubb38\ud64d\uc11d", "x": 27.37148666381836, "y": -0.4830903112888336, "label": 0, "group": 140, "code": "T = int(input())\n\nfor i in range(T):\n    N, M = map(int, input().split())\n    li = list(map(int, input().split()))\n    ans = 1\n\n    while len(li) != 0:\n        ma = max(li)\n        if ma == li[0]:\n            if M == 0:\n                break\n            else:\n                del li[0]\n                ans += 1\n        else:\n            li.append(li.pop(0))\n            if M == 0:\n                M = len(li)\n        M -= 1\n\n    print(ans)\n"}, {"id": 24816478, "name": "\uc774\uc815\uc6b1", "x": 20.635940551757812, "y": 7.037405967712402, "label": 0, "group": 140, "code": "T = int(input())\n\nfor i in range(T):\n\n    N, D = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    target = [0]*N\n    target[D] = 1\n\n\n    cnt = 1\n    while True:\n        if arr[0] == max(arr):\n            if target[0] == 1:\n                print(cnt)\n                break\n            elif target[0] == 0:\n                arr.pop(0)\n                target.pop(0)\n                cnt += 1\n        else:\n            arr.append(arr.pop(0))\n            target.append(target.pop(0))"}, {"id": 23962566, "name": "\uc5fc\uc815\uc544", "x": 18.827808380126953, "y": 7.078649520874023, "label": 0, "group": 140, "code": "test_case=int(input())\n\nfor _ in range(test_case):\n    n, m = list(map(int, input().split()))\n    imp=list(map(int, input().split()))\n    lst=list(range(len(imp)))\n    lst[m]='a'\n\n    count=0\n\n    while True:\n        \n        if imp[0]==max(imp):\n            count+=1\n            \n            if lst[0]=='a':\n                print(count)\n                break\n            else:\n                imp.pop(0)\n                lst.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            lst.append(lst.pop(0))"}, {"id": 7553695, "name": "\uc0ac\uacf5\ub3c4\ud604", "x": -15.08126449584961, "y": -20.865509033203125, "label": 0, "group": 141, "code": "T = int(input())\n\nfor x in range(0,T):\n    N, M = map(int, input().split())\n    printer_queue = list(map(int,input().split()))\n    ct = 0\n    while True:\n        k = 0\n        for m in printer_queue:\n            if m > printer_queue[0]:\n                k = 1\n                break\n        if k:\n            printer_queue.append(printer_queue[0])\n            del printer_queue[0]\n            if M == 0:\n                M = len(printer_queue)-1\n            else:\n                M -= 1\n        else:\n            if M == 0:\n                ct += 1\n                print(ct)\n                break\n            else:\n                ct += 1\n                del printer_queue[0]\n                M -= 1"}, {"id": 42518353, "name": "\uc131\uc9c4\ud558", "x": -5.223052978515625, "y": -0.6579862833023071, "label": 0, "group": 141, "code": "import sys\n\nT=int(sys.stdin.readline())\n\nfor i in range(T):\n    N, M = map(int,sys.stdin.readline().split())\n    num=list(map(int,sys.stdin.readline().split()))\n    a=[0 for j in range(N)]\n    a[M]=1\n    \n    count =0\n    \n    while True:\n        if num[0]==max(num):\n            count+=1\n            if a[0]==1:\n                print(count)\n                break\n            else:\n                num.pop(0)\n                a.pop(0)\n        else:\n            num.append(num.pop(0))\n            a.append(a.pop(0))\n            \n            "}, {"id": 39175480, "name": "\uc1a1\uc6a9\uc2dd", "x": -18.405733108520508, "y": -12.301918983459473, "label": 0, "group": 141, "code": "import sys\n\nT = int(sys.stdin.readline())\n\nfor i in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    li = list(map(int, sys.stdin.readline().split()))\n    dic = {}\n    dic[1] = 0\n    dic[2] = 0\n    dic[3] = 0\n    dic[4] = 0\n    dic[5] = 0\n    dic[6] = 0\n    dic[7] = 0\n    dic[8] = 0\n    dic[9] = 0\n    for n in li:\n        dic[n] += 1\n    myP = li[M]\n    count = 0\n    idx = 0\n    for j in range(10-myP):\n        while (dic[9-j] > 0):\n            if (li[idx] == 9-j):\n                count += 1\n                dic[9-j] -= 1\n                if (idx == M):\n                    break\n            idx += 1\n            if (idx == N):\n                idx = 0\n    print(count)"}, {"id": 36091558, "name": "\ub0a8\uad81\ubbfc", "x": 24.466073989868164, "y": 38.80303192138672, "label": 0, "group": 141, "code": "tmp=int(input())\nfor i in range(tmp):\n\tn,m=map(int, input().split())\n\tarr=list(map(int,input().split()))\n\tcheck=[0 for i in range(n)]\n\tcheck[m]=1\n\trank=0\n\twhile True:\n\t\tif arr[0]==max(arr):\n\t\t\trank+=1\n\t\t\tif check[0]==1:\n\t\t\t\tprint(rank)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tdel check[0]\n\t\t\t\tdel arr[0]\n\t\telse:\n\t\t\tarr.append(arr[0])\n\t\t\tcheck.append(check[0])\n\t\t\tdel check[0]\n\t\t\tdel arr[0]\n"}, {"id": 27713761, "name": "\uc7a5\ucc3d\ud6c8", "x": 24.0292911529541, "y": 11.367093086242676, "label": 0, "group": 142, "code": "n = int(input())\nresult = []\n\nfor _ in range(n):\n    num, index = list(map(int, input().split(' ')))\n    series = list(map(int, input().split(' ')))\n    series_b = list(enumerate(series))\n    i = 0\n    while series:\n        if series[0] != max(series):\n            series.append(series.pop(0))\n            series_b.append(series_b.pop(i))\n        else:\n            del(series[0])\n            i += 1\n            \n    for i in range(len(series_b)):\n        if series_b[i][0] == index:\n            result.append(i+1)\n\nfor r in result:\n    print(r)"}, {"id": 17969843, "name": "\uc9c0\uc9c4\ud76c", "x": 6.134481430053711, "y": 14.70709228515625, "label": 0, "group": 142, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    info = list(map(int, input().strip().split()))\n    info = [[x, idx] for idx, x in enumerate(info)]\n    ans = 0\n    while True:\n        if info[0][0] == max(info)[0]:\n            ans += 1\n            if info[0][1] == m:\n                print(ans)\n                break\n            else:\n                info = info[1:]\n        else:\n            info = info[1:] + info[:1]\n\n"}, {"id": 36006124, "name": "\uace0\uc724", "x": -15.40824031829834, "y": -17.39720916748047, "label": 0, "group": 142, "code": "import sys\nt = int(input())\nfor k in range(t):\n    n,m = map(int,sys.stdin.readline().strip().split(\" \"))\n    d = {}\n    l = list(map(int,sys.stdin.readline().strip().split(\" \")))\n    l2 = []\n    for i in range(len(l)):\n        d[i] = l[i]\n        l2.append(i)\n  \n    c = 0\n    a = 0\n    while(1):\n        if d[l2[0]] == max(d.values()):\n            \n            if l2[0] == m: \n                a = a+1\n                c =1\n                \n            else:\n                del d[l2[0]]\n                del l2[0]\n                a = a+1\n        else:\n            s = l2[0]\n            del l2[0]\n            l2.append(s)\n        if c == 1:\n            break\n                \n\n    print(a)"}, {"id": 26711126, "name": "\ud5c8\ud615\uae30", "x": -7.328658580780029, "y": -0.9965956211090088, "label": 0, "group": 142, "code": "import sys\nt=int(sys.stdin.readline())\nfor i in range(t):\n    n, m=map(int, sys.stdin.readline().split())\n    l=list(map(int, sys.stdin.readline().split()))\n    ped=0\n    while 1:\n        if m==0 and l[0]==max(l):\n            print(ped+1)\n            break\n        elif m==0 and l[0]!=max(l):\n            l.append(l[0])\n            del l[0]\n            m=len(l)-1\n        elif l[0]==max(l):\n            del l[0]\n            ped+=1\n            m-=1\n        else:\n            l.append(l[0])\n            del l[0]\n            m-=1\n\n"}, {"id": 23364020, "name": "\ubc15\ud615\ud638", "x": 19.213268280029297, "y": 7.404932022094727, "label": 0, "group": 143, "code": "tc=int(input())\nfor i in range(tc):\n    n,m=list(map(int, input().split()))\n    arr=list(map(int, input().split()))\n\n    idx=list(range(len(arr)))\n    idx[m]='target'\n    order=0\n    while True:\n        if arr[0]==max(arr):\n            order+=1\n            \n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                arr.pop(0)\n                idx.pop(0)\n        else:\n            arr.append(arr.pop(0))\n            idx.append(idx.pop(0))\n    "}, {"id": 33416892, "name": "\uc774\uc900\uae30", "x": 23.455699920654297, "y": -9.760034561157227, "label": 0, "group": 143, "code": "import sys\n\nnum = int(input())\n\nfor i in range(num):\n    N, M = map(int, sys.stdin.readline().split())\n    num_list = list(map(int, sys.stdin.readline().split()))\n    count = 1\n    tmp = max(num_list)\n    target = num_list[M]\n    max_num_index = num_list.index(tmp)\n    while num_list:\n        if max_num_index == M:\n            break\n        else:\n            count += 1\n            num_list[max_num_index] = 0\n            if max(num_list[max_num_index:]) >= max(num_list):\n                tmp = max(num_list[max_num_index:])\n                while tmp != num_list[max_num_index]:\n                    max_num_index += 1\n            else:\n                tmp = max(num_list)\n                max_num_index = num_list.index(tmp)\n    print(count)"}, {"id": 20836192, "name": "\uc724\uae30\ud558", "x": -4.572691440582275, "y": -12.456131935119629, "label": 0, "group": 143, "code": "tc = int(input())\nfor i in range(tc):\n    N, M = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(N)]\n    s_[M] = 1\n    cnt = 0\n\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]\n"}, {"id": 31964842, "name": "\uc804\uc18c\uc740", "x": -8.693486213684082, "y": -13.623038291931152, "label": 0, "group": 143, "code": "import sys\ninput = sys.stdin.readline\n\nif __name__=='__main__':\n  tc = int(input())\n\n  for i in range(tc):\n    count = 1\n    printer = True\n    text_totalNum, text_index = map(int, input().split())\n    text_list = list(map(int, input().split()))\n\n    maxNum = max(text_list)\n\n    while printer:\n      if text_list[0] == maxNum and text_index == 0:\n        printer = False\n      elif text_list[0] == maxNum:\n        text_list.pop(0)\n        maxNum = max(text_list)\n        text_totalNum -= 1\n        text_index -= 1\n        count += 1\n      elif text_list[0] != maxNum:\n        if text_index == 0:\n          text_list.append(text_list.pop(0))\n          text_index = text_totalNum - 1\n        else:\n          text_list.append(text_list.pop(0))\n          text_index -= 1\n\n    print(count)"}, {"id": 33431258, "name": "\uac15\uc608\uc6d0", "x": -20.786752700805664, "y": 2.374833822250366, "label": 0, "group": 144, "code": "# 1966 - \ud504\ub9b0\ud130 \ud050\n\ndef getOrder(paper, userLoc, userList):\n    location = userLoc\n    importancy = userList\n    index = 0\n    order = 1\n\n    while True:\n        if max(importancy) != importancy[index]:\n            poped = importancy.pop(0)\n            importancy.append(poped)\n            if location > 0:\n                location -= 1\n            else:\n                location = len(importancy)-1\n        else:\n            # \ucd9c\ub825\n            if index == location:\n                return order\n            else:\n                importancy.pop(0)\n                location -= 1\n                order += 1\n\n\ntastCase = int(input())\nresult = []\n\nfor t in range(tastCase):\n    paper, userLoc = map(int, input().split())\n    userList = list(map(int, input().split()))\n    result.append(getOrder(paper, userLoc, userList))\n\nfor i in range(tastCase):\n    print(result[i])\n"}, {"id": 10791639, "name": "\uc624\uc9c0\uc740", "x": 32.0687370300293, "y": 6.731103897094727, "label": 0, "group": 144, "code": "def printer_queue(n,m,values):\n    count, s = 0, [(x,i) for i,x in enumerate(values)]\n    while s:\n        max_value_idx = s.index(max(s, key=lambda x: x[0]))\n        s = s[max_value_idx+1:] + s[:max_value_idx+1]\n        printed_paper = s.pop()\n        count += 1\n        if printed_paper[1] == m:\n            break\n    return count\n\n\nif __name__ == '__main__':\n    from sys import stdin\n    for _ in range(int(stdin.readline().rstrip())):\n        n, m = [int(x) for x in stdin.readline().rstrip().split()]\n        values = [int(x) for x in stdin.readline().rstrip().split()]\n        print(printer_queue(n,m,values))\n"}, {"id": 22197603, "name": "\uc774\ub2e4\uc778", "x": -23.24432945251465, "y": -11.723189353942871, "label": 0, "group": 144, "code": "# 1966\nimport sys\ntestCase = int(input())\n\nfor _ in range( testCase ):\n    priority = {key : [] for key in range(9, 0, -1)}\n    \n    N, M = list(map(int, input().split()))\n    if N < 1:\n        print( 0 )\n        continue\n    \n    datas = list(map(int, input().split()))\n    target = datas[M]\n    for i, data in enumerate(datas):\n        priority[data].append( i )\n    \n    topPriority = max(datas)\n\n    index = priority[ topPriority ][ 0 ] \n    \n    num = 0\n    for key in range( topPriority, 0, -1 ):\n        if len( priority[key] ) == 0:\n            continue\n        elif key == target:\n            break\n        else:\n            num += len( priority[key] )\n            \n            x = [i for i in priority[key] if i<index]\n            if x == []:\n                index = priority[key][-1]\n            else:\n                index = x[-1]\n    \n    x = [i for i in priority[key] if i<index]\n    y = [i for i in priority[key] if i>=index]\n    if index > M:\n        num += len(y)\n        num += x.index( M ) + 1\n    else:\n        num += y.index( M ) + 1\n        \n    print( num )"}, {"id": 28176096, "name": "\uc11c\uc0c1\ucca0", "x": 5.738649845123291, "y": 24.28651237487793, "label": 0, "group": 144, "code": "from sys import stdin\n\ncnt = int(stdin.readline())\n\nfor _ in range(cnt):\n  result = 1\n  docCnt, idx = map(int, stdin.readline().split())\n  priorQueue = stdin.readline().split()[0:docCnt]\n\n  idxQueue = []\n  for i in range(docCnt):\n    idxQueue.append(i)\n  \n  while idxQueue:\n    if priorQueue[0] < max(priorQueue):\n      priorQueue.append(priorQueue[0])\n      del priorQueue[0]\n      idxQueue.append(idxQueue[0])\n      del idxQueue[0]\n    else:\n      if idxQueue[0] == idx:\n        print(result)\n        break\n      result += 1\n      del priorQueue[0]\n      del idxQueue[0]"}, {"id": 18605650, "name": "\uc5c4\uc815\ud654 ", "x": -10.37810230255127, "y": -20.708683013916016, "label": 0, "group": 145, "code": "case = int(input())\nfor i in range(case):\n    n, a = map(int, input().split())\n    ind = [x for x in range(n)]\n    check = ind[a]\n    lst = [int(x) for x in input().split()]\n    count = 0\n    while(True):\n        flag = True\n        now1 = lst[0]\n        now2 = ind[0]\n        lst.remove(now1)\n        ind.remove(now2)\n        if len(lst) != 0:\n            for j in lst:\n                if (now1 < j):\n                    lst.append(now1)\n                    ind.append(now2)\n                    flag = False\n                    break\n        if (flag):\n            count += 1\n            if check == now2:\n                print(count)\n                break\n"}, {"id": 38525302, "name": "\uc628\uc8fc\uc644", "x": -22.222549438476562, "y": 21.64471435546875, "label": 0, "group": 145, "code": "##\uadf8\ub0e5 \ud050\uc368\uc11c \ud558\ub294\uac8c \ube60\ub974\uaca0\ub2e4 \ub9c8\uc9c0\ub9c9\uc73c\ub85c \ub9cc\ub098\ub294\uac8c \uc7e4\uac00 \uc544\ub2d0\uc218\ub3c4 \uc788\ub098\nT = int(input())\nfor _ in range(T):\n    N,M = map(int,input().split()) #\uac1c\uc218, \ud0c0\uac9f\n    q = [int(i) for i in input().split()]\n    importance = q[M]\n    biggerimportance = q[M]+1\n    cnt = 1\n    s = set(q)\n    pos = N\n    \n    if max(s) > importance:\n\n        while max(s) > importance:\n            biggest = max(s)\n            cnt += q.count(biggest)\n            for i in range(1,pos+1):\n                if q[:pos][-i] == biggest:\n                    pos = pos - i\n                    s.remove(biggest)\n                    break\n            else: #index 0\uae4c\uc9c0 \uc654\ub294\ub370 biggest\uac00 \uc5c6\uc74c >> \ub9e8\ub05d\uc5d0\uc11c\ubd80\ud130 \ub2e4\uc2dc \ucc3e\uc544\uc57c\ud568\n                for i in range(1,N+1): # biggest\uac00 \uc874\uc7ac\ub294 \ud558\ub2c8\uae4c \uadf8\ub0e5 \ubc94\uc704 \uc800\ub807\uac8c \uc7a1\uc74c\n                    if q[-i] == biggest:\n                        pos = N - i\n                        s.remove(biggest)\n                        break\n    else: pos = 0 # max(s) == importance \ub77c\uba74 \uadf8\ub0e5 \ucc98\uc74c\ubd80\ud130 \ucc3e\uc73c\uba74 \ub428\n    \n    if pos <= M:\n        for i in range(pos,M):\n            if q[i] == importance: cnt += 1\n    else:\n        for i in q[pos:]:\n            if i == importance: cnt += 1\n        for i in q[:M]:\n            if i == importance: cnt += 1\n    print(cnt)"}, {"id": 26985447, "name": "\uc815\uc8fc\ubbf8", "x": 15.6597261428833, "y": 9.480973243713379, "label": 0, "group": 145, "code": "for _ in range(int(input())):\n    N, M = map(int, input().split())\n    arr = list(map(int, input().split()))\n    cache = [0]*N\n    cache[M] = 1\n    cnt = 0\n    while True:\n        if arr[0] == max(arr):\n            cnt += 1\n            if cache[0] == 1:\n                print(cnt)\n                break\n            else:\n                del arr[0]\n                del cache[0]\n        else:\n            arr.append(arr[0])\n            del arr[0]\n            cache.append(cache[0])\n            del cache[0]\n"}, {"id": 26010750, "name": "\ucd5c\uc9c0\uc6b0", "x": 2.8406057357788086, "y": 6.309498310089111, "label": 0, "group": 145, "code": "from sys import stdin\n#Test case\ntest_case = int(stdin.readline())\n#result\nresult = []\n#printer\nfor i in range(test_case):\n    counter = 0\n    #N,M\n    N, M = list(map(int,stdin.readline().split(' ')))\n    #queue\n    queue = list(map(int,stdin.readline().split(' ')))\n    index = list(range(N))\n    #Max distinguish\n    while True:\n        if queue[0] == max(queue):\n            counter += 1\n            if index[0] == M:\n                result.append(counter)\n                break\n            else:\n                queue.pop(0)\n                index.pop(0)\n        else:\n            queue.append(queue.pop(0))\n            index.append(index.pop(0))\n#submit\nprint('\\n'.join(map(str,result)))\n"}, {"id": 20910112, "name": "\ubc31\uc778\uc6c5", "x": 24.39898109436035, "y": -8.051501274108887, "label": 0, "group": 146, "code": "a = int(input())\nfor i in range(a):\n    n, target = map(int, input().split())\n    Q = (list(map(int, input().split())))\n    count = 0\n    while True:\n        if max(Q) > Q[0]:\n            p = Q.pop(0)\n            Q.append(p)\n            target = (target - 1) % len(Q)\n        else:\n            count += 1\n            if target == 0:\n                break\n            Q.pop(0)\n            target -= 1\n    print(count)"}, {"id": 27221091, "name": "\ucd5c\uc218\uacbd", "x": 2.7458691596984863, "y": -2.441197156906128, "label": 0, "group": 146, "code": "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor i in range(t):\n    n,m=map(int,input().split())\n    num=list(map(int,input().split()))\n    idx=[0 for _ in range(n)]\n    idx[m]=1\n    cnt=0\n    while True:\n        if num[0]==max(num):\n            cnt+=1\n            if idx[0]==1:\n                print(cnt)\n                break\n            else:\n                idx.pop(0)\n                num.pop(0)\n        else:\n            idx.append(idx.pop(0))\n            num.append(num.pop(0))"}, {"id": 11138582, "name": "\uc1a1\uc885\ud638", "x": 6.41128396987915, "y": 3.342505931854248, "label": 0, "group": 146, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))\n"}, {"id": 20857309, "name": "\uc774\uc0c1\uc724", "x": -35.373348236083984, "y": -4.2638773918151855, "label": 0, "group": 146, "code": "import sys\nread = sys.stdin.readline\n\n\nclass queue:\n    def __init__(self):\n        self.arr = []\n        self.count = 0\n    \n    def push(self, num):\n        self.arr.append(num)\n    \n    def pop(self):\n        if self.count < len(self.arr):\n            self.count += 1\n            return self.arr[self.count -1]\n        else:\n            return False\n    \n    def size(self):\n        return len(self.arr) - self.count\n    \n    def reset(self):\n        self.arr = []\n        self.count = 0\n    \n    def maxq(self):\n        return max(self.arr[self.count:])\n\nnum = int(read())    \nque = queue()\nfor _ in range(num):\n    n, pos = map(int, read().split())\n    arr = list(map(int, read().split()))\n    que.reset()\n    for i in arr:\n        que.push(i)\n    count = 0\n    while(1):\n        if que.maxq() == que.arr[que.count]:\n            count += 1\n            if pos == que.count:\n                print(count)\n                break\n            que.pop()\n        else:\n            if pos == que.count:\n                pos = que.count + que.size()\n            que.push(que.pop())"}, {"id": 7985516, "name": "\uc548\uc7ac\uc6b1", "x": -27.315359115600586, "y": -9.31071662902832, "label": 0, "group": 147, "code": "# coding=<utf-8>\nclass paper:\n    def __init__(self,important):\n        self.seq = 0\n        self.important = important\n    def setPaper(self,seq,important):\n        self.seq =seq\n        self.important =important\n        \ndef remove_insert(list):\n    temp = list.pop(0)\n    list.append(temp)\n    #printList(list)\n\ndef findMax(list,present):\n    for i in list: \n        if(present.important < i.important ):\n            return True\n    return False\n\ndef printList(list):\n    for i in range(0,len(list)):\n        print(list[i].important)\n    \n    \n    \n\ntestCase = input()\nmaxNum  =0 \nlist = [] \n\nfor t in range(0,int(testCase)):\n    count = 0\n\n    while(len(list) > 0):\n        list.pop()\n    \n    n,m= input().split()\n    str = input().split()\n    pointer = \"\"\n    \n    for i in str:\n        p =  paper(i)\n        list.append(p)\n     \n    pointer = list[int(m)]\n    \n    #print(\"start\" , pointer.important)\n    #@printList(list)\n    \n    while(len(list) > 0):\n        present = list[0]    \n        #print(\" now Present \" ,present.important)\n        \n        if ( findMax(list, present) ) : \n            remove_insert(list)\n            #print(\"remove insert\")\n        else:\n           # print(\"list pop()\")\n            count+=1\n            if( present == pointer ):\n                print(count)\n                break \n            list.pop(0)            "}, {"id": 21158588, "name": "\uc7a5\ub3d9\uac74", "x": 14.175728797912598, "y": 9.676124572753906, "label": 0, "group": 147, "code": "T=int(input())\nfor i in range(T):\n    queue=[]\n    cnt=0\n    N,M=map(int,input().split())\n    queue=input().split()\n    ans=[0]*N\n    ans[M]=1\n    while(True):\n        if queue.index(max(queue)) == 0:\n            del queue[0]\n            cnt += 1\n            if ans[0] == 1:\n                print(cnt)\n                break\n            else:\n                del ans[0]\n\n        else:\n            queue.append(queue[0])\n            del queue[0]\n            ans.append(ans[0])\n            del ans[0]\n"}, {"id": 35296996, "name": "\uc870\ud604\uc7ac", "x": 25.418851852416992, "y": 9.3482084274292, "label": 0, "group": 147, "code": "n = int(input())\n\nresult = []\n\nfor i in range(n):\n    N, M = list(map(int, input().split()))\n    C = list(map(int, input().split()))\n\n    queue = [(C[i], i) for i in range(len(C))]\n\n    count = 0\n    while True:\n        tmp = queue.pop(0)\n        if tmp[0] == max(C):\n            count += 1\n            if tmp[1] == M:\n                break\n            C.remove(tmp[0])\n        else:\n            queue.append(tmp)\n\n    result.append(count)\n\nfor r in result:\n    print(r)"}, {"id": 38688077, "name": "\uc5d0\uc774\ubbf8", "x": -9.654255867004395, "y": -11.347590446472168, "label": 0, "group": 147, "code": "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nfor __ in range(n):\n    num, idx = map(int, input().split())\n    n_list = list(map(int, input().split()))\n    target_idx = list(range(num))\n    target_idx[idx] = \"!!!\"\n    count = 0\n    while True:\n        if n_list[0] == max(n_list):\n            count +=1\n            if target_idx[0] == \"!!!\":\n                print(count)\n                break\n            else:\n                n_list.pop(0)\n                target_idx.pop(0)\n        else:\n            n_list.append(n_list[0])\n            n_list.pop(0)\n            target_idx.append(target_idx[0])\n            target_idx.pop(0)"}, {"id": 29022448, "name": "\uc608\ubbfc\ud61c", "x": 9.017324447631836, "y": 10.595161437988281, "label": 0, "group": 148, "code": "\ndef check(n, interest, rank):\n    stack = []\n    for i in range(n):\n        stack.append([i, rank[i]])\n\n    rank.sort()\n    rank.reverse()\n\n    answer = 0\n    while True:\n        if rank[0] > stack[0][1]:  # rank \ube44\uad50\n            stack.append(stack.pop(0))\n        else:\n            answer = answer + 1\n            if stack[0][0] == interest:\n                break\n            else:\n                rank.pop(0)\n                stack.pop(0)\n\n    print(answer)\n\n\n\nn = int(input())\n\nfor _ in range(n):\n    n, interest = list(map(int, input().split()))\n    rank = list(map(int, input().split()))\n    check(n,interest,rank)"}, {"id": 26474765, "name": "\ud0c1\ucc44\uc601", "x": 20.233707427978516, "y": 12.359078407287598, "label": 0, "group": 148, "code": "cases=int(input())\nanswer=[]\nfor i in range(cases):\n    fst=input().split()\n    leng = int(fst[0])\n    target= int(fst[1])\n    arr=list(map(int,input().split()))\n    count = 0\n    curs=0\n    while True:\n        if arr[curs]==max(arr):\n            count+=1\n            if curs==target:\n                answer.append(count)\n                break\n        else:\n            arr.append(arr[curs])\n            if curs==target:\n                target=(len(arr)-1)\n        arr.pop(0)\n        target -=1\nfor k in answer:\n    print(k)  "}, {"id": 22741950, "name": "\uc190\ud604\uc6c5", "x": -5.897315502166748, "y": -3.6092820167541504, "label": 0, "group": 148, "code": "import sys\ninput = sys.stdin.readline\ntest = int(input())\nfor _  in range(test):\n    a, b = map(int, input().split())\n    imp = list(map(int, input().split()))\n    interested = [0]*a\n    interested[b] = 1\n    ord = 0\n    while True:\n        if imp[0] == max(imp):\n            ord += 1\n            if interested[0]:\n                print(ord)\n                break\n            else:\n                del interested[0]\n                del imp[0]\n        else:\n            interested.append(interested[0])\n            imp.append(imp[0])\n            del interested[0]\n            del imp[0]\n    "}, {"id": 27350937, "name": "\ud5c8\ud615\uc6d0", "x": 24.23059844970703, "y": 17.40300178527832, "label": 0, "group": 148, "code": "case_num=int(input())\n\nfor i in range(case_num):\n    n,m=map(int,input().split())\n    w =list(map(int,input().split()))\n    result=0\n    cur_pos=m\n    while(len(w)!=0):\n        max_val=max(w)\n        while(w[0]!=max_val):\n            if(cur_pos==0):\n                cur_pos=len(w)\n            cur_pos-=1\n            a = w.pop(0)\n            w.append(a)\n        w.pop(0)\n        result+=1\n        if cur_pos==0:\n            print(result)\n            break\n        cur_pos-=1\n"}, {"id": 7808286, "name": "\ud5c8\uc815\ud0dc", "x": 10.204017639160156, "y": 25.54483413696289, "label": 0, "group": 149, "code": "import sys\nI = lambda : map(int, sys.stdin.readline().split())\nfor _ in range(int(sys.stdin.readline())):\n  N,M = I();\n  Q = list(I())\n  Imp= Q[:]\n  Imp.sort(reverse=True)\n\n  Order = 0;\n  while True:\n    l = len(Q)\n    front = Q.pop(0);\n\n    if(front!=Imp[0]): \n      Q+=[front];\n      M-=1\n      M%=l\n    else:\n      Order +=1;\n      if(M == 0): \n        print(Order)\n        break;\n      M-=1\n      Imp.pop(0)"}, {"id": 10767999, "name": "\ud669\uc815\ubbfc", "x": -25.284061431884766, "y": -16.937973022460938, "label": 0, "group": 149, "code": "n = int(input())\n\nfor _ in range(n):\n    n, m = map(int, input().split())\n    q = []\n    q = list(map(int, input().split()))\n    sorted_q = q.copy()\n    sorted_q.sort(reverse=True)\n\n    ans = 0\n    idx = m\n    while q:\n        if q[0] == sorted_q[0]:\n            sorted_q.pop(0)\n            q.pop(0)\n            ans += 1\n            if idx == 0:\n                break\n            idx -= 1\n        else:\n            b = q.pop(0)\n            q.append(b)\n            idx -= 1\n            if idx < 0:\n                idx = len(q) - 1\n    print(ans)\n\n        "}, {"id": 47984214, "name": "\ub178\ucc44\uc740", "x": -6.4159345626831055, "y": -11.896617889404297, "label": 0, "group": 149, "code": "t = int(input())\nfor i in range(t) :\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s1 = [0 for i in range(n)]\n    s1[m] = 1\n    cnt = 0\n    \n    while True :\n        if s[0] == max(s) :\n            cnt += 1\n            if s1[0] == 1 :\n                print(cnt)\n                break\n            else :\n                del s[0]\n                del s1[0]\n        else :\n            s.append(s[0])\n            del s[0]\n            s1.append(s1[0])\n            del s1[0]"}, {"id": 47692319, "name": "\ud669\uc9c4\uc544", "x": 3.987283229827881, "y": -21.11136245727539, "label": 0, "group": 149, "code": "TC = int(input())\n\nfor tc in range(TC):\n    a, b = map(int, input().split())\n    arr = list(map(int, input().split()))\n    count = 0\n    while arr != []:\n        if b == 0 and arr[b] == max(arr):\n            count += 1\n            break\n        elif arr[0] == max(arr):\n            arr.pop(0)\n            count += 1\n            b -= 1         \n        else:\n            arr.append(arr.pop(0))\n            if b == 0:\n                b = len(arr)-1\n            else:\n                b -= 1\n    print(count)"}, {"id": 7179091, "name": "\uad8c\uc9c0\uc6a9", "x": 2.5715625286102295, "y": -6.483536720275879, "label": 0, "group": 150, "code": "cases = []\nnCase = int(input())\nfor _ in range(nCase):\n    N, M = map(int, input().split(' '))\n    queue = list(map(int, input().split(' ')))\n    cases.append([N, M, queue])\nfor i in cases:\n    M = i[1]\n    queue = i[2]\n    Mprint = 1\n    printed = False\n    while printed == False:\n        head = queue[0]\n        if head >= max(queue):\n            if M == 0:\n                printed = True\n            else:\n                M = (M + len(queue) - 1) % len(queue)\n                Mprint += 1\n                queue.pop(0)\n        else:\n            M = (M + len(queue) - 1) % len(queue)\n            queue.append(queue.pop(0))\n    print(Mprint)\n"}, {"id": 16265129, "name": "\uc11c\uad11\uc77c", "x": 3.148292303085327, "y": -10.624725341796875, "label": 0, "group": 150, "code": "import sys\n\nfor i in range(int(input())):\n    M, N = map(int, sys.stdin.readline().split())\n    Q = []\n    rank = list(map(int, sys.stdin.readline().split()))\n    for j in range(len(rank)):\n        Q.append((rank[j], j))\n\n    count = 1\n    while len(Q) != 0:\n        temp = True\n        for j in range(1, len(Q)):\n            if Q[0][0] < Q[j][0]:\n                Q.append(Q.pop(0))\n                temp = False\n                break\n        if temp:\n            if Q.pop(0)[1] == N:\n                print(count)\n                break\n            count += 1\n\n\n"}, {"id": 41787131, "name": "\ucc44\uc815\uc548", "x": 22.862194061279297, "y": 40.082969665527344, "label": 0, "group": 150, "code": "from sys import stdin\ninput = stdin.readline\n\ndef main():\n\tfor _ in range(int(input())):\n\t\tn, m = map(int, input().split())\n\t\tdocs = [*map(int, input().split())]\n\t\tseq = [*range(n)]\n\t\tcount = 0\n\t\twhile docs:\n\t\t\tif (len(docs) > 1) and (docs[0] < max(docs[1:])):\n\t\t\t\tdocs.append(docs.pop(0))\n\t\t\t\tseq.append(seq.pop(0))\n\t\t\telse:\n\t\t\t\tcount += 1\n\t\t\t\tdocs.pop(0)\n\t\t\t\tif seq.pop(0) == m:\n\t\t\t\t\tbreak\n\t\tprint(count)\n\t\t\nmain()"}, {"id": 15459419, "name": "\ubcf5\uc885\uc5f0", "x": -18.577850341796875, "y": 18.332075119018555, "label": 0, "group": 150, "code": "a=int(input())\nfor i in range(0,a):\n    b=list(map(int,input().split(\" \")))\n    queue=list(map(int,input().split(\" \")))\n    whatfind=b[1] #\ucc3e\uace0\uc790\ud558\ub294 \ud56d\ubaa9 index\n    i=1\n    while True:\n        if(queue[0] == max(queue)):\n            if(whatfind == 0):\n                \n                break\n            else: #\uc55e\uc758 \uac12 \uc0ad\uc81c(\ud504\ub9b0\ud2b8)\n                del queue[0]\n                i+=1\n                whatfind-=1\n        else: #\ub4a4\ub85c \uc774\ub3d9\n            tmp = queue[0]\n            del queue[0]\n            queue.append(tmp)\n            if(whatfind == 0):\n                whatfind=len(queue)-1\n            else:\n                whatfind-=1\n    print(i)"}, {"id": 5532188, "name": "\uc591\uc7ac\uc740", "x": -23.6569766998291, "y": -13.541987419128418, "label": 0, "group": 151, "code": "for _ in range(int(input())):\n    N,M = map(int,input().split())\n    Ns = list(map(int,input().split()))\n    s,e = 0,N-1\n    i = 0\n    visit = [0]*N\n    s2 = 0\n    Ns2 = Ns[:]\n    Ns2.sort()\n    Ns2 = Ns2[::-1]\n    while(s != e):\n        if(Ns[s] != Ns2[s2]):\n            e = (e+1)%N\n            Ns[e] = Ns[s]\n            s = (s+1)%N  \n            i = (i+1)%N\n            while(visit[i]):\n                i = (i+1)%N\n        else:\n            if i == M:\n                break\n            s= (s+1)%N\n            s2 = s2+1\n            visit[i] = 1\n            while(visit[i]):\n                i = (i+1)%N\n    print(s2+1)"}, {"id": 46096258, "name": "\uae40\ud6a8\uc9c4", "x": 22.412296295166016, "y": 14.996834754943848, "label": 0, "group": 151, "code": "import sys\n\ncase = int(input())\n\ndef sol() :\n    n, m = map(int, sys.stdin.readline().split())\n    docu = list(map(int, sys.stdin.readline().split()))\n\n    turn = 0\n    ind = -1\n    while True :\n        ind = (ind + 1) % n\n        if docu[ind] == max(docu) :\n            docu[ind] = 0\n            turn += 1\n            if ind == m :\n                return turn\n\nsolution = []\n\nfor i in range(case) :\n    solution.append(sol())\n\nfor i in range(case) :\n    print(solution[i])"}, {"id": 15490154, "name": "\ub0a8\uc9c0\ud604", "x": 6.908392429351807, "y": 0.35348233580589294, "label": 0, "group": 151, "code": "n = int(input())\nfor i in range(n):\n    arr_size, index = map(int, input().split())\n    queue = list(map(int, input().split()))\n    check = [0 for j in range(arr_size)]\n    check[index] = 'T'\n\n    count = 0\n    while 1:\n        if queue[0] == max(queue):\n            count+=1\n            if check[0] == 'T':\n                print(count)\n                break\n            else:\n                queue.pop(0)\n                check.pop(0)\n        else:\n            queue.append(queue.pop(0))\n            check.append(check.pop(0))"}, {"id": 34068534, "name": "\ubcf5\uc724\uc120", "x": -8.99875259399414, "y": -7.288407802581787, "label": 0, "group": 151, "code": "from sys import stdin\nT = int(stdin.readline())\nfor _ in range(T):\n    ans = 0\n    N, M = map(int, stdin.readline().rstrip().split())\n    pr = list(map(int, stdin.readline().rstrip().split()))\n    left_nums = [0] * 10\n    l = 9\n    for n in pr:\n        left_nums[n] += 1\n\n    e = [[p, i] for i, p in enumerate(pr)]\n\n    while left_nums[-1] == 0:\n        left_nums.pop()\n        l -= 1\n\n    while e[0][0] != l:\n        e.append(e[0])\n        del e[0]\n\n    pop_num = e[0][1]\n    left_nums[e[0][0]] -= 1\n    ans += 1\n    del e[0]\n\n    while pop_num != M:\n        while left_nums[-1] == 0:\n            left_nums.pop()\n            l -= 1\n\n        while e[0][0] != l:\n            e.append(e[0])\n            del e[0]\n        pop_num = e[0][1]\n\n        left_nums[e[0][0]] -= 1\n        del e[0]\n        ans += 1\n    print(ans)\n"}, {"id": 29471061, "name": "\uc784\ud604\uc2dd", "x": 7.560751438140869, "y": -7.631968975067139, "label": 0, "group": 152, "code": "import sys\ninput = sys.stdin.readline\n\ntestcase = int(input())\n\nfor _ in range(testcase):\n    m, n = map(int, input().split())\n    queue = list(map(int, input().split()))\n    num_queue = [i for i in range(m)]\n    count = 0\n\n    \n    while queue:\n        max_priority = max(queue)\n        priority = queue.pop(0)\n        order    = num_queue.pop(0)\n        \n        if priority != max_priority:\n            queue.append(priority)\n            num_queue.append(order)\n        else:\n            count += 1\n            if order == n:\n                print(count)\n                break"}, {"id": 49319030, "name": "\ud55c\ucc44\uc544", "x": 19.19264793395996, "y": 6.097211837768555, "label": 0, "group": 152, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split( )))\n    imp = list(map(int, input().split( )))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    order = 0\n    \n    while True:\n        if imp[0]==max(imp):\n            order += 1\n                        \n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))   "}, {"id": 21572541, "name": "\ubc15\uc6a9\uc6b0", "x": -38.281978607177734, "y": -5.661038875579834, "label": 0, "group": 152, "code": "import sys\n\n\nclass Node:\n    def __init__(self, idx, val, prev_node=None, next_node=None):\n        self.idx = idx\n        self.val = val\n        self.prev = prev_node\n        if prev_node is not None:\n            prev_node.set_next(self)\n        self.next = next_node\n        if next_node is not None:\n            next_node.set_prev(self)\n\n    def set_prev(self, prev_node):\n        if self.prev is not None:\n            self.prev.next = None\n        if prev_node.next is not None:\n            prev_node.next.prev = None\n\n        self.prev = prev_node\n        prev_node.next = self\n\n    def set_next(self, next_node):\n        if self.next is not None:\n            self.next.prev = None\n        if next_node.prev is not None:\n            next_node.prev.next = None\n\n        self.next = next_node\n        next_node.prev = self\n\n\nfor test in range(int(sys.stdin.readline())):\n    n, m = list(map(int, sys.stdin.readline().split()))\n    priority = list(map(int, sys.stdin.readline().split()))\n\n    nodes = [Node(i, priority[i]) for i in range(n)]\n    for i in range(1, n):\n        nodes[i].set_prev(nodes[i-1])\n\n    start = Node(-1, 0, None, nodes[0])\n    end = Node(-1, 0, nodes[n-1], None)\n\n    print_num = 0\n    while True:\n        # Find first node with maximum value\n        max_node = start\n        cur_node = start.next\n        while cur_node != end:\n            if cur_node.val > max_node.val:\n                max_node = cur_node\n\n            cur_node = cur_node.next\n\n        # Print max_node, while ignoring other nodes that were before that\n        start.next.set_prev(end.prev)\n        max_node.next.set_prev(start)\n        max_node.prev.set_next(end)\n\n        print_num += 1\n\n        if max_node.idx == m:\n            break\n\n    print(print_num)\n"}, {"id": 22717801, "name": "\uc591\uc9c4\uc6b0", "x": -4.3177924156188965, "y": -9.870922088623047, "label": 0, "group": 152, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 15490334, "name": "\uc2e0\ud558\uade0", "x": -11.3457670211792, "y": -11.532397270202637, "label": 0, "group": 153, "code": "import sys\n\n\nt = int(sys.stdin.readline())\n\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    doc = list(map(int, sys.stdin.readline().split()))\n    idx = []\n    for i in range(n):\n        idx.append(i)\n    cnt = 0\n    x = 101\n\n    while doc:\n        for i in range(1, len(doc)):\n            if doc[0] < doc[i]:\n                doc.append(doc.pop(0))\n                idx.append(idx.pop(0))\n                break\n\n        if max(doc) == doc[0]:\n            doc.pop(0)\n            x = idx.pop(0)\n            cnt += 1\n        if x == m:\n            print(cnt)\n            break\n"}, {"id": 21800085, "name": "\uc774\uc724\uc9c0", "x": -5.86285924911499, "y": -17.51492691040039, "label": 0, "group": 153, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input().rstrip())):\n    n, m = map(int,input().rstrip().split())\n    q = list(map(int,input().rstrip().split()))\n    priority = [0,0,0,0,0,0,0,0,0]\n    for l in q:\n        priority[-l] += 1\n    count = 0\n    index = 0\n    while True:\n        while priority[index] == 0:\n            index += 1\n        out = q.pop(0)\n        if out == 9 - index:\n            count += 1\n            if m == 0:\n                break\n            priority[index] -= 1\n        else:\n            q.append(out)\n        m -= 1\n        if m < 0:\n            m += len(q)\n    print(count)\n"}, {"id": 17041414, "name": "\uae40\uc720\ub9ac", "x": -4.390829086303711, "y": 12.043076515197754, "label": 0, "group": 153, "code": "N= int(input())\nwhile(N!=0):\n    N-=1\n    n,m=map(int,input().split())\n    print_list = list(map(int,input().split()))\n    prior_number=[]\n\n    for i in print_list:\n        prior_number.append(i)\n    \n    result=[0 for _ in range(n)]\n    queue=[i for i in range(n)]\n    sequence =1\n    while queue:\n        if print_list[queue[0]]== max(prior_number):\n            prior_number.remove(max(prior_number))\n            result[queue.pop(0)]=sequence\n            sequence+=1\n        else:\n            queue.append(queue.pop(0))\n    print(result[m])"}, {"id": 22150008, "name": "\ud55c\uc11c\uc900", "x": 23.892797470092773, "y": 41.72734451293945, "label": 0, "group": 153, "code": "import sys\n\n\ndef queue_max(queue):\n\tresult = 0\n\tfor i in range(len(queue)):\n\t\tif queue[i][1] > result:\n\t\t\tresult = queue[i][1]\n\n\treturn result\t\t\n\n\nif __name__ == '__main__':\n\tinput = sys.stdin.readline\n\ttest_cases = int(input())\n\n\tfor i in range(test_cases):\n\t\tN, M = map(int ,input().split())\n\t\t# if N == 1:\n\t\t# \tprint(1)\n\t\tl = input().split()\n\t\tqueue = []\n\t\tfor j in range(N):\n\t\t\tqueue.append((j, int(l[j])))\n\n\t\t# print(queue)\n\t\t\n\t\ti = 1\n\t\tmax_0 = queue_max(queue)\n\t\t# print(max_0)\n\t\twhile queue[0][1] != max_0 or  queue[0][0] != M:\n\t\t\t\n\t\t\ta = queue.pop(0)\n\t\t\tif a[1] == max_0:\n\t\t\t\tmax_0 = queue_max(queue)\n\t\t\t\ti += 1\n\t\t\telse: queue.append(a)\n\n\t\t\t# print(queue)\n\n\n\n\n\t\tprint(i)"}, {"id": 6547449, "name": "\ucc44\ub9bc", "x": -3.8035624027252197, "y": -6.940690517425537, "label": 0, "group": 154, "code": "n = int(input())\nfor i in range(n):\n    elem, find = map(int,input().split())\n    crit = list(map(int,input().split()))\n    foll = [0 for x in crit]\n    foll[find] = 1\n    big = max(crit)\n    count = 0\n    while 1:\n        if crit[0] == big:\n            if foll[0] == 1:\n                print(count + 1)\n                break\n            else:\n                count += 1\n                del(crit[0])\n                del(foll[0])\n                big = max(crit)\n        else:\n            crit.append(crit[0])\n            del(crit[0])\n            foll.append(foll[0])\n            del(foll[0])"}, {"id": 43056796, "name": "\uc774\uc885\uc11d", "x": -3.4316813945770264, "y": -28.315372467041016, "label": 0, "group": 154, "code": "import sys\n\ncase = int(sys.stdin.readline())\n\nfor i in range(case):\n    num_of_docu, turn = map(int, sys.stdin.readline().split())\n    temp = list(map(int, sys.stdin.readline().split()))\n    queue = temp[:]\n    temp.sort(reverse=True)\n\n    cnt = 0\n    while True:\n        if temp[0] != queue[0]:\n            front = queue.pop(0)\n            queue.append(front)\n            if turn == 0:\n                turn = len(queue)\n            turn -= 1\n        else:\n            if turn == 0:\n                cnt += 1\n                break\n            else:\n                temp.pop(0)\n                queue.pop(0)\n                cnt += 1\n                turn -= 1\n    print(cnt)"}, {"id": 17434906, "name": "\uc815\uc7ac\uc601", "x": 26.108488082885742, "y": 4.855778694152832, "label": 0, "group": 154, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    result = 0\n    n, m = list(map(int, input().split(\" \")))\n    queue = list(map(int, input().split(\" \")))\n    queue = [(i, idx) for idx, i in enumerate(queue)]\n\n    while True:\n        isMax = True\n        for i in range(1, len(queue)):\n            if queue[0][0] < queue[i][0]:\n                temp = queue.pop(0)\n                queue.append(temp)\n                isMax = False\n                break\n        if isMax:\n            result = result + 1\n            temp = queue.pop(0)\n            if temp[1] == m:\n                print(result)\n                break\n\n"}, {"id": 26897262, "name": "\ubc30\uc2e0\uc9c0", "x": -4.4004807472229, "y": -0.2625531554222107, "label": 0, "group": 154, "code": "from sys import stdin\n\nnum = int(stdin.readline())\n\nfor _ in range(num):\n    N,M = map(int, stdin.readline().split())\n    importance = list(map(int,stdin.readline().split()))\n    queue = []\n    i = 1\n\n    for _ in range(N):\n        queue.append(False)\n    \n    queue[M] = True\n    choice = importance[M]\n    \n    while choice:\n        if importance[0] == max(importance):\n\n            if queue[0] == True:\n                print(i)\n                break\n\n            else:\n                importance.pop(0)\n                queue.pop(0)\n                i = i + 1\n            \n        else:\n            importance.append(importance.pop(0))\n            queue.append(queue.pop(0))\n            \n"}, {"id": 36246713, "name": "\uc11c\ucca0\uc6b0", "x": -11.922003746032715, "y": 15.80638599395752, "label": 0, "group": 155, "code": "testCase = int(input())\n\nfor _ in range(testCase):\n    N, M = map(int,input().split())\n\n    printList = list(map(int,input().split()))\n    checkList = [0 for _ in range(N)] \n    checkList[M] = 1 # \uad81\uae08\ud55c \ubb38\uc11c\uc704\uce58 \uc800\uc7a5\n\n    count=0\n    while True:\n        if printList[0] == max(printList):\n            count+=1\n\n            if checkList[0] != 1:\n                del printList[0]\n                del checkList[0]\n            else:\n                print(count)\n                break\n        else:\n            printList.append(printList[0])\n            checkList.append(checkList[0])\n            del printList[0]\n            del checkList[0]\n    "}, {"id": 13529838, "name": "\uc774\uc601\uc560", "x": -34.89828109741211, "y": -3.6639089584350586, "label": 0, "group": 155, "code": "from sys import stdin\n\nclass Queue(list):\n    push = list.append\n\n    def pop(self):\n        if self:\n            temp = self[0]\n            del self[0]\n            return temp\n        else:\n            return -1\n\n    def front(self):\n        return self[0] if self else -1\n\n    def back(self):\n        return self[-1] if self else -1\n\n    def size(self):\n        return len(self)\n\n    def empty(self):\n        return 0 if self else 1\n\ncase = int(stdin.readline())\n\nfor i in range(case):\n    N, M = map(int, stdin.readline().split())\n    arr = Queue(map(int, stdin.readline().split()))\n    cnt = 0\n    while True:\n        max_ = max(arr)\n        if arr[0] < max_:\n            arr.push(arr.pop())\n            if M == 0:\n                M = len(arr)-1\n            else:\n                M -= 1\n        else:\n            arr.pop()\n            cnt += 1\n            if M == 0:\n                break\n            M -= 1\n    print(cnt)"}, {"id": 39776670, "name": "\ud48d\ud76c\ucca0", "x": -18.39885711669922, "y": 18.583736419677734, "label": 0, "group": 155, "code": "n = int(input())\nfor _ in range(n):\n    m,ch=map(int,input().split()) # \ubb38\uc11c\uc758 \uac1c\uc218 / \uba87\ubc88\uca30 \ub098\ud0c0\ub0b4\ub294 \uc815\uc218\n    l=list(map(int,input().split())) # \ubb38\uc11c\uc758 \uac1c\uc218 -> \uc911\uc694\ub3c4 \ud45c\uc2dc ex) \ubb38\uc11c\uc758 \uac1c\uc218 3 -> \uc911\uc694\ub3c4 1 2 3\n    ch_list=l.copy()\n    ch_list.sort()\n    i,count=0,0\n    while True:\n        x=ch_list.pop()\n        while True:\n            if len(l)<=i:\n                i=0\n            if x==l[i]:\n                l[i]=0\n                count+=1\n                break\n            else:\n                i+=1\n        if ch == i:\n            break\n        else:\n            i+=1\n    print(count)"}, {"id": 32175744, "name": "\ud5c8\ucc3d\uc2dd", "x": -10.767946243286133, "y": -2.4245765209198, "label": 0, "group": 155, "code": "from sys import stdin as si\nfor _ in range(int(si.readline())):\n    n,m = map(int,si.readline().split())\n    queue=list(zip(list(map(int,si.readline().split())),list(range(n))))\n    front=0\n    cnt=[0]*10\n    for x in queue:\n        cnt[x[0]]+=1\n\n    order=1\n    check=False\n    for i in range(9,0,-1):\n        while cnt[i]>0:\n            if queue[front][0]==i:\n                if queue[front][1]==m:\n                    check=True\n                    break\n                front+=1\n                order+=1\n                cnt[i]-=1\n            else:\n                queue.append(queue[front])\n                front+=1        \n        if check:\n            break\n    print(order)"}, {"id": 38155747, "name": "\uae40\uc218\ub85c", "x": 5.001831531524658, "y": -25.826709747314453, "label": 0, "group": 156, "code": "import sys\ndef main():\n    t = int(sys.stdin.readline())\n    for i in range(t):\n        n, m = map(int, sys.stdin.readline().split())\n        qu = list(map(int, sys.stdin.readline().split()))\n        out = 0\n        while n:\n            maxi = max(qu)\n            current = qu.pop(0)\n            if maxi > current:\n                qu.append(current)\n            else:\n                out += 1\n                n -= 1\n                if m == 0:\n                    break\n            m = m - 1 if m > 0 else n - 1\n        print(out)\n\nmain()"}, {"id": 10164869, "name": "\ubc15\ucc3d\ud76c", "x": 24.76597785949707, "y": 42.2780647277832, "label": 0, "group": 156, "code": "import sys\n\ndef maxcheck(li):\n\ttemp=li[0]\n\tfor x in li:\n\t\tif temp<x:\n\t\t\treturn False\n\treturn True\n\ndef ft(target,priority):\n\tcounter=0\n\twhile target>=0:\n\t\tif maxcheck(priority)==True:\n\t\t\tif target==0:\n\t\t\t\tcounter+=1\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tcounter+=1\n\t\t\t\ttarget-=1\n\t\t\t\tpriority.pop(0)\n\t\telse:\n\t\t\tif target==0:\n\t\t\t\ttarget=len(priority)-1\n\t\t\t\tpriority.append(priority.pop(0))\n\t\t\telse:\n\t\t\t\tpriority.append(priority.pop(0))\n\t\t\t\ttarget-=1\n\treturn counter\n\nnum=int(sys.stdin.readline())\nfor _ in range(num):\n\tinfo=list(map(int,sys.stdin.readline().split()))\n\ttarget=info[1]\n\tpriority=list(map(int,sys.stdin.readline().split()))\n\tprint(ft(target,priority))"}, {"id": 26291541, "name": "\uc124\uc9c0\ud76c", "x": 16.85856056213379, "y": 6.174426555633545, "label": 0, "group": 156, "code": "test_case = int(input())\n\nfor _ in range(test_case):\n    page, where = map(int, input().split())\n    priority = list(map(int, input().split()))\n    priority_max = int(max(priority))\n    count = 0\n    check = [\"False\" for _ in range(len(priority))]\n    check[where] = \"True\"\n\n    while len(priority) != 0:\n        if priority[0] < priority_max:\n            priority.append(priority.pop(0))\n            check.append(check.pop(0))\n            \n        elif priority[0] == priority_max:\n            if check[0] == \"True\":\n                count += 1\n                print(\"{}\".format(count))\n                break\n            else:\n                priority.pop(0)\n                check.pop(0)\n                count += 1\n                priority_max = max(priority)\n"}, {"id": 48371638, "name": "\ubc15\uc608\uc9c4", "x": -3.418818473815918, "y": 11.118027687072754, "label": 0, "group": 156, "code": "n = int(input())\nfor i in range(n):\n    a,b=map(int,input().split())\n    x=list(map(int,input().split()))\n    x=[[k,i] for i,k in enumerate(x)]\n    re=[]\n    xs=sorted(x,key=lambda x: x[0])\n    i=0\n    while True:\n        if re and re[-1][1] == b:\n            break\n        if x[i][0] == xs[a-1][0]:\n            re.append(x[i])\n            a-=1\n        else:\n            x.append(x[i])\n        i+=1\n    print(len(re))"}, {"id": 24429567, "name": "\uae40\uc544\uc911", "x": -8.845612525939941, "y": -4.772087574005127, "label": 0, "group": 157, "code": "import sys\n\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor x in range(T):\n    answer = 0\n    count = 0\n    n,m = map(int,input().split())\n    arr = list(map(int,input().split()))\n    num = [x for x in range(n)]\n\n    while arr:\n        if arr[0] == max(arr):\n            count += 1\n\n            if num[0] == m:\n                answer = count\n\n            del num[0]\n            del arr[0]\n        else:\n            arr.append(arr[0])\n            num.append(num[0])\n            del num[0]\n            del arr[0]\n\n    print(answer)"}, {"id": 19987036, "name": "\ud669\uc218\uc815", "x": -10.6951904296875, "y": 23.56232261657715, "label": 0, "group": 157, "code": "case = int(input())\n\nfor _ in range(case):\n  N, M = map(int, input().split())\n  print_list = list(map(int, input().split()))\n  prior_number = []\n\n  #\uc6b0\uc120 \uc21c\uc704\ub97c \ud0d0\uc0c9\ud558\uae30 \uc704\ud55c \ub9ac\uc2a4\ud2b8\n  for doc in print_list:\n    prior_number.append(doc)\n\n  #\ud050 \uc548\uc5d0 index\ub97c \ub123\uc5b4 \ud0d0\uc0c9\n  result = [0 for _ in range(N)]\n  queue = [ i for i in range(N)]\n  seq = 1\n  while queue:\n    if print_list[queue[0]] == max(prior_number):\n      prior_number.remove(max(prior_number))\n      result[queue.pop(0)] = seq\n      seq += 1\n    else:\n      queue.append(queue.pop(0))\n  print(result[M])  "}, {"id": 21687136, "name": "\uc2e0\uc740\uc6b1", "x": -17.617687225341797, "y": 18.774883270263672, "label": 0, "group": 157, "code": "import sys\n\nn = int(sys.stdin.readline())\nfor _ in range(n):\n    x, i = map(int, sys.stdin.readline().split()) # x\ub294 \ud050\uc758 \uae38\uc774, i\ub294 \uc778\ub371\uc2f1\ud560 \uac12\uc758 \uc704\uce58\n    a = list(map(int, sys.stdin.readline().split())) # a\ub294 \ud050\n    count = 0\n    t = max(a)\n    while True:\n        if i == 0:\n            if a[0] == t or a[0] == max(a):\n                count += 1\n                print(count)\n                break\n            else:\n                a.append(a.pop(0))\n                i = i+x-1\n        elif a[0] == max(a):\n            t = a.pop(0)\n            i -= 1\n            count += 1\n            x -= 1\n        else:\n            a.append(a.pop(0))\n            i -= 1"}, {"id": 29989215, "name": "\uc870\ub3d9\ud601", "x": 20.17294692993164, "y": 8.16878890991211, "label": 0, "group": 157, "code": "t = int (input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    jung = list(map(int, input().split()))\n    docu = [0 for i in range(n)]\n    docu[m] = 'tracking'\n    order = 0\n\n    while True:\n        if jung[0] == max(jung):\n            order += 1\n            if docu[0] == 'tracking':\n                print(order)\n                break\n            else:\n                jung.pop(0)\n                docu.pop(0)\n\n        else:\n            jung.append(jung.pop(0))\n            docu.append(docu.pop(0))  "}, {"id": 22359187, "name": "\uc1a1\uc138\ube48", "x": 5.155602931976318, "y": -0.42163705825805664, "label": 0, "group": 158, "code": "test_case = int(input())\nfor _ in range(test_case):\n    n, m = map(int, input().split())\n    imp_list = list(map(int, input().split()))\n    sample_list = list(i for i in range(n))\n    target_el = sample_list[m]    \n    cnt = 0\n    while True:\n      if imp_list[0] == max(imp_list):\n          cnt += 1\n          if sample_list[0] == target_el:\n              print(cnt)\n              break\n          else:\n              imp_list.pop(0)\n              sample_list.pop(0)\n      else:\n          imp_list.append(imp_list.pop(0))\n          sample_list.append(sample_list.pop(0))"}, {"id": 38729604, "name": "\uae40\uaf43\ube44", "x": -21.826400756835938, "y": -11.208501815795898, "label": 0, "group": 158, "code": "import sys\nr = sys.stdin.readline\n\ndef find(n):\n    chk = 0\n    for i in range(n+1, 10):\n        if array[i] > 0:\n            chk = 1\n            break\n    if chk == 1:\n        return True\n    else:\n        return False\n\nT = int(r())\nfor i in range(T):\n    N, M = list(map(int, r().split()))\n    strong = list(map(int, r().split()))\n    queue = []\n    array = [0 for row in range(10)]\n    for idx, i in enumerate(strong):\n        mark = 0\n        array[i] += 1\n        if idx == M:\n            mark = 1\n        queue.append([i, mark])\n    result = 0\n    while True:\n        num, m = queue.pop(0)\n        cnt = find(num)\n        if cnt:\n            queue.append([num, m])\n        elif not cnt and m == 1:\n            result += 1\n            break\n        elif not cnt and m == 0:\n            result += 1\n            array[num] -= 1\n    print(result)"}, {"id": 41412569, "name": "\ubd09\uc218\ud76c", "x": 15.079190254211426, "y": -6.598045349121094, "label": 0, "group": 158, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int,input().split())\n    tmp = list(map(int,input().split()))\n    priority = [(idx,val) for idx,val in enumerate(tmp)]\n    ans = 0\n    \n    while True:\n        res = priority.pop(0)\n        if any(res[1]<q[1] for q in priority):\n            priority.append(res)\n        else:\n            ans += 1\n            if res[0] == m:\n                print(ans)\n                break"}, {"id": 21863444, "name": "\ubc15\uc740\ube48", "x": 19.63364028930664, "y": 9.966980934143066, "label": 0, "group": 158, "code": "import sys\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    N, M = list(map(int, input().split()))\n    imp = list(map(int, input().split()))\n    idx = list(range(len(imp)))\n    idx[M] = 'want'\n    order = 0\n    while True:\n        if imp[0] == max(imp):\n            order += 1\n            if idx[0] == 'want':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))\n"}, {"id": 27111051, "name": "\uacf5\uc720", "x": 3.035414218902588, "y": -25.80077362060547, "label": 0, "group": 159, "code": "import sys\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split(' '))\n    queue = list(map(int, sys.stdin.readline().split(' ')))\n    cnt = 0\n\n    while(True):\n        max_num = max(queue)\n\n        if queue[0] == max_num:\n            queue.pop(0)\n            cnt += 1\n            if M == 0:\n                break\n            else:\n                M -= 1\n\n        else:\n            tmp = queue.pop(0)\n            queue.append(tmp)\n            if M == 0:\n                M = len(queue) - 1\n            else:\n                M -= 1\n\n    print(cnt)"}, {"id": 18654229, "name": "\uc784\uc6d0\uc815", "x": -14.83061408996582, "y": -22.706214904785156, "label": 0, "group": 159, "code": "def func1(n, m):\n    if n < 1 or n > 100:\n        exit()\n    if m < 0 or m >= n:\n        exit()\n\ndef func2(n, m, imp):\n    func1(n, m)\n    imp_list = imp.split(' ')\n    important = []\n    loc = m\n    if n == len(imp_list):\n        for i in imp_list:\n            important.append(int(i))\n    else:\n        exit()\n    cnt = 0\n    while len(important) != 0:\n        exist = False\n        for i in range(1, n):\n            if important[0] < important[i]:\n                tmp = important.pop(0)\n                important.append(tmp)\n                exist = True\n                if loc == 0:\n                    loc = n - 1\n                else:\n                    loc -= 1\n                break\n        if exist == False:\n            tmp = important.pop(0)\n            cnt += 1\n            n -= 1\n            if loc == 0:\n                break\n            else:\n                loc -= 1\n    return cnt\n\nif __name__ == \"__main__\":\n    t = int(input())\n    result = []\n    for i in range(t):\n        n, m = map(int, input().split())\n        imp = input()\n        result.append(func2(n, m, imp))\n    for i in result:\n        print(i)"}, {"id": 39660943, "name": "\ubc31\uc2b9\ud76c", "x": -7.702101230621338, "y": -7.10719108581543, "label": 0, "group": 159, "code": "import sys\ninput = sys.stdin.readline\n\nfor i in range(int(input())):\n    a,b = map(int,input().split())\n    lst = list(map(int,input().split()))\n    lst_ = [0 for i in range(a)]\n    lst_[b] =1\n    cnt = 0\n    while True:\n        if lst[0] == max(lst):\n            cnt += 1\n            if lst_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del lst[0]\n                del lst_[0]\n\n        else:\n            lst.append(lst[0])\n            del lst[0]\n            lst_.append(lst_[0])\n            del lst_[0]\n"}, {"id": 43488096, "name": "\uc624\uc9c4\uacbd", "x": 10.119669914245605, "y": -8.187750816345215, "label": 0, "group": 159, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    sol = 1\n    N, M = map(int, input().split())\n    importance = [int(w) for w in input().split()]\n    queue = list(range(N))\n    front = 0\n    while len(queue) > front:\n        target = queue[front]\n        maximp = max(importance)\n        if importance[target] < maximp:\n            queue.append(target)\n        elif target == M:\n            break\n        else:\n            sol += 1\n            importance[target] = 0\n        front += 1\n    print(sol)"}, {"id": 11468560, "name": "\ud669\ubcf4\uc7ac\uc724", "x": -20.719539642333984, "y": -7.31841516494751, "label": 0, "group": 160, "code": "import sys\ninput = sys.stdin.readline\n\ndef is_powerful(me,arr):\n    for elem in arr:\n        if elem[1] > me[1]:\n            return 1\n    return 0\n\np = int(input())\nfor _ in range(p):\n    cnt = 0\n    n,m = map(int, input().split())\n    arr = [] \n    i = n \n    tmp = list(map(int, input().split()))\n    tmp.reverse()\n    while i > 0:\n        if i - 1 == m:\n            arr.append((1,tmp[n-i]))\n        else:\n            arr.append((0,tmp[n-i]))\n        i -= 1\n    j = n\n    while(arr):\n        if is_powerful(arr[-1],arr):\n            arr.insert(0,arr.pop())\n        else :\n            cnt += 1\n            if arr.pop()[0]:\n                print(cnt)\n                break "}, {"id": 14834156, "name": "\uc608\ubbf8\uc120", "x": 17.43678092956543, "y": 7.395301818847656, "label": 0, "group": 160, "code": "num = int(input())\n\nfor i in range(0, num):\n    n, m = input().split()\n    n = int(n)\n    m = int(m)\n\n    q_list = input().split()\n    chk_list = []\n\n    for x in range(0, n):\n        chk_list.append(x)\n\n    count = 0\n    while True:\n        if q_list[0] == max(q_list):\n            count += 1\n            if chk_list[0] == m:\n                print(count)\n                break\n            else:\n                q_list.pop(0)\n                chk_list.pop(0)\n        else:\n            q_list.append(q_list.pop(0))\n            chk_list.append(chk_list.pop(0))"}, {"id": 36010616, "name": "\uc774\ub2e4\ud76c", "x": -17.15968894958496, "y": -12.529234886169434, "label": 0, "group": 160, "code": "import sys\nT = int(input())\narr = []\nfor i in range(T):\n    line = sys.stdin.readline().split()\n    N = int(line[0])\n    targetindex = int(line[1])\n    arr = sys.stdin.readline().split()\n    for _ in range(len(arr)):\n        arr[_] = int(arr[_])\n    \n    ans = 0\n    prio = sorted(arr,reverse=True)\n    while 1:\n        #print('arr:',arr,'   ','prio','   ',prio,targetindex)\n        if arr[0] == prio[0]:\n            ans+=1\n            if(targetindex == 0):\n                print(ans)\n                break\n            else:\n                del arr[0]\n                del prio[0]\n                targetindex -= 1\n        else:\n            targetindex -= 1\n            if targetindex== -1:\n                targetindex = len(arr) - 1\n            arr.append(arr[0])\n            del arr[0]"}, {"id": 7355893, "name": "\uc5c4\uae30\uc900", "x": -1.934285044670105, "y": 2.2691104412078857, "label": 0, "group": 160, "code": "import sys\ntest_n = int(sys.stdin.readline())\nout = []\nfor _ in range(test_n):\n    N , M = map(int, input().split())\n    prior = [int(x) for x in input().split()]\n    idx = [0 for _ in range(N)]\n    idx[M] = 'q'\n    cnt = 0\n    while prior:\n        if prior[0] == max(prior):\n            cnt += 1\n            if idx[0] == 'q':\n                out.append(str(cnt))\n                break\n            else:\n                prior.pop(0)\n                idx.pop(0)\n        else:\n            prior.append(prior.pop(0))\n            idx.append(idx.pop(0))\nprint('\\n'.join(out))"}, {"id": 48572336, "name": "\ubc15\uc6d0\ube48", "x": 22.869155883789062, "y": -6.619241237640381, "label": 0, "group": 161, "code": "case=int(input())\nfor _ in range(case):\n    n,m=map(int,input().split())\n    q=list(map(int,input().split()))\n    s=list(reversed(sorted(q)))\n    cnt,i=0,0\n    while True:\n        if q[i]==s[cnt]:\n            cnt+=1\n            if i==m:\n                break\n            q[i]=-1\n        i=(i+1)%n\n    print(cnt)"}, {"id": 26898834, "name": "\ubc15\uc724\uc544", "x": -5.75857400894165, "y": -2.199944496154785, "label": 0, "group": 161, "code": "import sys\ninput = sys.stdin.readline\nt = int(input())\nresult = \"\"\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    prior = list(map(int, input().split()))\n    queue = [i for i in range(n)]\n    maximum = max(prior)\n    answer = 1\n    \n    while(queue):\n        if maximum > prior[0]:\n            prior.append(prior[0])\n            prior = prior[1:]\n            queue.append(queue[0])\n            queue = queue[1:]\n        else:\n            if queue[0] == m:\n                result += str(answer)+\"\\n\"\n                break\n            else:\n                prior = prior[1:]\n                queue = queue[1:]\n                maximum = max(prior)\n                answer += 1\nprint(result)"}, {"id": 48368032, "name": "\ud5c8\uc6a9\uc131", "x": 23.68848991394043, "y": 42.37749481201172, "label": 0, "group": 161, "code": "import sys\n\ndef printQueue (m, values) :\n\tif len(values) == 1 : return 1\n\t\n\tcount, seq = 0, [i for i in range(len(values))]\n\twhile m in seq :\n\t\ttemp = seq[0]\n\t\tfor i in values[1:] : \n\t\t\tif values[0] < i :\n\t\t\t\tvalues.append(values.pop(0))\n\t\t\t\tseq.append(seq.pop(0))\n\t\t\t\tbreak\n\t\tif temp == seq[0] :\n\t\t\tvalues.pop(0)\n\t\t\tseq.pop(0)\n\t\t\tcount += 1\n\treturn count\n\nfor _ in range(int(sys.stdin.readline())) :\n\tn, m = map(int, sys.stdin.readline().split())\n\tvalues = list(map(int, sys.stdin.readline().split()))[:n]\n\tprint(printQueue(m, values))"}, {"id": 38522189, "name": "\uc720\ubbfc\uaddc", "x": 6.747381210327148, "y": -25.706064224243164, "label": 0, "group": 161, "code": "import sys\ndef printer():\n    reps = int(sys.stdin.readline().rstrip())\n    \n    for _ in range(reps):\n        n, m = map(int, sys.stdin.readline().split())\n        priority = list(map(int, sys.stdin.readline().split()))\n        chosen = [None] * n\n        chosen[m] = \"goal\"\n        cnt = 0\n        while True:\n            if priority[0] == max(priority):\n                cnt += 1\n                priority.pop(0)\n                goal = chosen.pop(0)\n                if goal == \"goal\":\n                    print(cnt)\n                    break\n            else:\n                priority.append(priority.pop(0))\n                chosen.append(chosen.pop(0))\n\nprinter()"}, {"id": 36844206, "name": "\uc774\uacbd\uc120", "x": 25.613304138183594, "y": 39.956974029541016, "label": 0, "group": 162, "code": "from sys import stdin, stdout\nTC = int(stdin.readline())\n\nfor _ in range(TC):\n\tn, m = map(int, stdin.readline().split())\n\n\ta = list(map(int,stdin.readline().split()))\n\tidx = 0\n\ttarget_arr = [False for _ in range(n)]\n\ttarget_arr[m] = True\n\n\twhile True:\n\t\tif a[0] == max(a):\n\t\t\tidx += 1\n\t\t\tif target_arr[0] == True:\n\t\t\t\tprint(idx)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\ta.pop(0)\n\t\t\t\ttarget_arr.pop(0)\n\t\telse:\n\t\t\ta.append(a.pop(0))\n\t\t\ttarget_arr.append(target_arr.pop(0))        \n"}, {"id": 41197191, "name": "\ub178\uc2b9\ud638", "x": -4.2181715965271, "y": 0.9703847169876099, "label": 0, "group": 162, "code": "import sys\ninput = sys.stdin.readline\nT= int(input())\nfor _ in range(T):\n    n,m = map(int,input().split())\n    imp =list(map(int,input().split()))\n    idx =list(range(len(imp)))\n    target=[]\n    target.append(idx[m])\n    order=0\n    while 1:\n        if imp[0]==max(imp):\n            order+=1\n            if idx[0]==target[0]:\n                print(order)\n                break\n            else:\n                idx.pop(0)\n                imp.pop(0)\n        else:\n            idx.append(idx.pop(0))\n            imp.append(imp.pop(0))\n            \n    "}, {"id": 41867487, "name": "\ud558\uc9c4\uc219", "x": -27.311758041381836, "y": -17.784927368164062, "label": 0, "group": 162, "code": "import sys\ninput = sys.stdin.readline\n\ntc = int(input())\n\nfor _ in range(tc):\n    n,m = list(map(int, input().split()))\n    doc = list(map(int, input().split()))\n    posDoc = list(range(len(doc)))\n    posDoc[m] = \"1\"\n    order = 0\n    while doc:\n        if doc[0]== max(doc):\n            order += 1\n            if posDoc[0]== \"1\":\n                print(order)\n                break\n            else:\n                doc.pop(0)\n                posDoc.pop(0)\n        else:\n            doc.append(doc.pop(0))\n            posDoc.append(posDoc.pop(0))        "}, {"id": 28487299, "name": "\uc591\uc740\uc7ac", "x": 10.85625171661377, "y": 16.564252853393555, "label": 0, "group": 162, "code": "num=int(input())\nanswer=[]\nfor i in range(0,num):\n    n,m=input().split()\n    n=int(n)\n    m=int(m)\n    array=list(map(int,input().split(\" \")))\n    num=0\n    while(len(array)!=0):\n        if array[0]==max(array):\n            num+=1\n            array.pop(0)\n            \n            if m!=0:\n                m-=1\n            else:\n                break\n        else:\n            array.append(array.pop(0))\n            if m!=0:\n                m-=1\n            else:\n                m=len(array)-1\n                \n    answer.append(num) \n\nfor each in answer:\n    print(each)"}, {"id": 43116245, "name": "\ud48d\uc6b0\uc9c4", "x": 16.08698272705078, "y": 9.942605972290039, "label": 0, "group": 163, "code": "import sys\n\nnum=int(sys.stdin.readline().rstrip())\n\nfor _ in range(num):\n    n,m=map(int,sys.stdin.readline().rstrip().split())\n\n    pl=list(map(int,sys.stdin.readline().rstrip().split()))\n    cl=[0 for i in range(n)]\n    cl[m]=1\n\n    cnt=0\n    while 1:\n        if pl[0] ==max(pl):\n            cnt+=1\n\n            if cl[0]!=1:\n                del pl[0]\n                del cl[0]\n            else:\n                print(cnt)\n                break\n\n        else:\n            pl.append(pl[0])\n            cl.append(cl[0])\n            del pl[0]\n            del cl[0]"}, {"id": 25753862, "name": "\ud669\uc2e0\ud61c", "x": -25.727893829345703, "y": 22.61186408996582, "label": 0, "group": 163, "code": "import sys\n\n# test case input\nT = int(sys.stdin.readline().rstrip())\n\nfor i in range(T) :\n    # N(1 \u2264 N \u2264 100) : \ubb38\uc11c\uc758 \uac1c\uc218,\n    # M(0 \u2264 M < N) : \uba87 \ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\uc5c8\ub294\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uac00 \ud604\uc7ac Queue\uc5d0\uc11c \uba87 \ubc88\uc9f8\uc5d0 \ub193\uc5ec \uc788\ub294\uc9c0\ub97c \ub098\ud0c0\ub0b4\ub294 \uc815\uc218\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n\n    # \ubb38\uc11c \ucd9c\ub825 \uc218 \uc138\uae30\n    count = 0\n\n    # \ubb38\uc11c \ub9ac\uc2a4\ud2b8\n    doc_list = list(sys.stdin.readline().rstrip().split())\n\n    while len(doc_list) != 0 :\n        # \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \ucd5c\uc6b0\uc120 \uc21c\uc704\uac00 \uc544\ub2c8\ub77c\uba74, \ub9e8 \ub4a4\ub85c \ubcf4\ub0c4\n        if doc_list[0] != max(doc_list):\n            doc_list.append(doc_list[0])\n            del doc_list[0]\n            # \ucd5c\uc6b0\uc120 \uc21c\uc704\uac00 \uc544\ub2c8\ubbc0\ub85c \ub9e8 \ub4a4\ub85c\uac10 \ub530\ub77c\uc11c M\uc740 \ub9c8\uc9c0\ub9c9\ubc88\uc9f8\ub85c \ubc14\uafd4\uc90c\n            if M == 0 :\n                M += len(doc_list)-1\n            # \uadf8 \uc678\uc758 \uc21c\uc11c\uba74 M\uc744 \ud55c \uce78\uc529 \uc55e\uc73c\ub85c \ub561\uae34\ub2e4\n            else :\n                M -= 1\n        # \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \ucd5c\uc6b0\uc120 \uc21c\uc704\ub77c\uba74\n        else :\n            del doc_list[0]\n            count += 1\n            if M == 0 :\n                print(count)\n                break\n            else :\n                M -= 1"}, {"id": 42592401, "name": "\uc774\ubbfc\ud638", "x": 16.822446823120117, "y": 23.333398818969727, "label": 0, "group": 163, "code": "U=lambda:map(int,input().split())\nfor _ in range(int(input())):\n n,m=U();l,i,o=[*U()],m,0\n while 1:\n  if l[0]==max(l):\n   o+=1\n   if i>0:del l[0];i-=1\n   else:print(o);break\n  else:\n   if i>0:i-=1\n   else:i=len(l)-1\n   l.append(l.pop(0))"}, {"id": 34590116, "name": "\ud55c\ud604\ud0dc", "x": 20.650606155395508, "y": -6.508078098297119, "label": 0, "group": 163, "code": "for _ in range(int(input())):\n    N, M = map(int, input().split())\n    check = [0] * N\n    check[M] = True\n    nums = list(map(int, input().split()))\n\n    cnt = 1\n    while nums:\n        idx = nums.index(max(nums))\n        if check[idx]:\n            break\n\n        nums = nums[idx + 1 :] + nums[: idx]\n        check = check[idx + 1 :] + check[: idx]\n        cnt += 1\n\n    print(cnt)"}, {"id": 32255094, "name": "\uc624\ub3d9\uc5f0", "x": -11.200424194335938, "y": 14.869538307189941, "label": 0, "group": 164, "code": "import sys\ninput=sys.stdin.readline\n\n# test case T\nT=int(input())\nfor t in range(T):\n    # \ubb38\uc11c \uac2f\uc218 N, \uc54c\uace0\uc2f6\uc740 \ubc88\ud638 A\n    N,A=map(int,input().split())\n\n    num_list=[[i] for i in range(N)]\n    rank_list=list(map(int,input().split()))\n    for j in range(N):\n        num_list[j].append(rank_list[j])\n\n    rank_list.sort(reverse=True)\n    cnt=0\n    # print(rank_list)\n    for r in rank_list:\n        while True:\n            # print(num_list)\n            if r==num_list[0][1]:\n                print_num=num_list.pop(0)\n                cnt+=1\n                break\n            else:\n                val=num_list.pop(0)\n                num_list.append(val)\n\n        if print_num[0]==A:\n            print(f\"{cnt}\")\n            break\n    "}, {"id": 37713277, "name": "\ubc31\uc18c\ube48", "x": -17.5842227935791, "y": 3.231468915939331, "label": 0, "group": 164, "code": "import sys\n\n\ndef solution(priorities, location):\n    answer = 0\n    while True:\n        if priorities[0] == max(priorities):\n            answer += 1\n            priorities.pop(0)\n            if location == 0:\n                return answer\n            else:\n                location -= 1\n        else:\n            priorities.append(priorities[0])\n            priorities.pop(0)\n            if location == 0:\n                location = len(priorities)-1\n            else:\n                location -= 1\n\n\nn = int(sys.stdin.readline())\nfor i in range(n):\n    x, y = map(int, sys.stdin.readline().split())\n    data = list(map(int, sys.stdin.readline().split()))\n    print(solution(data, y))\n"}, {"id": 27098575, "name": "\ubc30\ud6a8\uacbd", "x": -10.892314910888672, "y": 6.6746134757995605, "label": 0, "group": 164, "code": "import sys\n\ninput = sys.stdin.readline\n\ndef main() :\n    testNum = int(input())\n    for _ in range(testNum):\n        N, M = map(int, input().split())\n        inputs = list(map(int, input().split()))\n        Queue = [(inputs[n], n) for n in range(N)]\n        target = Queue[M]\n        print(Printer(Queue, target))\n\ndef Printer(Queue, target):\n    def QCheck(Queue):\n        for doc in Queue:\n            if Queue[0][0] < doc[0]:\n                return False\n        return True\n\n    cnt = 1\n    while(Queue):\n        if QCheck(Queue) == True:\n            if Queue[0] == target:\n                return cnt\n            Queue.pop(0)\n            cnt += 1\n        else:\n            Queue.append(Queue.pop(0))\n\nif __name__ == '__main__':\n    main()"}, {"id": 38998544, "name": "\ucd5c\uc5f0\uc900", "x": 10.219687461853027, "y": -11.804187774658203, "label": 0, "group": 164, "code": "import sys\n\nT = int(sys.stdin.readline())\nfor i in range(T):\n    n, m = map(int, sys.stdin.readline().split())\n    l = list(enumerate(map(int, sys.stdin.readline().split())))\n    cnt = 0\n    while True:\n        k = l.index(max(l,key=lambda x : x[1]))\n        cnt +=1\n        if l[k][0]==m : break\n        if k==0 : l = l[1:]\n        elif k==len(l)-1 : del l[-1]\n        else : l = l[k+1:] + l[:k]\n    print(cnt)"}, {"id": 40880247, "name": "\uc774\uc694\uc6d0", "x": -0.4361947476863861, "y": -4.951162815093994, "label": 0, "group": 165, "code": "import sys\ninput = sys.stdin.readline\n\n\n\nT = int(input())\nfor _ in range(T):\n    A, B =map(int, input().split())\n    C= list(map(int, input().split()))\n    Q=[]\n    if A==1:\n        print(1)\n    else:\n        for i in range(len(C)):\n            Q.append([C[i],i])\n        C = sorted(C)\n        cnt=0\n        while True:\n            if Q[0][0] == C[-1]:\n                cnt += 1\n                if Q[0][1] == B:\n                    print(cnt)\n                    break\n                else:\n                    Q.pop(0)\n                    del C[-1]\n\n            else:\n                Q.append(Q.pop(0))\n"}, {"id": 15961863, "name": "\ub0a8\uc778\uc6b0", "x": 14.070343017578125, "y": -8.471919059753418, "label": 0, "group": 165, "code": "case = int(input())\n\nfor _ in range(case):\n    N, M = map(int, input().split())\n    num_list = list(map(int, input().split()))\n    const = list(zip([k for k in range(N)], num_list))\n    cnt = 0\n\n    for i in range(10000):\n        if const[0][1] == max(num_list):\n            a, b = const.pop(0)\n            num_list.remove(max(num_list))\n            cnt += 1\n            if a == M:\n                break\n        else:\n            c = const.pop(0)\n            const.append(c)\n\n    print(cnt)"}, {"id": 15567798, "name": "\ubc15\uc138\ubbf8", "x": -21.54177474975586, "y": 12.650177955627441, "label": 0, "group": 165, "code": "test_case=int(input())\nfor i in range(test_case):\n    N,M=map(int,input().split())\n    #\uac00\uc911\uce58 weight\n    weight=list(map(int,input().split()))\n    #\uc6d0\ub798 \uc22b\uc790\uc758 \uc21c\uc11c num\n    num=list(range(1,N+1))\n    #\ucd9c\ub825 \uc21c\uc11c order\n    order=[]\n    #\uad81\uae08\ud55c \uc22b\uc790\n    x=num[M]\n    \n    while True:\n        maximum=max(weight)\n        first_num=num[0]\n        first_w=weight[0]\n\n        if first_w<maximum:\n            num.append(first_num)\n            num.pop(0)\n            weight.append(first_w)\n            weight.pop(0)\n        else:\n            order.append(first_num)\n            num.pop(0)\n            weight.pop(0)\n            if len(num)==0:\n                break\n    print (order.index(x)+1)\n\n\n\n\n\n    \n\n\n"}, {"id": 22131941, "name": "\ub0a8\uc2dc\uc724", "x": -27.079307556152344, "y": 22.79302215576172, "label": 0, "group": 165, "code": "#-*- encoding: utf-8 -*-\n\"\"\"\ud504\ub9b0\ud130 \ud050\"\"\"\n#idea : \ubb38\uc11c\uc758 \uc21c\uc11c\uc640 \uc6b0\uc120\uc21c\uc704\uc5d0 \ub300\ud55c \ub9ac\uc2a4\ud2b8\ub97c \uac01\uac01 \ub9cc\ub4e4\uc5b4 \uc900 \ub4a4, \uc870\uac74\uc5d0 \ub530\ub77c \ud568\uaed8 \ubd99\uc600\ub2e4 \uc0ad\uc81c\ud588\ub2e4\ub97c \ubc18\ubcf5\ud55c\ub2e4.\nimport sys\n\n#case : \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uac1c\uc218\n#number : \ubb38\uc11c\uc758 \uac1c\uc218\n#document : \uba87 \ubc88\uc9f8\uc778\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc778\ub371\uc2a4\n#index : \uac01 \ubb38\uc11c\uc758 \uc778\ub371\uc2a4\n\ncase = int(input())\n\nfor i in range(case) :\n    number, document = map(int, sys.stdin.readline().split(' '))\n    priority = list(map(int, input().split(' ')))\n    idx = list(x for x in range(number))\n    final_idx = []\n    max_priority = max(priority)\n\n    while len(priority) != 0:\n        if  priority[0] == max(priority) : # \uac00\uc7a5 \uc911\uc694\ub3c4\uac00 \ud070 \ubb38\uc11c\ub97c \ub9cc\ub098\uba74 \ucd9c\ub825\n            priority.pop(0)\n            final_idx.append(idx.pop(0))\n\n\n        else : # \uc544\ub2c8\uba74 \ub4a4\uc5d0 \ubd99\uc778\ub2e4.\n            priority.append(priority.pop(0))\n            idx.append(idx.pop(0))\n\n\n    print(final_idx.index(document) + 1)\n"}, {"id": 24228015, "name": "\uc11c\uc2e0\uc77c", "x": -12.285356521606445, "y": -1.875689148902893, "label": 0, "group": 166, "code": "import sys\ntc=int(sys.stdin.readline())\n\ndef find():\n    for j in range(len(n_list)):\n        if n_list[0][0]<n_list[j][0]:\n            return True\n    return False\nans=[]\nfor i in range(tc):\n    n,m=map(int,sys.stdin.readline().split())\n    n_list=[[int(x),idx] for idx,x in enumerate(sys.stdin.readline().split())]\n\n    b=n_list[m]\n    a=0\n    for k in range(n):\n        while find():\n            n_list.append(n_list[0])\n            del n_list[0]\n        a+=1\n        if n_list[0][1]==b[1]:\n            ans.append(a)\n            break\n        del n_list[0]\nfor num in ans:\n    print(num)"}, {"id": 28189637, "name": "\ubcf5\ub3c4\ud558", "x": -4.342219352722168, "y": -5.332961559295654, "label": 0, "group": 166, "code": "import sys\ntest = int(sys.stdin.readline())\n\n\nfor _ in range(test):\n    n,m = map(int, sys.stdin.readline().split())\n\n    queue = list(map(int,sys.stdin.readline().split()))\n    check = [0 for _ in range(n)]\n    check[m] = 1\n    count = 0\n    while True:\n        if queue[0] == max(queue):\n            count += 1\n\n            if check[0] != 1:\n                del queue[0]\n                del check[0]\n            else:\n                print(count)\n                break\n        else:\n            queue.append(queue[0])\n            check.append(check[0])\n            del queue[0]\n            del check[0]"}, {"id": 45782405, "name": "\uc774\ubc94\uc218", "x": 9.846732139587402, "y": -18.493906021118164, "label": 0, "group": 166, "code": "from sys import stdin\n\nt = int(stdin.readline())\n\nfor _ in range(t) :\n    n,m = map(int,stdin.readline().split())\n    priority = list(map(int,stdin.readline().rstrip().split()))\n\n    box = []\n    for i,j in enumerate(priority) :\n        box.append((j,i))\n\n    cnt = 0    \n    while True :\n        x = box.pop(0)\n\n        for i in box :\n            if x[0] < i[0] :\n                box.append(x)\n                break\n        else :\n            cnt +=1\n\n            if x[1] == m :\n                print(cnt)\n                break"}, {"id": 30948168, "name": "\uc548\ud638\uc131", "x": -1.037491798400879, "y": -3.0703554153442383, "label": 0, "group": 166, "code": "case=int(input())\nfor i in range(case):\n    rank=[]\n    n,m=map(int,input().split())\n    rank=list(map(int,input().split()))\n    target=[0]*n\n    target[m]='target'\n    order=0\n    while (1):\n        if rank[0]==max(rank):\n            order+=1\n            if target[0]=='target':\n                print(order)\n                break\n            else:\n                rank.pop(0)\n                target.pop(0)\n        else:\n            rank.append(rank.pop(0))\n            target.append(target.pop(0))"}, {"id": 37431171, "name": "\uc784\uc8fc\uc740", "x": 17.62844467163086, "y": 12.011279106140137, "label": 0, "group": 167, "code": "import sys\n\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    priority = list(map(int, input().split()))\n    checkList = [0 for _ in range(N)]\n    checkList[M] = 1\n    cnt = 0\n    while True:\n        if priority[0] == max(priority):\n            cnt += 1\n            if checkList[0] == 1:\n                print(cnt)\n                break\n        else:\n            priority.append(priority[0])\n            checkList.append(checkList[0])\n        del priority[0]\n        del checkList[0]\n"}, {"id": 29688029, "name": "\uc815\uc7ac\uc815", "x": 0.6469199657440186, "y": -16.61722755432129, "label": 0, "group": 167, "code": "case = int(input())\nfor i in range(case):\n    N, M = map(int, input().split())\n    lst = list(map(int, input().split()))\n    index = 0\n    num = 1\n    rep = True\n    for k in range(9, 0, -1):\n        if not rep:\n            break\n        while k in lst:\n            # print(\"k\", k)\n            if lst[index] == k:\n                if index == M:\n                    print(num)\n                    rep = False\n                lst[index] = 0\n                num += 1\n            index += 1\n            index %= N"}, {"id": 36313554, "name": "\uc720\uc740\ud61c", "x": 2.7192368507385254, "y": -4.892238140106201, "label": 0, "group": 167, "code": "import sys\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().rstrip().split())\n    arr = list(map(int, sys.stdin.readline().rstrip().split()))\n    value = list(arr)\n    arr = list(enumerate(arr))\n    cnt = 0\n    while 1:\n        if arr[0][1] == max(value):\n            cnt += 1\n            if arr[0][0] == M:\n                print(cnt)\n                break\n            value.remove(arr[0][1])\n            del arr[0]\n        else:\n            arr.append(arr.pop(0))"}, {"id": 18270654, "name": "\ubc30\uc815\ub0a8", "x": 7.57135534286499, "y": 22.04656982421875, "label": 0, "group": 167, "code": "case = eval(input())\nt = []\nfor i in range(case):\n  k = list(map(int,input().split()))\n  arr = list(map(int,input().split()))\n  c = 0\n  want = k[1]\n  \n  while not want == -1:\n    v = max(arr)\n    if arr[0] == v:\n      arr.pop(0)\n      c += 1\n      if want == 0:\n        want = -1\n      else :\n        want -= 1\n    else :\n      arr.append(arr.pop(0))\n      if want == 0:\n        want = len(arr) -1\n      else :\n        want -= 1\n  t.append(c)\n\nfor i in t :\n  print(i)"}, {"id": 27610517, "name": "\uc624\uc608\uc219", "x": 21.04767608642578, "y": 14.735944747924805, "label": 0, "group": 168, "code": "import sys\n\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    priority_list = list(map(int, input().split()))\n    docs_list = list(range(len(priority_list)))\n    docs_list[M] = 'target'\n\n    order = 0\n\n    while True:\n        num = priority_list[0]\n        if num == max(priority_list):\n            order += 1\n\n            if docs_list[0] == 'target':\n                print(order)\n                break\n            else:\n                priority_list.pop(0)\n                docs_list.pop(0)\n        else:\n            priority_list.append(priority_list.pop(0))\n            docs_list.append(docs_list.pop(0))\n"}, {"id": 42275847, "name": "\ucd5c\ub2e4\uc601", "x": -2.5353684425354004, "y": -8.00312328338623, "label": 0, "group": 168, "code": "t = int(input())\nfor _ in range(t):\n    each, doc = map(int, input().split())\n    important = list(map(int, input().split()))\n    q = [0 for _ in range(each)]\n    q[doc] = 1\n    cnt = 0\n    while True:\n        if important[0] == max(important):\n            cnt += 1\n            if q[0] == 1:\n                print(cnt)\n                break\n            else:\n                del important[0]\n                del q[0]\n        else:\n            important.append(important[0])\n            del important[0]\n            q.append(q[0])\n            del q[0]"}, {"id": 37936799, "name": "\uc774\ud544\ub9bd", "x": -2.5523691177368164, "y": -4.203352928161621, "label": 0, "group": 168, "code": "a=int(input())\nfor i in range(a):\n    b=list(map(int,input().split()))\n    c=list(map(int,input().split()))\n    d=['x']*b[0]\n    d[b[1]]='y'\n    for j in range(b[0]):\n        mnum=max(c)\n        while not c[0]==mnum:\n            c.append(c[0])\n            del c[0]\n            d.append(d[0])\n            del d[0]\n        if d[0]=='y':\n            print(j+1)\n            break\n        else:\n            del c[0]\n            del d[0]"}, {"id": 19038109, "name": "\uc815\uc720\ubbf8", "x": 26.834375381469727, "y": 8.924331665039062, "label": 0, "group": 168, "code": "cases = int(input())\n\nfor i in range(cases):\n    jobs, target = list(map(int, input().split(' ')))\n    priority_list = list(map(int, input().split(' ')))\n\n    job_tuple_list = [(k, priority_list[k]) for k in range(jobs)]\n    target_job = job_tuple_list[target][0]\n    priority_sorted = sorted(priority_list)\n\n    count = 0\n    while job_tuple_list:\n        count = count + 1\n        max_priority = priority_sorted.pop()\n        while job_tuple_list[0][1] != max_priority:\n            job_tuple_list.append(job_tuple_list.pop(0))\n\n        printed = job_tuple_list.pop(0)[0]\n        if printed == target_job:\n            break\n\n    print(count)\n"}, {"id": 11249025, "name": "\uc724\uc138\ub9b0", "x": -25.91322898864746, "y": 0.33986377716064453, "label": 0, "group": 169, "code": "\nclass Queue(list):\n    enQueue = list.append\n\n    def deq(self):\n        return self.pop(0)\n\n    def get_data(self):\n        return self[0]\n\n    def Queue_size(self):\n        return len(self)\n\nT=int(input())\nfor x in range(0,T):\n    num, find_index= list(map(int, input().split())) #int \ud615\uc73c\ub85c \uc785\ub825\ubc1b\uc74c\n    arr =list(map(int, input().split()));\n    q=Queue();\n    for x in range(0,len(arr)):\n        q.enQueue(arr[x])\n    arr.sort(reverse=True) #\ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\n    flag=True\n    count=0\n\n    while flag:\n        find=arr.pop(0)\n        while 1:\n           if find==q.get_data():\n               if find_index==0:\n                   count+=1\n                   flag=False\n                   break\n               q.deq()\n               find_index -= 1\n               count+=1\n               break\n           else:\n               temp=q.deq()\n               q.enQueue(temp)\n               find_index-=1\n               if find_index==-1:\n                   find_index=q.Queue_size()-1\n    print(count)\n"}, {"id": 39823908, "name": "\ud5c8\ud604\ucca0", "x": -36.543495178222656, "y": -4.638871192932129, "label": 0, "group": 169, "code": "import sys\n\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Queue:\n    def __init__(self):\n        self.head = None\n        self.tail = None\n        self.size = 0\n\n    def push_back(self, node):\n        self.size += 1\n        if self.size == 1:\n            self.head = node\n            self.tail = node\n            return\n        self.tail.next = node\n        self.tail = node\n\n    def pop_top(self):\n        self.size -= 1\n        node = self.head\n        if self.size == 0:\n            return node\n        self.head = self.head.next\n        return node\n\n\nT = int(input())\nfor _ in range(T):\n    n, m = map(int, sys.stdin.readline().split())\n    importance = list(map(int, sys.stdin.readline().split()))\n    sorted_importance = sorted(importance)\n\n    nodes = [Node(i) for i in range(n)]\n    queue = Queue()\n    for node in nodes:\n        queue.push_back(node)\n\n    count = 0\n    while True:\n        node = queue.pop_top()\n        imp = importance.pop(0)\n        if imp < sorted_importance[-1]:\n            queue.push_back(node)\n            importance.append(imp)\n            continue\n\n        count += 1\n        sorted_importance.pop()\n\n        if node.data == m:\n            print(count)\n            break"}, {"id": 34683052, "name": "\uc2e0\ubcd1\ud604", "x": 6.183324813842773, "y": -18.625783920288086, "label": 0, "group": 169, "code": "import sys\n\nT = int(sys.stdin.readline())\n\nfor i in range(T):\n    answer = 0\n    n, w = map(int, sys.stdin.readline().split())\n    q = list(map(int, sys.stdin.readline().split()))\n    while(1):\n        if max(q) == q[0]:\n            if w == 0:\n                answer += 1\n                break\n            q.pop(0)\n            if w > 0: w -= 1\n            answer += 1\n        else:\n            q.append(q.pop(0))\n            w -= 1\n            if w < 0: w = len(q) - 1\n    print(answer)"}, {"id": 27678281, "name": "\uc774\uc644", "x": -7.741222381591797, "y": -3.3973145484924316, "label": 0, "group": 169, "code": "import sys\n\ntc = int(sys.stdin.readline().rstrip())\n\nfor _ in range(tc) :\n    n, m = map(int, sys.stdin.readline().split())\n    imp = list(map(int, sys.stdin.readline().split()))\n    imp_idx = [0 for _ in range(n)]\n    imp_idx[m] = 'target'\n    cnt = 0\n\n    while True :\n        if imp[0] == max(imp) :\n            cnt += 1\n            if imp_idx[0] == 'target' :\n                print(cnt)\n                break\n            else :\n                del imp[0]\n                del imp_idx[0]\n\n        else :\n            imp.append(imp[0])\n            imp_idx.append(imp_idx[0])\n            del imp[0]; del imp_idx[0]\n\n"}, {"id": 28614270, "name": "\uba85\uc138\ube48", "x": -10.761823654174805, "y": -15.000844955444336, "label": 0, "group": 170, "code": "\nimport sys\nn=int(sys.stdin.readline())\nfor _ in range(n):\n    n,m=map(int,sys.stdin.readline().split())\n    importance=list(map(int,sys.stdin.readline().split()))\n    new=sorted(importance,reverse=True)\n    num=0\n    idx=[]\n    for i in range(len(importance)):\n        idx.append(i)\n    while len(importance)!=0:\n        if importance[0]!=new[0] and len(new)!=1:\n            a=importance.pop(0)\n            importance.append(a)\n            b=idx.pop(0)\n            idx.append(b)\n        else:\n            num+=1\n            if idx[0]==m:\n                print(num)\n                break\n            del importance[0]\n            del new[0]\n            del idx[0]"}, {"id": 46982941, "name": "\uc724\ud615\ud638", "x": 2.7796034812927246, "y": -1.6151176691055298, "label": 0, "group": 170, "code": "import sys\n\ninput =sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().rstrip().split())\n    A = list(map(int, input().rstrip().split()))\n    idx = list(range(n)) \n    result = 0\n    while True:\n        if A[0]==max(A):\n            result+=1\n            if idx[0]==m:\n                print(result)\n                break\n            else:\n                A.pop(0)\n                idx.pop(0)\n        else:\n            A.append(A.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 33936011, "name": "\uc774\ucc44\uc601", "x": -2.6774098873138428, "y": 1.8723431825637817, "label": 0, "group": 170, "code": "import sys\n\ntc = int(sys.stdin.readline())\n\n\n\nfor _ in range(tc):\n    n, m = list(map(int, sys.stdin.readline().split()))\n    priority = list(map(int, sys.stdin.readline().split()))\n    target = list(range(len(priority)))\n    target[m] = \"target\"\n    idx = 0\n\n    while True:\n        if(priority[0] == max(priority)):\n            idx += 1\n    \n            if(target[0] == \"target\"):\n                sys.stdout.write(str(idx) + '\\n')\n                break\n            else:\n                target.pop(0)\n                priority.pop(0)\n        else:\n            target.append(target.pop(0))\n            priority.append(priority.pop(0))"}, {"id": 37180139, "name": "\uae40\uc900\uc131", "x": -19.04694366455078, "y": 15.178948402404785, "label": 0, "group": 170, "code": "import sys\n\ntest_cases = int(sys.stdin.readline())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, sys.stdin.readline().split()))\n    imp = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n    \n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0)) "}, {"id": 11119927, "name": "\uc81c\uac08\uc218\ube48", "x": 26.660127639770508, "y": 13.113897323608398, "label": 0, "group": 171, "code": "for _ in range(int(input())):\n    N,M=map(int,input().split())\n    memo=[*map(int,input().split())]\n    Queue=[]\n    k=0;i=0\n    for j in range(N):\n        Queue.append([memo[j],j])\n    while 1:\n        if Queue[i][0]==max(memo):\n            k+=1\n            if Queue[i][1]==M:break\n            Queue.pop(i)\n            memo.remove(max(memo))\n        else:i+=1\n        if i==len(Queue):i=0\n    print(k)"}, {"id": 25374962, "name": "\uc591\ud0dc\uc5f0", "x": -0.9471993446350098, "y": 4.668271064758301, "label": 0, "group": 171, "code": "Test_Case = int(input())\nfor _ in range(Test_Case) :\n    n,m = list(map(int,input().split()))\n    Queue = list(map(int,input().split()))\n    idx = list(range(len(Queue)))\n    idx[m] = 'a'\n    # if len(Queue) != n :\n    #     print('Wrong!')\n    #     Queue =[]\n    Printing = int(0)\n    while True : \n        if Queue[0] == max(Queue) :\n            Printing += 1\n            if idx[0] == 'a' :\n                print(Printing)\n                break\n            else :\n                Queue.pop(0)\n                idx.pop(0)\n        else :\n            Queue.append(Queue.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 30067449, "name": "\ubc31\ucc3d\ud604", "x": 16.06685447692871, "y": 10.919883728027344, "label": 0, "group": 171, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n,m = map(int, input().split())\n    queue = list(map(int, input().split()))\n    locat = [0]*n\n    locat[m] = 1\n    cnt = 0\n\n    while True:\n        if queue[0] == max(queue):\n            cnt += 1\n            if locat[0] == 1:\n                print(cnt)\n                break\n            else:\n                del queue[0]\n                del locat[0]\n        else:\n            queue.append(queue[0])\n            del queue[0]\n            locat.append(locat[0])\n            del locat[0]"}, {"id": 25924077, "name": "\ucd5c\ubbfc\uae30", "x": -35.013797760009766, "y": -4.455012321472168, "label": 0, "group": 171, "code": "import sys\nclass Q:\n    def __init__(self):\n        self.container = {}\n        self.head = 0\n    def __len__(self):\n        return len(self.container)\n    def append(self, n):\n        self.container[len(self) + self.head] = n\n    def pop(self):\n        if len(self):\n            tmp = self.container[self.head]\n            del self.container[self.head]\n            self.head += 1\n            return tmp\n        else:\n            raise Exception('\ube48 \ud050 \uc5d0\ub7ec')\n            return None\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    q = Q()\n    p_cnt = [0 for _ in range(9)]\n    cnt = 0\n    N, ans = map(int, sys.stdin.readline().split())\n    prior = list(map(int, sys.stdin.readline().split()))\n    for i in range(N):\n        q.append((i, prior[i]))\n        p_cnt[prior[i] - 1] += 1\n    for i in range(8, -1, -1):\n        while p_cnt[i]:\n            tmp = q.pop()\n            if tmp[1] == i + 1:\n                if tmp[0] == ans:\n                    print(cnt + 1)\n                    p_cnt[i] -= 1\n                else:\n                    cnt += 1\n                    p_cnt[i] -= 1\n            else:\n                q.append(tmp)\n                \n        "}, {"id": 48247363, "name": "\ubb38\uc2b9\uc724", "x": 7.721055507659912, "y": 14.007855415344238, "label": 0, "group": 172, "code": "import sys\ninput = sys.stdin.readline \nfor _ in range(int(input())):\n    cnt = 0\n    N, M = map(int, input().split()) \n    li = list(map(int, input().split()))\n    chk = [0] * N; chk[M] = 1 \n    while 1:\n        if li[0] == max(li):\n            cnt += 1 \n            if chk[0]: print(cnt); break \n            else: li = li[1:]; chk = chk[1:]\n        else:\n            li = li[1:] + [li[0]] \n            chk = chk[1:] + [chk[0]]"}, {"id": 34086794, "name": "\uc724\ud574\uc8fc", "x": -17.39378547668457, "y": -14.433887481689453, "label": 0, "group": 172, "code": "import sys\n\n\ntestcase = input()\ntestcase = int(testcase)\n\n\nfor i in range(testcase):\n    temp = sys.stdin.readline()\n    nlist = temp.split()\n    nlist = list(map(int,nlist))\n    numlist = nlist[0]\n    target = nlist[1]\n    temp = sys.stdin.readline()\n    importance = temp.split()\n    importance = list(map(int, importance))\n   \n\n    count = 0\n    while 1:\n        check = 0\n        for i in range(len(importance)):\n            if importance[0] < importance[i]:\n                importance.append(importance[0])\n                importance.pop(0)\n                check = 1\n                if target == 0:\n                    target = len(importance)-1\n                else:\n                    target -= 1\n                break\n        if check == 0:\n            if target == 0:\n                print(count+1)\n                break\n            else:\n                importance.pop(0)\n                count+=1\n                target -= 1\n\n"}, {"id": 27788208, "name": "\ubc15\uc7ac\uc815", "x": 22.24802017211914, "y": 13.192924499511719, "label": 0, "group": 172, "code": "import sys\n\nt = int(sys.stdin.readline().replace('\\n', ''))\nanswer = []\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().replace('\\n', '').split())\n    numbers = list(map(int, sys.stdin.readline().replace('\\n', '').split()))\n    queue = []\n    for a, b in zip(numbers, list(range(len(numbers)))):\n        queue.append((a, b))\n    priority = list(sorted(queue))\n    goal = queue[m]\n    result = 1\n    while True:\n        item = queue[0]\n        del queue[0]\n        if item[0] == goal[0] and item[1] == goal[1] and item[0] == priority[-1][0]:\n            break\n        if item[0] == priority[-1][0]:\n            del priority[-1]\n            result += 1\n        else:\n            queue.append(item)\n    answer.append(str(result))\nprint('\\n'.join(answer))\n"}, {"id": 38646714, "name": "\uc815\uc778\uc815", "x": 5.977715015411377, "y": -13.676284790039062, "label": 0, "group": 172, "code": "import sys\nT = int(input())\nfor _ in range(T):\n    count = 0\n    length,location = map(int,input().split())\n    queue = list(map(int,sys.stdin.readline().rstrip().split()))\n    Max = max(queue)\n    index = 0\n    while 1:\n        if Max == queue[index]:\n            count += 1\n            queue[index] = -1\n            Max = max(queue)\n        if queue[location] == -1:\n            break\n        if index != length -1:\n            index += 1\n        else:\n            index = 0\n    print(count)\n"}, {"id": 28097337, "name": "\uc774\ud0dc\uc131", "x": 16.19363021850586, "y": 6.851898193359375, "label": 0, "group": 173, "code": "test_case=int(input())\n\nfor _ in range(test_case):\n    N,M=map(int,input().split())\n    document=list(map(int,input().split()))\n    count=0\n    check=[0 for _ in range(N)]\n    check[M]=1\n    while True:\n        if document[0]==max(document):\n            count+=1\n            if check[0]!=1:\n                document.pop(0)\n                check.pop(0)\n            else:\n                print(count)\n                break\n        else:\n            document.append(document[0])\n            check.append(check[0])\n            document.pop(0)\n            check.pop(0)\n        \n        \n"}, {"id": 21465388, "name": "\uae30\ud0dc\uc601", "x": 22.76658821105957, "y": 17.247867584228516, "label": 0, "group": 173, "code": "case = int(input())\nresult = []\n\nfor i in range(0, case):\n    count = 0\n    n, m = map(int, input().split(' '))\n    pop = list(map(int, input().split(' ')))\n    while pop[m] != 0:\n        if pop[count] == max(pop):\n            pop[count] = 0\n            if pop[m] == 0:\n                # print(pop.count(0))\n                print(pop.count(0))\n                break\n\n        count += 1\n        if count >= len(pop):\n            count = 0\n"}, {"id": 24904399, "name": "\ubc15\ubcf4\uc601", "x": 8.95072078704834, "y": -2.1767470836639404, "label": 0, "group": 173, "code": "count = int(input())\n\nfor i in range(count):\n    answer = 0\n    N, M = map(int, input().split())\n    _list_ = list(map(int, input().split()))\n    target = [0] * N\n    target[M] = 1\n\n    while True:\n        if _list_[0] < max(_list_):\n            _list_.append(_list_.pop(0))\n            target.append(target.pop(0))\n        else:\n            if target[0] == 1:\n                print(answer + 1)\n                break\n            else:\n                _list_.pop(0)\n                target.pop(0)\n                answer += 1"}, {"id": 17148050, "name": "\ucd94\uc131\ud61c", "x": 0.05586976930499077, "y": -22.793621063232422, "label": 0, "group": 173, "code": "t = int(input())\nfor _ in range(t):\n    n,m = map(int,input().split())\n    p = list(map(int,input().split()))\n    cnt = 0\n    answer_index = m\n    while p:\n        if(p[0]==max(p)):\n            cnt += 1\n            if(answer_index==0):\n                print(cnt)\n                break\n            answer_index -= 1\n            if(answer_index == -1):\n                answer_index = len(p)-1\n            p.pop(0)\n\n        else:\n            temp = p.pop(0)\n            p.append(temp)\n            answer_index -= 1\n            if(answer_index == -1):\n                answer_index = len(p)-1"}, {"id": 33904646, "name": "\ud64d\uc218\uc544", "x": 2.662158250808716, "y": -17.5047664642334, "label": 0, "group": 174, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    _importance = list(map(int, input().split()))\n    count = 0\n    i = 0\n    while True:\n        if _importance[i] < max(_importance):\n            i += 1\n            if i == len(_importance):\n                i = 0\n        else:\n            count += 1\n            if i == m:\n                print(count)\n                break\n            del _importance[i]\n            if i < m:\n                m -= 1\n            if i == len(_importance):\n                i = 0"}, {"id": 31048089, "name": "\uc2e0\ub3d9\uc6b1", "x": -23.237279891967773, "y": 22.150697708129883, "label": 0, "group": 174, "code": "from sys import stdin\ntest_count = int(stdin.readline())\nfor _ in range(test_count):\n    n, m = map(int, stdin.readline().split())\n    imp = list(map(int, stdin.readline().split()))\n    idx = [0 for _ in range(n)]  # target \uc5d0 \ub300\ud55c list\n    idx[m] = 1  # target\n\n    count = 0   # \uc21c\uc11c\n\n    while True:\n        if imp[0] == max(imp):  # 1. \uc911\uc694\ub3c4\ub97c \ud655\uc778\ud558\uc5ec \uc911\uc694\ub3c4\uac00 \ub192\uc740 \uac83\uc77c \uacbd\uc6b0\n            count += 1\n\n            if idx[0] == 1:  # \uad81\uae08\ud55c \ubb38\uc11c \uc77c \uacbd\uc6b0\n                print(count)\n                break\n            else:   # \uad81\uae08\ud55c \ubb38\uc11c\uac00 \uc544\ub2d0 \uacbd\uc6b0 - \uc778\uc1c4\n                del imp[0]\n                del idx[0]\n        else:  # \uc911\uc694\ub3c4\uac00 \ub192\uc740 \uac83\uc774 \uc544\ub2d0 \uacbd\uc6b0 - \ubc30\uc5f4\uc5d0 \ub4a4\ub85c \ubc30\uce58\n            imp.append(imp[0])\n            del imp[0]\n            idx.append(idx[0])\n            del idx[0]\n"}, {"id": 46449798, "name": "\uc190\uc131\uc8fc", "x": 14.877685546875, "y": 19.36088752746582, "label": 0, "group": 174, "code": "import sys\n\ncount = int(sys.stdin.readline())\nfor _ in range(count):\n  n, m = map(int, sys.stdin.readline().split())\n  importance = list(map(int, sys.stdin.readline().split()))\n  idx = list(range(len(importance)))\n\n  order = 0\n  idx[m] = 'check'\n  while True:\n    if importance[0] == max(importance):\n        order += 1\n        if idx[0] == 'check':\n            print(order)\n            break\n        else:\n            importance.pop(0)\n            idx.pop(0)\n    else:\n        importance.append(importance.pop(0))\n        idx.append(idx.pop(0))\n"}, {"id": 16173318, "name": "\ud5c8\uc774\uc7ac", "x": 6.377727508544922, "y": 2.624983310699463, "label": 0, "group": 174, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 46560967, "name": "\uc608\uc815\ub0a8", "x": 11.746336936950684, "y": -25.07347869873047, "label": 0, "group": 175, "code": "case = int(input())\n\n\nwhile (case):\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n    \n    \n    count = 0\n    while True:\n        count += 1\n        printed = max(queue)\n        printed_index = queue.index(printed)\n\n        if printed_index == M:\n            break\n        \n        M -= (1 + printed_index)\n        if M < 0:\n            M += N\n        \n        queue = queue[printed_index + 1:] + queue[:printed_index]\n        N -= 1\n            \n\n    print(count)    \n    \n    case -= 1"}, {"id": 27093464, "name": "\ud55c\uc8fc\ud638", "x": -4.536043167114258, "y": 8.457433700561523, "label": 0, "group": 175, "code": "import sys\nimport heapq\nt = int(sys.stdin.readline())\nn = []\nm = []\ndocu = []\nnum = []\nfor i in range(t):\n    a, b = map(int, sys.stdin.readline().split())\n    n.append(a)\n    m.append(b)\n    docu.append([])\n    num.append([])\n    temp = list(map(int, sys.stdin.readline().split()))\n    for j in range(a):\n        docu[i].append([temp[j], j])\n        heapq.heappush(num[i], (-temp[j], temp[j]))\nfor i in range(t):\n    count = 0\n    while docu[i]:\n        node = docu[i].pop(0)\n        if node[0] == num[i][0][1]:\n            heapq.heappop(num[i])\n            count += 1\n            if node[1] == m[i]:\n                print(count)\n                break\n        else:\n            docu[i].append(node)\n"}, {"id": 29396926, "name": "\uc774\uc740\uc8fc", "x": 22.15195655822754, "y": 12.054096221923828, "label": 0, "group": 175, "code": "import sys\n\ntestcase_num = int(sys.stdin.readline())\nresult = []\n\nfor _ in range(testcase_num):\n    _, target = map(int, sys.stdin.readline().split(' '))\n    priority = list(map(int, sys.stdin.readline().split(' ')))\n    tmp = 0\n\n    while priority:\n        if len(priority) == 1 or priority[0] >= max(priority[1:]):\n            priority.pop(0)\n            \n            tmp += 1\n            if target == 0:\n                result.append(tmp)\n                break\n        else:\n            priority = priority[1:]+[priority[0]]\n        target = target - 1 if target else len(priority)-1\n\nsys.stdout.write('\\n'.join(map(str, result)))"}, {"id": 35866347, "name": "\uc870\ubcf4\uc544", "x": 18.679597854614258, "y": 13.413918495178223, "label": 0, "group": 175, "code": "import sys\nin_put = sys.stdin.readline\n\na= int(in_put())\n\nfor _ in range(a):\n    x,y= map (int,in_put().split())\n\n    prt = list(map(int,in_put().split()))\n    count=1\n    num=prt[y]\n    prt[y]=\"Target\"\n   \n\n    for i in range(9,num,-1):\n        swit=0\n        for h in range(x):\n            if prt[h]==i:\n                count+=1\n                swit=h\n\n        prt=prt[swit:]+prt[:swit]\n\n    for i in range(x):\n        if prt[i]==\"Target\":\n            break\n        elif prt[i]==num:\n            count+=1\n    print(count)\n"}, {"id": 22069268, "name": "\uc131\uc8fc\ud601", "x": 18.88861656188965, "y": 0.6792813539505005, "label": 0, "group": 176, "code": "testcase = int(input())\nanswer = []\n\nfor i in range(testcase):\n    N,M = list(map(int,input().split(' ')))\n    num = list(map(int,input().split(' ')))\n    num_index = [i for i in range(len(num))]\n\n    count = 1\n    while(M in num_index):\n        max_num = max(num)\n        if (max_num == num[0]):\n            if(num_index[0] == M):\n                answer.append(count)\n            del num[0]\n            del num_index[0]\n            count= count+1\n        else:\n            num.append(num[0])\n            num_index.append(num_index[0])\n            del num[0]\n            del num_index[0]\nfor i in answer:\n    print(i)"}, {"id": 20001084, "name": "\uc784\uc8fc\ud658", "x": 14.740002632141113, "y": -16.605749130249023, "label": 0, "group": 176, "code": "def set_pointer(N, pointer):\n    if pointer >= N - 1:\n        return 0\n    else:\n        return pointer + 1\n\n\nfor _ in range(int(input())):\n    count = 0\n    pointer = 0\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n    while True:\n        if queue[pointer] == max(queue):\n            queue[pointer] = 0\n            count += 1\n            if pointer == M:\n                break\n            pointer = set_pointer(N, pointer)\n        else:\n            pointer = set_pointer(N, pointer)\n    print(count)\n"}, {"id": 30795948, "name": "\uad8c\ub0a8\ud638", "x": -24.43401336669922, "y": 20.086353302001953, "label": 0, "group": 176, "code": "def push(data, a):\n    data.append(a)\n    \ndef pop(data):\n    tmp = data[0]\n    data.remove(data[0])\n    return tmp\n\nimport sys\n\nt = int(input())\nfor i in range(t):\n    N, M = map(int, sys.stdin.readline().split()) # M\uc740 \ucc3e\uace0\uc2f6\uc740 \uac12\n\n    queue = [[i,''] for i in map(int, sys.stdin.readline().split())]\n    rank = [queue[i][0] for i in range(len(queue))] ; rank.sort() # \uc774\ub807\uac8c\uc548\ud558\uba74 \ud050\ub791 \ub611\uac19\uc544\uc9d0.. \ubcc4\uba85\uac1c\ub150 \u3160 +[]\n    queue[M][1] = 'check'\n    count = 0\n\n    while True:\n\n        if rank[-1] == queue[0][0]: # \ub9e8 \uc55e\uc774 \uc824 \ud070 \uc218\uc77c \uacbd\uc6b0, \uc81c\uac70, \uce74\uc6b4\ud2b8 +1\n            if queue[0][1] == 'check': # \ub9e8 \uc55e\uc774 \uc824 \ud070\uc218\uc774\uba70 check \uc778 \uacbd\uc6b0 \uba48\ucd98\ub2e4! \u2605\n                break\n            pop(queue)\n            del rank[-1]\n            count = count +1\n        else:                     # \ub9e8 \uc55e\uc774 \uc824 \ud070\uc218\uac00 \uc544\ub2c8\uba74, \ub4a4\ub85c \ubcf4\ub0b8\ub2e4.\n            push(queue, pop(queue))\n        \n    print(count+1) "}, {"id": 24961550, "name": "\uc190\uc608\uc9c4", "x": 11.306602478027344, "y": 2.286634683609009, "label": 0, "group": 176, "code": "m = int(input())\n\nfor i in range(m):\n    n, t = map(int, input().split())\n    l = list(map(int, input().split()))\n    s = list(range(0, n))\n    c = 1\n    while True:\n        if max(l) == l[0]:\n            if s[0] == t:\n                print(c)\n                break\n            c += 1\n            s = s[1:]\n            l = l[1:]\n        else:\n            s = s[1:] + [s[0]]\n            l = l[1:] + [l[0]]"}, {"id": 27819929, "name": "\ud558\uc815\uc6b0", "x": -20.367198944091797, "y": -1.488909125328064, "label": 0, "group": 177, "code": "def read_int():\n    return int(input())\n\ndef read_int_list():\n    return list(map(int, input().split(\" \")))\n\ndef get_order_of_document(priority_list, target):\n    priority_list_with_origin_index = [[i, priority_list[i]] for i in range(len(priority_list))]\n    sorted_priority_list_with_index = sorted(priority_list_with_origin_index, key= lambda x: (x[1], -x[0]), reverse=True)\n\n    index = 0\n    while True:\n        elem = priority_list_with_origin_index.pop(0)\n        if elem[1] == sorted_priority_list_with_index[0][1]:\n            sorted_priority_list_with_index.pop(0)\n            index += 1\n            if target == elem[0]:\n                break\n        else:\n            priority_list_with_origin_index.append(elem)\n    return index\n\n\n\nif __name__ == \"__main__\":\n    test_case_num = read_int()\n    results = []\n\n    for i in range(test_case_num):\n        [num_of_documents, target] = read_int_list()\n        document_priority_list = read_int_list()\n        order_of_document = get_order_of_document(document_priority_list, target)\n        results.append(order_of_document)\n\n    for result in results:\n        print(result)\n"}, {"id": 31460903, "name": "\uc804\uc2b9\uc8fc", "x": 11.294997215270996, "y": 20.786502838134766, "label": 0, "group": 177, "code": "def solution(n, m, printList):\n  sortPriority = sorted(printList, reverse=True)\n  answer = 0\n  pointer = 0\n  maxValue = sortPriority[answer]\n  queue = []\n\n  for idx, priority in enumerate(printList):\n    queue.append((priority, idx))\n  \n  while len(queue) != 0:\n    if maxValue <= queue[pointer][0]:\n      answer += 1\n      p = queue.pop(pointer)\n      if p[1] == m:\n        print(answer)\n        break\n      \n      maxValue = sortPriority[answer]\n    else:\n      pointer += 1\n    \n    if pointer >= len(queue):\n      pointer = 0\n    \n    \nT = int(input())\nfor _ in range(T):\n  N, M = map(int, input().split())\n  printList = list(map(int, input().split()))\n  solution(N, M, printList)\n"}, {"id": 23952895, "name": "\ud558\ud61c\uacbd", "x": -11.842130661010742, "y": -9.191107749938965, "label": 0, "group": 177, "code": "test_case = int(input())\nanswer = []\nfor _ in range(test_case):\n    n, m = map(int,input().split())\n    queue = list(map(int, input().split()))\n    target_queue = list(range(len(queue)))\n    target_queue[m] = 'target'\n    pop_order = 0\n    while(True):\n        if(queue[0]==max(queue)):\n            pop_order += 1\n            if(target_queue[0] == 'target'):\n                answer.append(pop_order)\n                break\n            else:\n                queue.pop(0)\n                target_queue.pop(0)\n        else:\n            queue.append(queue.pop(0))\n            target_queue.append(target_queue.pop(0))\n\nfor i in answer:\n    print(i)"}, {"id": 38114981, "name": "\ubc15\uc194\ubbf8", "x": 9.352384567260742, "y": 24.404569625854492, "label": 0, "group": 177, "code": "#\ud504\ub9b0\ud130 \ud050\nT=int(input())\nanswers=[]\nfor i in range(T):\n  N, M = map(int,input().split(\" \"))\n  docs = list(map(int,input().split(\" \")))\n  docs_sorted=list(docs)\n  docs_sorted.sort()\n  target=docs[M]\n  p=0\n  print_cnt=0\n  while(True) :\n    if docs[p]>=docs_sorted[-1]:\n      docs_sorted.pop()\n      print_cnt+=1\n      if p==M:\n        break\n    else:\n      docs.append(docs[p])\n      if p==M:\n        M=len(docs)-1\n    p+=1\n  answers.append(print_cnt)\n\nfor c in answers:\n  print(c)\n\n"}, {"id": 35417351, "name": "\uc81c\uac08\uc724\uc900", "x": 11.364927291870117, "y": -11.262160301208496, "label": 0, "group": 178, "code": "n = int(input())\nimport sys\nfor _ in range(n):\n    total, idx = list(map(int, sys.stdin.readline().strip().split()))\n    li = list(map(int, sys.stdin.readline().strip().split()))\n    queue = [(v, i) for i, v in enumerate(li)]\n    answer = 0\n    flag = False\n    li.sort()\n    while not flag:\n        max_ = li[-1]\n        while queue[0][0] < max_:\n            queue = queue[1:] + queue[:1]\n        if queue[0][1] == idx:\n            answer += 1\n            flag = True\n            break\n        queue.pop(0)\n        li.pop()\n        answer += 1\n    print(answer)"}, {"id": 46238056, "name": "\ud558\uc2dc\uc740", "x": 23.050317764282227, "y": 42.034332275390625, "label": 0, "group": 178, "code": "import sys\ndef checkImportance(N, Q, I):\n\tcheck = 0\n\twhile I:\n\t\tif I[0] == max(I):\n\t\t\tcheck += 1\n\t\t\tif Q == 0:#\ucc3e\uace0\uc2f6\uc5c8\ub358 Q\ub77c\uba74\n\t\t\t\treturn check\n\t\t\tI.pop(0)\n\t\t\tQ -= 1\t\n\t\telse :\n\t\t\tI.append(I.pop(0))\n\t\t\tif Q == 0:\n\t\t\t\tQ += len(I)\n\t\t\tQ -= 1\nT = int(sys.stdin.readline())\nfor i in range(T):\n\tN, Q = map(int, sys.stdin.readline().split())\n\tI = list(map(int, sys.stdin.readline().split()))\n\tresult = checkImportance(N, Q, I)\n\tprint(result)"}, {"id": 19580155, "name": "\uc81c\uac08\uc9c0\ubbfc", "x": 20.604116439819336, "y": -10.464245796203613, "label": 0, "group": 178, "code": "for tc in range(int(input())):\n    N, M = map(int, input().split())\n    docs = list(map(int, input().split()))\n    mission = sorted(docs, reverse=True)\n    cnt = 0\n    while cnt < N:\n        for i in range(N):\n            if docs[i] == mission[cnt]:\n                cnt += 1\n                if i == M:\n                    break\n        else:\n            continue\n        break\n    print(cnt)"}, {"id": 47767185, "name": "\uc720\ud6a8\uc120", "x": -3.641184091567993, "y": -11.130546569824219, "label": 0, "group": 178, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 15528973, "name": "\uc548\uc7ac\ubaa8", "x": 7.752871036529541, "y": 0.7439405918121338, "label": 0, "group": 179, "code": "t = int(input())\nfor tc in range(1, t+1):\n    n, m = map(int, input().split())\n    pps = list(map(int, input().split()))\n    chk = [0 for _ in range(n)]\n    chk[m] = 'goal'\n\n    cnt = 0\n    while pps:\n        if pps[0] == max(pps):\n            cnt += 1\n            if chk[0] == 'goal':\n                print(cnt)\n                break\n            chk.pop(0)\n            pps.pop(0)\n        else:\n            pps.append(pps.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 36777838, "name": "\uc774\uc0c1\uc6b0", "x": 22.53120231628418, "y": -3.3845698833465576, "label": 0, "group": 179, "code": "t = int(input())\n\ndef check_q(q):\n    answer = 0\n    while True:\n        doc = q.pop(0)\n        for prio, _ in q:\n            if doc[0] < prio:\n                q.append(doc)\n                break\n        else:\n            answer += 1\n            if doc[1]:\n                print(answer)\n                return\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    q = list(map(lambda x: [int(x), False], input().split()))\n    q[m][1] = True\n    check_q(q)"}, {"id": 49026321, "name": "\ucd5c\ubbf8\uc219", "x": 24.589794158935547, "y": 43.526695251464844, "label": 0, "group": 179, "code": "import sys\nt = int(sys.stdin.readline())\n\nfor i in range(t):\n\tn,m = map(int,sys.stdin.readline().split())\n\tarr = list(map(int,sys.stdin.readline().split()))\n\tnum = [0,0,0,0,0,0,0,0,0]\n\tarr[m] = arr[m] + 10\n\tfor j in arr:\n\t\tif j > 10:\n\t\t\tnum[j-11] = num[j-11] + 1\n\t\telse:\n\t\t\tnum[j-1] = num[j-1] + 1\n\tcount = 0\n\twhile True:\n\t\tstate = 0\n\t\tif arr[0] > 10:\n\t\t\tfor j in range(arr[0]-10,9):\n\t\t\t\tif num[j] > 0:\n\t\t\t\t\tstate = 1\n\t\t\t\t\tbreak\n\t\telse:\n\t\t\tfor j in range(arr[0],9):\n\t\t\t\tif num[j] > 0:\n\t\t\t\t\tstate = 1\n\t\t\t\t\tbreak\n\t\tif state == 0:\n\t\t\tif arr[0]>10:\n\t\t\t\tbreak\n\t\t\tcount += 1\n\t\t\tnum[arr[0]-1] = num[arr[0]-1] -1\n\t\t\tdel arr[0]\n\t\telse:\n\t\t\tbucket = arr[0]\n\t\t\tdel arr[0]\n\t\t\tarr.append(bucket)\n\tprint(count+1)"}, {"id": 25197391, "name": "\uc724\uc601\ud658", "x": -16.15532112121582, "y": -21.674888610839844, "label": 0, "group": 179, "code": "t = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    check = [0] * n\n    check[m] = 1\n    count = 0\n    while True:\n        if n == 1:\n            print(1)\n            break\n        if max(q) != q[0]:\n            q.append(q[0])\n            del(q[0])\n            if check[0] != 1:\n                check.append(check[0])\n                del(check[0])\n            else:\n                check.append(check[0])\n                del(check[0])\n        elif max(q) == q[0]:\n            del(q[0])\n            if check[0] != 1:\n                del(check[0])\n                count += 1\n            elif check[0] == 1:\n                count += 1\n                print(count)\n                break"}, {"id": 40824830, "name": "\uc1a1\uc9c0\ud6a8", "x": -22.082809448242188, "y": 23.925853729248047, "label": 0, "group": 180, "code": "import sys\n\ndef printer_q(N, M):\n    cnt = 0\n\n    while True:\n        cnt += 1    # \ud55c\ubc88 \ub3cc\uc544\uac00\uae30 \uc2dc\uc791\n        document = documents.pop(0)\n        M -= 1\n        if len(documents) == 0:    # \ud050 \uae38\uc774\uac00 0 -> \ubb38\uc11c \ucd9c\ub825 \ub05d!\n            return cnt\n        N -= 1    # \ubb38\uc11c\ub97c \ud558\ub098 pop \ud588\uc73c\ubbc0\ub85c \uc804\uccb4 \ubb38\uc11c \uac1c\uc218 -1\n\n        # \ubb38\uc11c \uc911\uc694\ub3c4 \ud655\uc778\uc744 \uc704\ud55c \ubc18\ubcf5\ubb38\n        for n in range(N):\n            if document < documents[n]:    # \uc911\uc694\ub3c4\uac00 \ub354 \ub192\uc740 \uac83\uc774 \uc788\ub2e4?\n                documents.append(document)    # \ubb38\uc11c \uc81c\uc77c \ub4a4\ub85c\n                cnt -= 1\n                if M == -1:    # \ubb38\uc11c \uc704\uce58\uac00 0 -> \uc81c\uc77c \ub05d\uc73c\ub85c \ubcc0\uacbd\n                    M = N\n                N += 1    # \uc81c\uc77c \ub4a4\ub85c \ubb38\uc11c \uc774\ub3d9\ud55c \uac83\uc774\ubbc0\ub85c \ubb38\uc11c \uac1c\uc218 +1\n                break\n\n        if M == -1:\n            return cnt\n\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    documents = list(map(int, sys.stdin.readline().split()))\n    print(printer_q(N, M))"}, {"id": 26725306, "name": "\uc7a5\ubbf8", "x": 11.701496124267578, "y": -19.088682174682617, "label": 0, "group": 180, "code": "import sys\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    N,M = map(int, sys.stdin.readline().split())\n    que = list(map(int, sys.stdin.readline().split()))\n\n    result = 0\n    while True:\n        M -= 1\n        maximum = max(que)\n        temp = que.pop(0)\n        if temp != maximum: \n            que.append(temp)\n            if M == -1: \n                M = len(que)-1\n        else: \n            result += 1\n            if M == -1: \n                print(result)\n                break"}, {"id": 25948143, "name": "\uc774\uc544\ud604", "x": -14.379412651062012, "y": -6.693244457244873, "label": 0, "group": 180, "code": "\ndef solution():\n    TC = int(input())\n    for iter in range(TC):\n        N, M = map(int,(input().split()))\n        input_list = list(map(int,input().split()))\n        queue = []\n        for index in range(len(input_list)):\n            queue.append((index,input_list[index]))\n        max_index, max_num = max(queue, key = lambda x : x[1])\n        count = 0\n        while True:\n            if queue[0][0] == max_index and queue[0][1] == max_num:\n                count +=1\n                if queue[0][0] == M:\n                    break\n                queue.pop(0)\n                max_index, max_num = max(queue, key = lambda x : x[1])\n            else:\n                index , num = queue.pop(0)\n                queue.append((index,num))\n        \n        print(count)\n\nsolution()"}, {"id": 6601023, "name": "\ub958\ud615\ud0dc", "x": 7.931385517120361, "y": -3.74375057220459, "label": 0, "group": 180, "code": "for _ in 'a'*int(input()):\n    N,M=map(int,input().split())\n    Qp=list(map(int,input().split()));c=max(Qp)\n    Qd=[i for i in range(N)]\n    t=1\n    while True:\n        if Qp[0] < c:\n            Qp.append(Qp.pop(0))\n            Qd.append(Qd.pop(0))\n        else:\n            Qp.pop(0);\n            v=Qd.pop(0)\n            if v == M:\n                print(t)\n                break\n            t+=1\n            c=max(Qp)"}, {"id": 35074487, "name": "\ub0a8\ud61c\ubbf8", "x": 20.06121253967285, "y": 9.326064109802246, "label": 0, "group": 181, "code": "import sys\n\na = int(sys.stdin.readline())\n\nfor _ in range(a) :\n\n    count = 0\n    n ,m = map(int, sys.stdin.readline().split())\n    lst = [int(i) for i in sys.stdin.readline().split()]\n    idx = [i for i in range(n)]\n\n    idx[m] = 'target'\n\n    while(True) :\n        \n        if(max(lst) == lst[0]) :\n            count += 1\n            if(idx[0] == 'target') :\n                print(count)\n                break\n            else :\n                idx.pop(0)\n                lst.pop(0)\n        else :\n            lst.append(lst.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 46239586, "name": "\uc131\uc720\ub9ac", "x": -1.2166337966918945, "y": 3.220147132873535, "label": 0, "group": 181, "code": "import sys\n\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor i in range(T):\n    N, M = map(int, input().split())\n    importance = list(map(int, input().split()))\n    idx = list(range(len(importance)))\n    idx[M] = 'target'\n    A = 0\n\n    while True:\n        if importance[0] == max(importance):\n            A += 1\n            if idx[0] == 'target':\n                print(A)\n                break\n            else:\n                importance.pop(0)\n                idx.pop(0)\n        else:\n            importance.append(importance.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 43045909, "name": "\uc131\uc5f0\uc7ac", "x": 3.0210938453674316, "y": -11.32752513885498, "label": 0, "group": 181, "code": "n = int(input())\n\nfor i in range(n):\n    d, q = map(int,input().split())\n    inp = list(map(int, input().split()))\n    queue = []\n    for j in range(0,len(inp)):\n        queue.append([j,inp[j]])\n\n    result = 1\n\n    while True:\n        tmp = queue.pop(0)\n        isNo = False\n\n        for j in queue:\n            if tmp[1] < j[1]:\n                isNo= True\n                break\n\n        if not(isNo):\n            if tmp[0] == q:\n                print(result)\n                break\n            else:\n                result += 1\n        else:\n            queue.append(tmp)\n\n\n\n\n\n\n\n"}, {"id": 30315238, "name": "\uc720\uba85\uc218", "x": 19.579238891601562, "y": 9.990610122680664, "label": 0, "group": 181, "code": "import sys\ninput = lambda :sys.stdin.readline().rstrip()\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    imp = list(map(int, input().split()))\n    idx = list(range(n))\n    idx[m] = 'tgt'\n    order = 0\n\n    while True:\n        if imp[0] == max(imp):\n            order += 1\n            if idx[0] == 'tgt':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 22162539, "name": "\uc784\uaddc\ucca0", "x": 19.36412811279297, "y": -10.963035583496094, "label": 0, "group": 182, "code": "T = int(input())\nfor tc in range(1, T+1):\n    N, M = map(int, input().split())\n    paper = [(idx, val) for idx, val in enumerate(list(map(int, input().split())))]\n    cnt = 0\n    while paper:\n        p = paper.pop(0)\n        if any(p[1] < x[1] for x in paper):\n            paper.append(p)\n        else:\n            cnt += 1\n            if p[0] == M:\n                print(cnt)\n                break"}, {"id": 25778980, "name": "\uae40\ubbfc\uc11c", "x": -14.926294326782227, "y": 0.4476369619369507, "label": 0, "group": 182, "code": "t = int(input())\ntestcase = [list(map(int, input().split())) for _ in range(t*2)]\n\ndef printer(test, papers):\n    index = test[1]\n    printed = 0\n    print_index = False\n    while print_index == False:\n        if papers[0] < max(papers):\n            if index == 0:\n                index = len(papers)-1\n            else:\n                index -= 1\n            papers.append(papers.pop(0))\n        else:\n            if index == 0:\n                print_index = True\n            papers.pop(0)\n            index -= 1\n            printed += 1\n    \n    return printed\n\nfor i in range(t):\n    print(printer(testcase[i*2], testcase[i*2+1]))"}, {"id": 36177762, "name": "\ud64d\uc544\ub984", "x": 26.857797622680664, "y": 39.74677276611328, "label": 0, "group": 182, "code": "from sys import stdin,stdout\n\ndef is_ok(arr_important):\n\tfor i in range(1, len(arr_important)):\n\t\tif arr_important[i] > arr_important[0]:\n\t\t\treturn False\n\treturn True\n\n\nfor i in range(int(stdin.readline())):\n\tn, target_i = [*map(int,stdin.readline().split())]\n\tarr_important = [*map(int,stdin.readline().split())]\n\n\tnth = 0\n\twhile target_i != -1:\n\t\tif is_ok(arr_important):\n\t\t\tdel arr_important[0]\n\t\t\tnth+=1\n\t\telse:\n\t\t\tarr_important.append(arr_important.pop(0))\n\t\t\tif target_i == 0:\n\t\t\t\ttarget_i = len(arr_important)\n\n\t\ttarget_i -= 1\n\tstdout.write(str(nth)+\"\\n\")"}, {"id": 13434055, "name": "\uac15\uc740\uc9c0", "x": 29.11151885986328, "y": 9.556571960449219, "label": 0, "group": 182, "code": "f=lambda:map(int,input().split())\nfor i in range(int(input())):\n    n,m=f()\n    k,a=1,[(i,0) for i in f()]\n    a[m] = (a[m][0],1)\n    while True:\n        if max(a)[0] > a[0][0]:\n            a+=a[0],\n        else:\n            if a[0][1]>0:\n                print(k)\n                break\n            k+=1\n        a.pop(0)"}, {"id": 18554648, "name": "\uc0ac\uacf5\uc601\uc2dd", "x": -15.747859001159668, "y": -5.723053932189941, "label": 0, "group": 183, "code": "# \ud504\ub9b0\ud130 \ud050\n\ndef getMaxLargeNum(queue):\n    largeNum = 0\n\n    for item in queue:\n        if largeNum < item[1]:\n            largeNum = item[1]\n\n    return largeNum\n\ntest_case = int(input())\n\nfor _ in range(test_case):\n    n, m = list(map(int, input().split(' ')))\n    queue = list(map(int, input().split(' ')))\n    queue = [(idx, i) for idx, i in enumerate(queue)]\n\n    count = 0\n\n    while True:\n        largestNum = getMaxLargeNum(queue)\n        if queue[0][1] != largestNum:\n            queueItem = queue[0]\n            queue.remove(queueItem)\n            queue.append(queueItem)\n        elif queue[0][1] == largestNum:\n            count += 1\n            if m == queue[0][0]:\n                print(count)\n                break\n            else:\n                queue.remove(queue[0])\n"}, {"id": 41802773, "name": "\uae40\uc900\uc601", "x": -17.353118896484375, "y": 9.238584518432617, "label": 0, "group": 183, "code": "import sys\nimport heapq\n\ntc = int(sys.stdin.readline())\n\nfor _ in range(tc):\n    n, m = map(int, sys.stdin.readline().split())\n    l = list(map(int, sys.stdin.readline().split()))\n    maxq = []\n    for i in l:\n        heapq.heappush(maxq, -i)\n    res = 0\n    ind = m\n\n    currentMax = -heapq.heappop(maxq)\n    while True:\n        if l[0] == currentMax:  # pop\uc744 \ud560 \ub54c\n            res += 1\n            if ind == 0:\n                break\n            currentMax = -heapq.heappop(maxq)\n            n -= 1\n            l.pop(0)\n        else:   # pop\uc744 \ud558\uc9c0 \uc54a\uc744 \ub54c\n            l.append(l.pop(0))\n\n        if ind == 0:\n            ind = n-1\n        else:\n            ind -= 1\n        # l.append(l.pop(0))\n    print(res)\n"}, {"id": 47825891, "name": "\uae40\ud76c\uc560", "x": 10.936759948730469, "y": -13.72654914855957, "label": 0, "group": 183, "code": "import sys\nif __name__ == \"__main__\":\n   t = int(sys.stdin.readline())\n\n   for _ in range(t):\n      n, m = map(int, sys.stdin.readline().rstrip().split())\n      jobs = list(map(int, sys.stdin.readline().rstrip().split()))\n      mine = jobs[m]\n      cost = 1\n      while 1:\n         max_i = jobs.index(max(jobs))\n         if m == max_i:\n            print(cost)\n            break\n         jobs = jobs[max_i+1:] + jobs[:max_i]\n         m = m-(max_i+1) if m>max_i else m+(len(jobs)-max_i)\n         cost += 1"}, {"id": 20862260, "name": "\uc724\ubc15", "x": -22.60710906982422, "y": 19.23978042602539, "label": 0, "group": 183, "code": "\"\"\"from collections import deque\nt = int(input()) # 1 2 3 4 m=2\nglobal l\ndef sorting(it):\n    it.sort()\n    l = deque()\n    s = it[::-1]\n    for i in s:\n        l.append(i)\n    return l # 4 3 2 1\n\n\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    it = list(map(int, input().split()))\n    if len(it) == 1:\n        print(1)\n    else:\n        check = sorting(it)\n        cnt = 0\n        while True:\n            a = check.popleft()\n\n            if it.index(a) == m:\n                cnt += 1\n                break\n            else:\n                cnt += 1\n\n        print(cnt)\ndeque\ub97c \ud65c\uc6a9\ud574\uc11c \uad6c\ud604\uc744 \ud574\ubcf4\uc558\ub2e4.\n\uc6b0\uc120, \uc911\uc694\ub3c4\uac00 1\uac1c\ub77c\ub294 \ub73b\uc740 \ubb38\uc11c\uac00 1\uac1c\ub77c\ub294 \uc758\ubbf8\uc774\ubbc0\ub85c \uc774\ub54c\ub294 1\uc744 \ucd9c\ub825\ud558\uba74 \ub41c\ub2e4.\n\uadf8\ub807\uc9c0 \uc54a\uc744 \uacbd\uc6b0, \ub370\uc774\ud130\ub97c \ube84 deque\uc640 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\ub97c \ub9cc\ub4e0\ub2e4.\n\uc65c\ub0d0\ud558\uba74, deque\ub97c \ub0b4\ub9bc\ucc28\uc21c\uc73c\ub85c \uc815\ub82c\ud6c4 popleft\ub97c \ud55c \uac12\uc758 '\uc911\uc694\ub3c4\ub9ac\uc2a4\ud2b8\uc758 \uc778\ub371\uc2a4'\uac00 m\uacfc \uac19\ub2e4\uba74\ncount \ub97c 1\ud558\ub098\uc529 \ub354\ud574\uac00\uba70 count\ub97c \ubc14\ub85c \ucd9c\ub825\ud558\uba74 \ub41c\ub2e4.\n(popleft = m\uc758 \uc758\ubbf8\ub294 \ucd9c\ub825\ud558\uace0\uc790 \ud558\ub294 \ubb38\uc11c\uc758 \ucd9c\ub825\uc21c\uc11c\uc774\ub2e4.)\n\n\uc704 \ucf54\ub4dc\uc5d0\uc11c \ud558\ub098 \ube60\uc9c4 \uac83\uc774 \uc788\ub294\ub370, \ubc14\ub85c '\uc911\ubcf5\ub418\ub294 \uc911\uc694\ub3c4'\uac00 \uc624\ub294 \uacbd\uc6b0\uc774\ub2e4.\n\uc0ac\uc2e4 \uc774\ub294 \uac04\ub2e8\ud558\uac8c \ud574\uacb0\ud560\uc218\uc788\ub2e4.\n\uc911\ubcf5 \uc815\ub82c\uc744 \ud574\uacb0\ud558\ub294 \ud568\uc218\ub97c \uc815\uc758\ud558\uace0, '\uc7ac\uadc0\ud568\uc218'\ub97c \ud1b5\ud574 0.001\uc529 \ub354\ud574\uc8fc\uba74 \ub41c\ub2e4.\nex) 1 1 9 1 1 1\n1.001 1.002 9 1.003 1.004 1.005\nset_sorting()(\uc784\uc758\ub85c \ud568\uc218\uc774\ub984 \uc815\uc758) ==> 9 1.005 1.004 1.003 1.002 1.001\n\uc774\ub7ec\uba74 \uc54c\uace0\ub9ac\uc998 \uad6c\ud604\ubc29\uc2dd\uc758 \ud575\uc2ec\uc778 '\uc778\ub371\uc2a4'\ube44\uad50\uac00 \uac00\ub2a5\ud574\uc9c4\ub2e4.\n\ud5c8\ub098, \uadc0\ucc2e\uc544\uc11c dp\uc640 \uac19\uc740 \uac1c\ub150\uc73c\ub85c \uc911\ubcf5\uacbd\uc6b0\uae4c\uc9c0 \ud3ec\ud568\ub418\ub294 \ucf54\ub4dc \uad6c\ud604\uc744 \ud574\ubcf4\uc558\ub2e4.\n\uc54c\uace0\ub9ac\uc998\uc758 \ud575\uc2ec\uc778 \uc778\ub371\uc2a4\ube44\uad50\ub294 \ub3d9\uc77c\ud558\ub2e4.\n\n\uc54c\uace0\ub9ac\uc998 \uad6c\ud604 \ubc29\uc2dd:\n1. \uae30\uc874 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8 \uc0dd\uc131 \ubc0f \ube44\uad50\ud560 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8 \uc0dd\uc131\n2. deque\uc758 \uc5ed\ud560\uc744 \ud560 judge \ub9ac\uc2a4\ud2b8 \uc0dd\uc131\n3. judge\uc5d0\uc11c m\ubc88\uc9f8 \uc778\ub371\uc2a4\uc5d0 \ud574\ub2f9\ub418\ub294 \uac12\ub9cc 'T'\ub85c \ubc14\uafd4\uc90c.\n4. \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\uc758 0\ubc88\uc9f8 \uc778\ub371\uc2a4\uac00 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\uc758 \ucd5c\ub313\uac12\uc774\ub77c\ub294 \ub73b\uc740 \uc815\ub82c \uc644\ub8cc\ub42c\ub2e4\ub294 \uac83.\n4-1. \uc774\ub54c\ub294 count\ub97c \ud558\ub098\uc529 \ub354\ud574\uac00\ub294\ub370 judge\uc758 \uccab\ubc88\uc9f8\uac00 'T'\uac00 \ub420\ub584\uae4c\uc9c0\n    \uc67c\ucabd \uac12\uc744 pop\ud574\uc90c (==> pop(0) deque\uc5d0\uc11c popleft()\uc5d0 \ud574\ub2f9.)\n    \uccab\ubc88\uca30\uac00 T\uac00 \ub418\uba74 \ubc14\ub85c count \ud504\ub9b0\ud2b8.\n5. \uc815\ub82c\uc774 \uc548\ub42c\ub2e4\uba74 (= imp[0] != max(imp)), imp\uc640judge popleft() \ud574\uc90c.\n\"\"\"\nt = int(input())\nfor _ in range(t):\n    nm = list(map(int,input().split(' ')))\n    n = nm[0]\n    m = nm[1]\n    imp = list(map(int,input().split(' ')))\n    judge = [0 for _ in range(n)]\n    judge[m] = 'T'\n    cnt = 0\n    if len(imp) == n:\n        while True:\n            if imp[0] == max(imp):\n                cnt += 1\n                if judge[0] == 'T':\n                    print(cnt)\n                    break\n                else:\n                    imp.pop(0)\n                    judge.pop(0)\n            else:\n                imp.append(imp.pop(0))\n                judge.append(judge.pop(0))"}, {"id": 11091088, "name": "\uc720\uc18c\ub77c", "x": 15.89084529876709, "y": -13.408476829528809, "label": 0, "group": 184, "code": "T = int(input())\n\ndef find_max_inportance(print_queue):\n    return max(map(lambda x : x[0], print_queue))\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    importances = list(map(int, input().split()))\n    \n    print_queue = []\n\n    for importance in importances:\n        print_queue.append([importance, False])\n    \n    print_queue[M][1] = True\n\n    print_order = 1\n    while len(print_queue) != 0:\n        max_importance = find_max_inportance(print_queue)\n        \n        while print_queue[0][0] != max_importance:\n            print_queue.append(print_queue.pop(0))\n        \n        printing_text = print_queue.pop(0)\n\n        if printing_text[1]:\n            print(print_order)\n        else:\n            print_order = print_order + 1"}, {"id": 25650917, "name": "\uc190\uaddc\ud604", "x": -9.887655258178711, "y": -17.617351531982422, "label": 0, "group": 184, "code": "def pop_and_push(arr):\n    tmp=arr.pop(0)\n    arr.append(tmp)\n\nval_case=int(input())\nfor i in range(val_case):\n    val_size,val_idx=map(int,input().split())\n    db_score=list(map(int,input().split()))\n    \n    db_idx=list(range(val_size))\n    sv_idx=db_score[val_idx]\n    sv_max=max(db_score)\n    cnt=1\n\n    while sv_max>sv_idx:\n        while db_score[0]!=sv_max:\n            pop_and_push(db_score)\n            pop_and_push(db_idx)\n        db_score.pop(0)\n        db_idx.pop(0)\n        cnt+=1\n        sv_max=max(db_score)\n    for i in range(len(db_score)):\n        if db_idx[i]!=val_idx:\n            if db_score[i]==sv_idx:cnt+=1\n        else:break\n    print(cnt)"}, {"id": 8371163, "name": "\ub0a8\uc7ac\uc601", "x": 16.717927932739258, "y": 22.706085205078125, "label": 0, "group": 184, "code": "for _ in range(int(input())):\n n,m=map(int,input().split())\n x,y,pos,cnt=[],[],0,0\n for n,i in enumerate(map(int,input().split())):\n  x.append((n,i))\n  y.append(i)\n y.sort()\n maxPrior=y[-1]\n while 1:\n  if x[pos][1]==maxPrior:\n   cnt+=1\n   if x[pos][0]==m:\n    print(cnt)\n    break\n   pos+=1\n   y.pop()\n   maxPrior=y[-1]\n  else:\n   x.append((x[pos][0],x[pos][1]))\n   pos+=1"}, {"id": 35874816, "name": "\uc815\uae30\uc6a9", "x": 6.907888412475586, "y": -3.0583412647247314, "label": 0, "group": 184, "code": "T = int(input())\n \nfor _ in range(T):\n    n, m = map(int, input().split())\n    priority = list(map(int, input().split()))\n    index = [i for i in range(n)]\n    index[m] = 'target' \n    cnt = 0\n \n    while priority:\n        if priority[0] == max(priority):   \n            cnt += 1\n            if index[0] == 'target':\n                print(cnt)\n                break\n            priority.pop(0)\n            index.pop(0)\n        else:\n            priority.append(priority.pop(0))\n            index.append(index.pop(0))"}, {"id": 12285337, "name": "\uc0ac\uacf5\uc601\ud0dc", "x": -34.49577331542969, "y": -2.781456470489502, "label": 0, "group": 185, "code": "class Queue:\n    def __init__(self):\n        self.queue = []\n    def push(self, num):\n        self.queue.append(num)\n    def pop(self):\n        return self.queue.pop(0) if len(self.queue) != 0 else -1\n    def size(self):\n        return len(self.queue)\n    def empty(self):\n        return 1 if self.size() == 0 else 0\n    def front(self):\n        return self.queue[0] if self.size() != 0 else -1\n    def back(self):\n        return self.queue[-1] if self.size() != 0 else -1\n    def max(self):\n        return max(self.queue)\nnumbers = int(input())\n\nfor _ in range(numbers):\n    count = 0\n    inp = list(map(int, input().split()))\n    inp2 = list(map(int, input().split()))\n    N = inp[0]\n    index = inp[1]\n    queue = Queue()\n    queue_document = Queue()\n    found = False\n    for i in range(N):\n        queue.push(inp2[i])\n        queue_document.push(i)\n    while(True):\n        max_val = queue.max()\n        current_priority = queue.pop()\n        current_document = queue_document.pop()\n        if (current_priority >= max_val):\n            count += 1\n            if(current_document == index):\n                print(count)\n                found = True\n        else:\n            queue.push(current_priority)\n            queue_document.push(current_document)\n        if found is True:\n            break\n\n"}, {"id": 10421387, "name": "\uc8fc\uc0c1\uc6b1", "x": 12.181912422180176, "y": -1.0714060068130493, "label": 0, "group": 185, "code": "import sys\n\ntc = int(sys.stdin.readline())\n\nfor t in range(tc):\n    n, m = map(int, sys.stdin.readline().split())\n    importants = list(map(int, sys.stdin.readline().split()))\n\n    queue = []\n    for i in range(n):\n        queue.append([i])\n        queue[i].append(importants[i])\n\n    importants = sorted(importants)\n    importants.reverse()\n\n    cnt = 0\n    while True:\n        if importants[0] == queue[0][1]:\n            cnt += 1\n            if queue[0][0] == m:\n                break\n            queue.remove(queue[0])\n            importants.remove(importants[0])\n        else:\n            queue.append(queue[0])\n            queue.remove(queue[0])\n    print(cnt)"}, {"id": 36799923, "name": "\uc1a1\ud0dc\uc740", "x": 10.05649471282959, "y": 22.85851287841797, "label": 0, "group": 185, "code": "import sys\ntest = int(sys.stdin.readline())\nfor i in range(test) :\n  n, m = map(int, sys.stdin.readline().split())\n  q = list(map(int, sys.stdin.readline().split()))\n  check = [True if i == m else False for i in range(n)]\n  count = 0\n  while True :\n    max_idx = q.index(max(q))\n    if check[max_idx] == True :\n      print(count + 1)\n      break\n    else :\n      q = q[max_idx + 1 :] + q[: max_idx]\n      check = check[max_idx + 1 :] + check[: max_idx]\n      count += 1"}, {"id": 22831176, "name": "\uae40\ud558\ub298", "x": -18.170673370361328, "y": -25.329248428344727, "label": 0, "group": 185, "code": "t = int(input())\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    \n    queue = list(map(int, input().split()))\n\n    \n    #print(queue)\n\n    idx = list(range(len(queue)))\n    idx[m] = 'target'\n    \n#     print(idx)\n    \n    order = 0\n    while True:\n        if queue[0] == max(queue):\n            order+=1\n                \n            if( idx[0] == 'target'):\n                print(order)\n                break\n                \n            else:\n\n                x = queue.pop(0)\n                idx.pop(0)\n#                 print('pop', x)\n                \n        else:\n            queue.append(queue.pop(0))\n            idx.append(idx.pop(0))\n            \n#         print(idx)\n#         print(queue)"}, {"id": 20997952, "name": "\uc624\uc5f0\uc11c", "x": -26.812744140625, "y": 21.96901512145996, "label": 0, "group": 186, "code": "case = int(input())\n\nfor _ in range(case):\n    N, M = map(int, input().split())\n    # https://dojang.io/mod/page/view.php?id=2179\n    # N, M = input().split()\n    # N = int(N)\n    # M = int(M)\n    \n    print_list = list(map(int, input().split()))\n    prior_number = [] # prior number\uc5d0 \ubaa8\ub4e0 \uc218\ub97c \ub123\uc5b4 \uc6b0\uc120\uc21c\uc704\uc758 max \uc22b\uc790 \ud655\uc778\ud560 \ub54c \uc4f4\ub2e4\n\n    # \uc6b0\uc120\uc21c\uc704\ub97c \ud0d0\uc0c9\ud558\uae30 \uc704\ud55c \ub9ac\uc2a4\ud2b8\n    for doc in print_list:\n        prior_number.append(doc) # \ubb38\uc11c\ub97c prior_number \ub9ac\uc2a4\ud2b8\uc5d0 \ub123\uc5b4\uc8fc\uae30\n            \n    # queue \uc548\uc5d0 index\ub97c \ub123\uc5b4 \ud0d0\uc0c9    \n    result = [0 for _ in range(N)] # [(\ubcc0\uc218\ub97c \ud65c\uc6a9\ud55c \uac12) for (\uc0ac\uc6a9\ud560 \ubcc0\uc218\uc774\ub984) in (\uc21c\ud68c\ud560 \uc218 \uc788\ub294 \uac12)]\n    queue = [i for i in range(N)]\n    sequence = 1 # sequence\ub85c \ud574\ub2f9 \uc22b\uc790\uac00 \uba87 \ubc88\uc9f8\ub85c \uaebc\ub0b4\uc9c0\ub294 \uc9c0\ub97c \ud45c\uc2dc\ud55c\ub2e4\n    \n    while queue:\n        if print_list[queue[0]] == max(prior_number):\n        # queue \uc758 \uccab\ubc88\uc9f8 \uc790\ub9ac \uc22b\uc790\uac00 prior_number \ub9ac\uc2a4\ud2b8 \uc548\uc758 \uac00\uc7a5 \ub192\uc740 \uc22b\uc790\ub77c\uba74\n        \n            prior_number.remove(max(prior_number))\n            # \uadf8 \ubb38\uc11c\ub97c prior_number \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \uc81c\uac70\ud558\uace0\n            # result \ub9ac\uc2a4\ud2b8\uc548\uc5d0 \ub2f4\uc544\uc90c\n            result[queue.pop(0)] = sequence\n            # pop(x)\ub294 \ub9ac\uc2a4\ud2b8\uc758 x\ubc88\uc9f8 \uc694\uc18c\ub97c \ub3cc\ub824\uc8fc\uace0 \uadf8 \uc694\uc18c\ub97c \uc0ad\uc81c\ud55c\ub2e4\n            \n            sequence += 1\n            # \ub9cc\uc57d 4,3,2,1 \uc21c\uc73c\ub85c \ub2f4\uaca8\uc838 \uc788\ub2e4\uba74 1\uc740 4\ubc88\uc9f8\ub85c \uaebc\ub0b4\uc9d0\n        \n        else:\n            queue.append(queue.pop(0))\n            # \uac00\uc7a5 \ub192\uc740 \uc22b\uc790\uac00 \uc544\ub2c8\ub77c\uba74 queue\uc758 \uccab\ubc88\uc9f8 \uc694\uc18c\ub97c queue\uc758 \ub4b7\ubd80\ubd84\uc73c\ub85c \ub2e4\uc2dc \ubcf4\ub0c4\n            # \uc55e\uc790\ub9ac\uc5d0\uc11c \ub4b7\ubd80\ubd84\uc73c\ub85c \ubcf4\ub0c4 => \uc55e\uc790\ub9ac\uc5d0\uc11c \uc81c\uac70 + \ub4b7\uc790\ub9ac\uc5d0 \ucd94\uac00\n            \n    print(result[M])"}, {"id": 33706908, "name": "\ucd5c\uc218\uc885", "x": -22.75135040283203, "y": 2.6967930793762207, "label": 0, "group": 186, "code": "import sys\n# \uc22b\uc790 \ud558\ub098 \uc785\ub825\n# num = int(sys.stdin.readline())\n\n# \ubb38\uc790 \ud558\ub098 \uc785\ub825\n# input = sys.stdin.readline()\n\n# \uc22b\uc790\uc5f4 \uc785\ub825\n# input = list(map(int,sys.stdin.readline().split()))\n\ntestCount = int(sys.stdin.readline())\n\nclass doc:\n    def __init__(self,score, isTarget):\n        self.score =score\n        self.isTarget = isTarget\n\n\n\nret = []\nfor _ in range(testCount):\n    docCnt, checkIdx = map(int,sys.stdin.readline().split())\n    docscores = list(map(int,sys.stdin.readline().split()))\n    docDatas = [doc(docscores[idx],idx == checkIdx) for idx in range(len(docscores))]\n\n    ordval = 0\n    while True:\n        curDoc = docDatas.pop(0)\n        bestScore = True\n        for d in docDatas:\n            if curDoc.score < d.score:\n                docDatas.append(curDoc)\n                bestScore = False\n                break\n        if bestScore:\n            ordval += 1\n            if curDoc.isTarget:\n                ret.append(ordval)\n                break\n\n[print(n) for n in ret]\n\n\n"}, {"id": 32029043, "name": "\uc724\uc2dc\uc724", "x": -1.7784209251403809, "y": -20.97994613647461, "label": 0, "group": 186, "code": "\nimport sys\ninput =sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    importance= list(map(int,input().split())) \n    cnt=0\n    while True:\n        if len(importance)==1:\n            cnt+=1\n            break\n        elif importance[0] < max(importance[1:]):\n            importance.append(importance.pop(0))\n            m-=1\n            if m < 0:\n                m=len(importance)-1\n        else:\n            cnt+=1\n            if m ==0:\n                break\n            importance.pop(0)\n            m-=1\n    print(cnt)"}, {"id": 18152597, "name": "\uc774\uc774\uacbd", "x": -17.66632652282715, "y": -5.704692840576172, "label": 0, "group": 186, "code": "class Node():\n    def __init__(self, target, imp):\n        self.target = target\n        self.imp = imp\n    \n    \nn = int(input())\nfor _ in range(n):\n    k,t = map(int, input().split())\n    impli = list(map(int,input().split()))  #list\n    q = []\n    for i in range(k):\n        q.append(Node(False, impli[i]))\n    q[t].target = True\n    \n\n    count = 0\n    while True:\n        p = q[0]\n        if p.imp == max(impli):\n            if p.target:\n                break\n            impli.remove(p.imp)\n            q.pop(0)\n            count +=1\n        else:\n            q.append(q.pop(0))\n    count +=1\n    print(count)\n    "}, {"id": 32250416, "name": "\ud604\uc6b0", "x": -18.865135192871094, "y": -10.37834358215332, "label": 0, "group": 187, "code": "import sys\n\nT = int(sys.stdin.readline())\nfor _ in range(T):\n    printer = []\n    p_dict={}\n    order = 1\n    N,M = map(int,sys.stdin.readline().split())\n    printer = list(map(int,sys.stdin.readline().split()))\n    for i in printer:\n        if p_dict.get(i) is None:\n            p_dict[i] = 1\n        else:\n            p_dict[i] +=1\n    while True:\n        if M == 0:\n            if max(p_dict)==printer[0]:\n                sys.stdout.write(str(order)+'\\n')\n                break\n            else:\n                printer.append(printer[0])\n                del printer[0]\n                M = len(printer)-1\n        else:\n            if max(p_dict)==printer[0]:\n                if p_dict[printer[0]] ==1:\n                    del p_dict[printer[0]]\n                else:\n                    p_dict[printer[0]] -=1\n                del printer[0]\n                order+=1\n                M -=1\n            else:\n                M -=1\n                printer.append(printer[0])\n                del printer[0]"}, {"id": 30337816, "name": "\ud5c8\ubbfc\ud0dc", "x": -2.924860954284668, "y": -13.911886215209961, "label": 0, "group": 187, "code": "t = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    s = 0\n    while k > -1:\n        if a[0] != max(a):\n            a.append(a[0])\n            a.remove(a[0])\n            if k == 0:\n                k = len(a) - 1\n            else:\n                k -= 1\n        else:\n            a.remove(a[0])\n            s += 1\n            k -= 1\n    print(s)"}, {"id": 44069776, "name": "\uac15\uc6b0\uc120", "x": 9.933752059936523, "y": -7.211660861968994, "label": 0, "group": 187, "code": "T = int(input())\nfor i in range(0, T) :\n  N, M = map(int, input().split())\n  cnt = 1\n  end = False\n  que = list(map(int, input().split()))\n  oque = list(range(0, N))\n  ma = sorted(que, reverse = True)\n  while not end :\n    while 1 :\n      x = que.pop(0)\n      ox = oque.pop(0)\n      if x == ma[0] :\n        if ox == M :\n          print(cnt)\n          end = True\n          break\n        else :\n          cnt += 1\n          ma.pop(0)  \n      else :\n        que.append(x)\n        oque.append(ox)"}, {"id": 46207638, "name": "\uc2ec\ub2e4\uc815", "x": -10.9337158203125, "y": 20.143436431884766, "label": 0, "group": 187, "code": "from sys import stdin\nfor _ in range(int(stdin.readline())):\n  count = 0 #\uba87\ubc88\uc9f8 \ucd9c\ub825\ub418\ub294\uc9c0\n  N, K = map(int, stdin.readline().split())\n  imp = list(map(int, stdin.readline().split())) #\uc911\uc694\ub3c4\n  idx = list(range(len(imp))) #\uace0\uc720 \uc778\ub371\uc2a4 \uc800\uc7a5\n  idx[K] = 'target'\n\n  while True:\n    if imp[0] == max(imp):\n      count += 1\n      if idx[0] == 'target':\n        print(count)\n        break\n      else:\n        imp.pop(0)\n        idx.pop(0)\n    else:\n      imp.append(imp.pop(0))\n      idx.append(idx.pop(0))"}, {"id": 16506882, "name": "\uc774\uc218\ubbfc", "x": 12.934590339660645, "y": 9.788541793823242, "label": 0, "group": 188, "code": "num = int(input())\nfor i in range(num):\n    c=[]\n    count=0\n    M , N = map(int, input().split())\n    c = list(input().split())\n    ans=[0]*M\n    ans[N] = 1\n    while (1):\n        if c.index(max(c)) == 0:\n            del c[0]\n            count+=1\n            if ans[0] == 1:\n                print(count)\n                break\n            else:\n                del ans[0]\n        else:\n            c.append(c[0])\n            del c[0]\n            ans.append(ans[0])\n            del ans[0]\n\n\n\n"}, {"id": 38577847, "name": "\ubc15\uc0c1\uc6d0", "x": 8.91865348815918, "y": 15.569549560546875, "label": 0, "group": 188, "code": "import sys\ninput=sys.stdin.readline\nnum=int(input())\nanswer=[]\nfor i in range(num):\n    N,M=map(int,input().split())\n    queue_list=list(map(int,input().split()))\n    chk=[False]*N\n    chk[M]=True\n    bool=True\n    count=1\n    while(bool):\n        max_index=queue_list.index(max(queue_list))\n        if chk[max_index]==True:\n            answer.append(count)\n            bool=False\n        else:\n            queue_list=queue_list[max_index+1:]+queue_list[:max_index]\n            chk=chk[max_index+1:]+chk[:max_index]\n            count+=1\n\nprint(\"\\n\".join(str(i) for i in answer))"}, {"id": 13782313, "name": "\uc870\uc2dc\uc5b8", "x": -0.27198323607444763, "y": -15.105072975158691, "label": 0, "group": 188, "code": "for i in range(int(input())):\n    cnt = 0\n    queue = []\n    N, point = map(int,input().split())\n    lists = list(map(int,input().split()))\n    for i in range(N):\n        queue.append((i,lists[i]))\n    while True:\n        flag = True\n        temp=queue[0][1]\n        for i in range(len(queue)):\n            if queue[i][1] > temp:\n                flag = False\n                break\n        if flag:\n            k = queue.pop(0)\n            cnt +=1\n            if k[0] == point:\n                print(cnt)\n                break\n        else:\n            k = queue.pop(0)\n            queue.append(k)\n\n"}, {"id": 26460647, "name": "\uc724\uacc4\uc0c1", "x": 9.894584655761719, "y": 21.725908279418945, "label": 0, "group": 188, "code": "t = int(input())\nfor i in range(t):\n  n,m = map(int, input().split())\n  s = list(map(int, input().split()))\n  idx = [0 for i in range(n)]\n  idx[m] = 1\n\n  order = 0\n  while True:\n    if s[0]==max(s):\n      order += 1\n      if idx[0]==1:\n        print(order)\n        break\n      else:\n        s.pop(0)\n        idx.pop(0)\n    else:\n      s.append(s.pop(0))\n      idx.append(idx.pop(0))"}, {"id": 26194634, "name": "\ud48d\ud76c\uc6b0", "x": -5.528977870941162, "y": -10.83549690246582, "label": 0, "group": 189, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 23256252, "name": "\ub958\ud604\uacbd", "x": 1.490754246711731, "y": 4.142058849334717, "label": 0, "group": 189, "code": "test_case = int(input())\nfor i in range(test_case):\n    n, m = list(map(int, input().split(' ')))\n    lst = list(map(int, input().split(' ')))\n    idx = list(range(len(lst)))\n    order = 0\n\n    while True:\n        if lst[0] == max(lst):\n            order += 1\n\n            if idx[0] == m:\n                print(order)\n                break\n            else:\n                lst.pop(0)\n                idx.pop(0)\n\n        else:\n            lst.append(lst.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 26368404, "name": "\uae40\ub798\uc6d0", "x": 16.28113555908203, "y": 9.260603904724121, "label": 0, "group": 189, "code": "n = int(input())\nfor _ in range(n):\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n\n    lst = [0 for i in range(N)]\n    lst[M] = 1\n\n    num = 0\n    while True:\n        if queue[0] == max(queue):\n            num += 1\n            if lst[0] == 1:\n                print(num)\n                break\n            else:\n                del queue[0]\n                del lst[0]\n        else:\n            lst.append(lst[0])\n            del lst[0]\n            queue.append(queue[0])\n            del queue[0]"}, {"id": 21032294, "name": "\ud558\uc9c0\uc6d0", "x": 22.60845375061035, "y": 0.4451653063297272, "label": 0, "group": 189, "code": "import sys\n\nT = int(sys.stdin.readline())\n\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n    test_list = list(map(int, sys.stdin.readline().split()))\n\n    priority_list = []\n    for i in range(N):\n        priority_list.append([test_list[i], i])\n\n    count = 0\n    while (len(priority_list) > 0):\n\n        push_trig = False\n        for i in range(len(priority_list)):\n            if (priority_list[i][0] > priority_list[0][0]):\n                priority_list.append(priority_list[0])\n                priority_list.pop(0)\n                push_trig = True\n                break\n        \n        if (not push_trig):\n            count += 1\n\n            if (priority_list[0][1] == M):\n                print(count)\n                break\n\n            priority_list.pop(0)\n"}, {"id": 45999186, "name": "\uc608\ub3c4\ud604", "x": 24.51263427734375, "y": -0.7333117723464966, "label": 0, "group": 190, "code": "\nimport sys\n\nT = int(input())\n\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split())\n\n    impo = list(map(int, sys.stdin.readline().split()))\n\n    target_num = impo[M]\n\n    impo[M] = 0\n    count = 0\n\n    while True:\n\n        a = impo[0]\n\n        if impo[0] == 0:\n\n            if target_num >= max(impo) or len(impo) == 1:\n                count += 1\n                break\n\n            else:\n                impo.pop(0)\n                impo.append(a)\n\n\n        elif a == max(impo) and a >= target_num:\n            impo.pop(0)\n            count += 1\n\n        else:\n            impo.pop(0)\n            impo.append(a)\n\n    print(count)\n"}, {"id": 43271763, "name": "\uae40\ub3d9\uc6b1", "x": -5.130314350128174, "y": -20.60345458984375, "label": 0, "group": 190, "code": "n = int(input())\nfor _ in range(n):\n    c = 0\n    length, idx = map(int, input().split())\n    arr = list(map(int, input().split()))\n    \n    while True:\n        #print(arr, idx)\n        m = max(arr)\n        if idx==0:\n            if arr[0] == m:\n                c+=1\n                break\n            idx = len(arr)-1\n            arr.append(arr.pop(0))\n             \n        elif arr[0] == m:\n            c+=1\n            arr.pop(0)\n            idx-=1\n        else:\n            arr.append(arr.pop(0))\n            idx-=1\n    print(c)\n            \n"}, {"id": 6175280, "name": "\ubb38\ubbfc\uc815", "x": 23.056846618652344, "y": 8.759126663208008, "label": 0, "group": 190, "code": "import sys\nread = lambda : sys.stdin.readline().replace('\\n', '')\n\nnum = int(read())\nfor i in range(num):\n    n, m = map(int, read().split())\n    arr = list(map(int, read().split()))\n    pq = []\n    order = 0\n    \n    for i in range(len(arr)):\n        pq.append({\"priority\":arr[i], \"index\":i})\n    \n    while True:\n        a = pq.pop(0)\n        top = True\n        for p in pq:\n            if p[\"priority\"] > a[\"priority\"]:\n                top = False\n                break\n        if top == False:\n            pq.append(a)\n        else:\n            order += 1\n            if a[\"index\"] == m:\n                break\n    print(order)\n   "}, {"id": 10947424, "name": "\uc724\uc2b9\uc544", "x": 16.478403091430664, "y": -12.669095039367676, "label": 0, "group": 190, "code": "def check_order(first_order, arr):\n    for item in arr:\n        if item[1] > first_order:\n            return True\n\n    return False\n\n\nn = int(input())\n\nfor i in range(n):\n    tt = input().split()\n    arr_size = int(tt[0])\n    target = int(tt[1])\n    order_cnt = 0\n\n    arr = [int(x) for x in input().split()]\n    qq = [(idx, x) for idx, x in enumerate(arr)]\n\n    while len(qq) != 0:\n        first_node = qq[0]\n        del qq[0]\n\n        if check_order(first_node[1], qq):\n            qq.append(first_node)\n        else:\n            order_cnt += 1\n\n            if first_node[0] == target:\n                print(order_cnt)\n                break\n"}, {"id": 35836678, "name": "\ubc31\uba85\ud6c8", "x": 12.967916488647461, "y": 1.6445581912994385, "label": 0, "group": 191, "code": "t = int(input())\n\nfor i in range(t):\n    n,m = map(int,input().split())\n    paper = list(map(int,input().split()))\n    \n    cnt = 1\n    while 1:\n        if m == 0 and paper[0] == max(paper):\n            print(cnt)\n            break\n        else:\n            if paper[0] == max(paper):\n                paper.pop(0)\n                m -= 1\n                cnt += 1\n            else:\n                paper.append(paper.pop(0))\n                m  = m - 1 if m > 0 else len(paper) -1\n        \n\n\n"}, {"id": 20761227, "name": "\uc784\ud615\ubbfc", "x": 24.18306541442871, "y": 41.49795150756836, "label": 0, "group": 191, "code": "import sys\ninput = sys.stdin.readline\n\ndef solution(m: int):\n\trst = 1\n\twhile True:\n\t\tmx = max(Q)\n\t\tif Q[0] == mx:\n\t\t\tif m == 0: return rst\n\t\t\tQ.pop(0)\n\t\t\tm -= 1; rst += 1\n\t\telse:\n\t\t\tif m == 0:\n\t\t\t\tm = len(Q)\n\t\t\tQ.append(Q.pop(0)); m -= 1\n\nT = int(input())\nfor _ in range(T):\n\tN, M = map(int, input().split())\n\tQ = list(map(int, input().split()))\n\tprint(solution(M))"}, {"id": 38507989, "name": "\uae40\uc601\uad11", "x": 9.489126205444336, "y": -14.346748352050781, "label": 0, "group": 191, "code": "import sys\nfor _ in range(int(sys.stdin.readline())):\n    n, m = map(int, sys.stdin.readline().split())\n    p = list(map(int, sys.stdin.readline().split()))\n    idx = [0] * len(p)\n    idx[m] = 1\n    count = 0\n    while 1:\n        if p[0] == max(p):\n            count += 1\n            del p[0]\n            if idx[0] == 1:\n                print(count)\n                break\n            else: del idx[0]\n        else:\n            p.append(p.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 35138396, "name": "\ub0a8\uad81\ub3d9\uc6b0", "x": -27.3742618560791, "y": 20.88835334777832, "label": 0, "group": 191, "code": "import sys\ninput = sys.stdin.readline\n# \uba87\ubc88 \ub3cc\ub9b4\uc9c0\nforCnt =int(input())\n\nfor i in range(forCnt):\n\tN ,M = map(int, input().split());\n\tA = list(map(int, input().split()))\n    # B \ub9ac\uc2a4\ud2b8\ub294 \ud604\uc7ac A \ub9ac\uc2a4\ud2b8 M \ubc88\uc9f8\uc758 \uc704\uce58\ub97c \ud45c\uc2dc\n\tB = [0] * N\n    # \ud604\uc7ac M \uc704\uce58\ub294 1\ub85c \ud45c\uc2dc\n\tB[M] = 1;\n    # \uc815\ub2f5\uc774 \ub420 count\n\tcount = 0;\n\twhile(True):\n        # \ud604\uc7ac A \ub9ac\uc2a4\ud2b8\uc758 \uc6b0\uc120\uc21c\uc704 \ucd5c\ub313\uac12\uacfc \ud604\uc7ac A \ub9ac\uc2a4\ud2b8 \ub9e8 \uc55e \uc6b0\uc120\uc21c\uc704 \uac12\uc744 \ube44\uad50\n\t\tif A[0] == max(A):\n            # \ud604\uc7ac A \ub9ac\uc2a4\ud2b8 \ub9e8 \uc55e \uac12\uc774 \uc6b0\uc120 \uc21c\uc704\uac00 \uc81c\uc77c \ub192\uc740\uba74 A\ub97c pop\n\t\t\tA.pop(0);\n            # \ubc29\uae08 \ubf51\uc740\uac8c \uc6b0\ub9ac\uac00 \ubf51\uc544\uc57c\ud560 \uce5c\uad6c\uba74 break \n\t\t\tif(1 == B.pop(0)):\n\t\t\t\tbreak;\n            # \uc544\ub2c8\uba74 \n\t\t\tcount += 1;\n\t\telse:\n            # \ud604\uc7ac A \ub9ac\uc2a4\ud2b8 \ub9e8 \uc55e \uac12\uc774 \uc6b0\uc120 \uc21c\uc704\uac00 \uc81c\uc77c \ub192\uc9c0 \uc54a\uc73c\uba74 A,B \ub9ac\uc2a4\ud2b8\uc758 \ub9e8 \uc55e \uac12\uc744 \ub9e8 \ub4a4\ub85c \u3147\u3147\n\t\t\tA.append(A.pop(0))\n\t\t\tB.append(B.pop(0))\n\tprint(count+1)"}, {"id": 12388211, "name": "\ud5c8\uc900\ud638", "x": -7.866211414337158, "y": -26.96084213256836, "label": 0, "group": 192, "code": "for _ in range(int(input())):\n    N, M = map(int,input().split())\n    docs = list(map(int, input().split()))\n\n    cnt = 0\n\n    while True:\n        if M == 0:\n            if docs[M] < max(docs):\n                docs.append(docs[M])\n                del docs[0]\n                M = len(docs) - 1\n            else : #docs[M] = max(docs)\n                cnt+=1\n                break\n        else: #M != 0\n            if docs[0] < max(docs):\n                docs.append(docs[0])\n                del docs[0]\n                M -= 1\n            else : #docs[0] = max(docs)\n                del docs[0]\n                cnt+=1\n                M -= 1\n    print(cnt)"}, {"id": 19348788, "name": "\uc774\uc218\uc815", "x": -13.42920207977295, "y": -16.29349136352539, "label": 0, "group": 192, "code": "import sys\n\ncase=int(sys.stdin.readline())\nfor i in range(case):\n    n,m=list(map(int,sys.stdin.readline().split()))\n    task=list(map(int, sys.stdin.readline().split()))\n    if n==1:\n        print(1)\n        continue\n    seq=[]\n    for t in range(n):\n        seq.append(t)\n    # print(arr)\n    count=0\n    # \n    # print(seq)\n    # print(task)\n    while True:\n        maxnum=max(task)\n        a=task.pop(0)\n        temp=seq.pop(0)\n        # print(a)\n        if maxnum==a:\n            if m == temp:\n                print(n - len(task))\n                task = []\n                break\n        if a < maxnum:\n                task.append(a)\n                seq.append(temp)\n\n\n\n"}, {"id": 29201383, "name": "\ud5c8\uc0c1\uc6b0", "x": -26.07748794555664, "y": 22.6141300201416, "label": 0, "group": 192, "code": "# \ud504\ub9b0\ud130 \ud050\n# \uc6b0\uc120\uc21c\uc704 \ud050 \uc0ac\uc6a9\n# \uc774\uac74 \uacb0\uad6d \ub85c\uc9c1 \uc790\uccb4\ub97c \uc9c1\uc811 \uad6c\ud604\ud574\uc57c \ud560 \uac83 \uac19\ub2e4.\n\nif __name__ == '__main__':\n    # TestCase\ub9cc\ud07c \uc2e4\ud589\n    for _ in range(int(input())):\n        # N: \ud050\uc758 \ud06c\uae30\n        # M: \ub098\uc911\uc5d0 \uc21c\uc11c \ud655\uc778\ud560 \ud050 \uc18d \uc694\uc18c\uc758 index\n        N,M = map(int, input().split())\n        q = list(map(int, input().split()))\n        indexes = list(range(len(q)))\n\n        indexes[M] = 'value of M index'\n\n        # \uc21c\uc11c\n        order = 0\n        # loop\n        while True:\n            # \uc870\uac74 1. \ud604\uc7ac \uac00\uc7a5 \ub9e8 \uc55e\uc5d0 \uc788\ub294 \uc694\uc18c\uc758 \uc6b0\uc120\uc21c\uc704(\uac12 \uc790\uccb4)\ubcf4\ub2e4 \ud070 \uac12\uc774 \uc788\ub294\uc9c0?\n            if q[0] == max(q):\n                order += 1\n\n                # \uc870\uac74 2. \ud604\uc7ac \ub9e8 \uc55e\uc758 indexes \uac12\uc774 'value of M'\uc774\ub0d0? (\uc6b0\ub9ac\uac00 \ucc3e\ub358\uac83\uc774\uba74 loop \ud0c8\ucd9c)\n                if indexes[0] == 'value of M index':\n                    print(order)\n                    break\n                # \ucd5c\ub313\uac12\ub3c4, value of M\ub3c4 \uc544\ub2c8\uba74 \uadf8\ub0e5 \uc5c6\uc564\ub2e4\n                else:\n                    q.pop(0)\n                    indexes.pop(0)\n            # \uc870\uac74 1\uacfc \uc77c\uce58\ud558\uc9c0 \uc54a\uc73c\uba74 \ub9e8 \ub4a4\ub85c \ubcf4\ub0b8\ub2e4\n            else:\n                q.append(q.pop(0))\n                indexes.append(indexes.pop(0))\n"}, {"id": 13082297, "name": "\uc2ec\ud64d\uc11d", "x": -36.51277542114258, "y": -1.9766398668289185, "label": 0, "group": 192, "code": "class ListNode:\n    def __init__(self, data=0):\n        self._data = data\n        self._next = None\n        self._prev = None\n\n    def __repr__(self):\n        return \"ListNode (data: %s)\" % str(self.data())\n\n    def data(self):\n        return self._data\n    \n    def next(self):\n        return self._next\n\n    def prev(self):\n        return self._prev\n\n    def setdata(self, data):\n        self._data = data\n\n    def setnext(self, next):\n        self._next = next\n\n    def setprev(self, prev):\n        self._prev = prev\n    \n\nclass Deque:\n    def __init__(self):\n        self._last = None\n        self._count = 0\n\n    def __repr__(self):\n        if self.empty():\n            return \"[]\"\n\n        o=\"[\"\n        o+=\"%s\" % str(self.first().data())\n        cur = self.first().next()\n        while cur != self.first():\n            o+=\",%s\" % cur.data()\n            cur = cur.next()\n        o+=\"]\"\n        return o\n\n    def first(self):\n        if self._last == None:\n            return None\n        return self.last().next()\n\n    def last(self):\n        return self._last\n    \n    def pushfront(self, data):\n        self._count += 1\n        if self._last == None:\n            new = ListNode(data)\n            new.setnext(new)\n            new.setprev(new)\n            self._last = new\n            return\n\n        new = ListNode(data)\n        new.setnext(self.first())\n        new.setprev(self.last())\n        self.first().setprev(new)\n        self.last().setnext(new)\n\n        \n\n    def pushback(self, data):\n        self._count += 1\n        if self._last == None:\n            new = ListNode(data)\n            new.setnext(new)\n            new.setprev(new)\n            self._last = new\n            return\n\n        new = ListNode(data)\n        new.setnext(self.first())\n        new.setprev(self.last())\n        self.first().setprev(new)\n        self.last().setnext(new)\n        \n        self._last = new\n        \n\n    def popfront(self):\n        \n        if self.size() == 1:\n            old = self.last()\n            self._last = None\n            self._count -= 1\n            return old.data()\n\n        first = self.first()\n        first.next().setprev(self.last())\n        self.last().setnext(first.next())\n\n        self._count -= 1\n        \n        return first.data()\n        \n\n    def popback(self):\n        \n        if self.size() == 1:\n            old = self.last()\n            self._last = None\n            self._count -= 1\n            return old.data()\n\n        \n\n        self._last = self.last().prev()\n        \n        return self.popfront()\n        \n\n\n    def size(self):\n        return self._count\n\n    def empty(self):\n        return self.size() == 0\n\n    def shiftleft(self, count=1):\n        for _ in range(count):\n            self._last = self.last().next()\n\n    def shiftright(self, count=1):\n        for _ in range(count):\n            self._last = self.last().prev()\n\n    def findtoright(self, target):\n        cnt = 0\n        cur = self.first()\n        while cur.data()[1] != target:\n            cnt+=1\n            cur = cur.next()\n        return (cnt, cur)\n\n\n    def setfirst(self, first):\n        self._last = first.prev()\n    \n\n\n\nt = int(input())\nfor _ in range(t):\n    n,m = map(int, input().split())\n    pri = [int(x) for x in input().split()]\n\n    deque = Deque()\n    for i in range(len(pri)):\n        deque.pushback((i, pri[i]))\n    \n    pri.sort(reverse=True)\n    cnt = 0\n    for i in pri:\n        cnt += 1\n        s, node = deque.findtoright(i)\n        if node.data()[0] == m:\n            break\n        deque.setfirst(node)\n        deque.popfront()\n    print(cnt)\n\n"}, {"id": 22533197, "name": "\ucc9c\uc815\uba85", "x": -25.68392562866211, "y": 20.59613037109375, "label": 0, "group": 193, "code": "import heapq as hq\nn_test = int(input())\nfor _ in range(n_test):\n    N, M = map(int, input().split())\n    #N : \ubb38\uc11c\uc758 \uc218 \n    #M : \uad81\uae08\ud55c \ubb38\uc11c\uc758 \ud604\uc7ac \uc704\uce58\n    '''\n    \uac00\uc7a5 \uc55e\uc5d0 \uc788\ub294 \ubb38\uc11c\uc758 \uc911\uc694\ub3c4 \ud655\uc778\n    \ub098\uba38\uc9c0 \ubb38\uc11c\ub4e4\uc911 \ud604\uc7ac \ubb38\uc11c\ubcf4\ub2e4 \uc911\uc694\ub3c4\uac00 \ub192\uc740 \ubb38\uc11c\uac00\n    \ud558\ub098\ub77c\ub3c4 \uc788\ub2e4\uba74 Q\uc5d0 \uac00\uc7a5 \ub4a4\uc5d0 \ubc30\uce58\n\n    \ud604\uc7ac \uac00\uc7a5 \uc911\uc694\ud55c \n    '''\n    importance =list(map(int, input().split())) #N\uac1c\uc758 \ubb38\uc11c\uc5d0 \ub300\ud55c \uc911\uc694\ub3c4\n    priority = sorted(importance, reverse=True)\n    importance =[(i, False) if idx!= M else (i, True) for idx, i in enumerate(importance)]\n    cnt =1\n  \n    while importance:\n        p = priority.pop(0)\n        while importance[0][0] != p:\n            importance.append(importance.pop(0))\n            \n        i = importance.pop(0)\n        if i[1]:\n            print(cnt)\n            break\n        else:\n            cnt +=1"}, {"id": 42143148, "name": "\ubcf5\uc720\ubbfc", "x": -5.825794219970703, "y": -10.06219482421875, "label": 0, "group": 193, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 26550819, "name": "\uc720\uc9c0\ud0dc", "x": -17.710866928100586, "y": 15.042449951171875, "label": 0, "group": 193, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split( )))\n    imp = list(map(int, input().split( )))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n    \n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))    "}, {"id": 29835703, "name": "\uc11c\ud6a8\ub9bc", "x": -17.70318031311035, "y": 3.6880650520324707, "label": 0, "group": 193, "code": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nimport sys\n\n\ndef solve(N, M, priorities):\n    count = [0 for _ in range(10)]\n    max_priority = 0\n    for p in priorities:\n        count[p] += 1\n        if max_priority < p:\n            max_priority = p\n\n    docs = [(i, priorities[i]) for i in range(len(priorities))]\n    order = 0\n    while 0 < len(docs):\n        doc = docs.pop(0)\n        if doc[1] == max_priority:\n            order += 1\n            if doc[0] == M:\n                return order\n            count[max_priority] -= 1\n            while count[max_priority] == 0 and 0 < max_priority:\n                max_priority -= 1\n        else:\n            docs.append(doc)\n    return -1\n\n\nif __name__ == \"__main__\":\n    T = int(sys.stdin.readline().strip())\n    for _ in range(T):\n        args = sys.stdin.readline().strip().split()\n        N = int(args[0])\n        M = int(args[1])\n        priorities = [int(t) for t in sys.stdin.readline().strip().split()]\n\n        print(solve(N, M, priorities))\n"}, {"id": 19404343, "name": "\ud0c1\uacbd\uc2dd", "x": 16.330625534057617, "y": 12.183753967285156, "label": 0, "group": 194, "code": "import sys\ninput = sys.stdin.readline\n\na = int(input())\n\nfor i in range(a):\n    n,m = map(int, input().split())\n    infortant = list(map(int,input().split()))\n    check = [0] * n\n    check[m] = 1\n    cnt = 0\n    while 1:\n        if infortant[0] == max(infortant):\n            cnt += 1\n            infortant.pop(0)\n\n            if check[0] == 1:\n                print(cnt)\n                break\n            check.pop(0)\n\n        else:\n            infortant.append(infortant[0])\n            del infortant[0]\n\n            check.append(check[0])\n            del check[0]\n"}, {"id": 13306202, "name": "\ub0a8\ud604\ucca0", "x": -36.055633544921875, "y": -2.6760730743408203, "label": 0, "group": 194, "code": "import sys\n\nclass queue:\n    def __init__(self):\n        self.items = []\n\n    def push(self,item):\n        self.items.append(item)\n\n    def pop(self):\n        if self.isEmpty():\n            return -1\n        return self.items.pop(0)\n\n    def size(self):\n        return len(self.items)\n\n    def isEmpty(self):\n        if self.items:\n            return 0\n        return 1\n\n    def front(self):\n        if self.isEmpty():\n            return -1\n        return self.items[0]\n\n    def back(self):\n        if self.isEmpty():\n            return -1\n        return self.items[self.size() - 1]\n\n    def print(self):\n        for i in range(0, self.size()):\n            print(self.items[i])\n\n    def max(self):\n        return max(self.items)\n    \n\nif __name__ == \"__main__\":\n    testCase = int(sys.stdin.readline())\n    for i in range(0, testCase):\n        numQue = queue()\n        checkQue = queue()\n        InputData = sys.stdin.readline().split()\n        N = int(InputData[0])\n        M = int(InputData[1])\n        InputData = sys.stdin.readline().split()\n        for j in range(0, N):\n            numQue.push(InputData[j])\n            if j == M:\n                checkQue.push(1)\n            else:\n                checkQue.push(0)\n\n        count = 0\n\n        # \ubc18\ubcf5\n        while(1):\n        # \ucd5c\uace0 \uc911\uc694\ub3c4 \uc120\uc815\n            maxImportance = numQue.max()\n\n            # \ucd5c\uace0 \uc911\uc694\ub3c4 \ub098\uc62c\ub54c\uae4c\uc9c0 que\ub97c \ube7c\uace0 \ub123\uae30\n            while(1):\n                temp = numQue.pop()\n                check = checkQue.pop()\n                # \ub098\uc62c\uacbd\uc6b0 count +1\n                # \ub9de\uc744 \uacbd\uc6b0 \uc885\ub8cc, \uc544\ub2c8\uba74 \ubc18\ubcf5\n                if maxImportance == temp:\n                    count += 1\n                    break\n                else:\n                    numQue.push(temp)\n                    checkQue.push(check)\n            # M\uc5d0 \ud574\ub2f9\ud558\ub294\uc9c0 \ud655\uc778\n            if check == 1:\n                break\n\n        print(count)"}, {"id": 25764804, "name": "\uc624\uaddc\ud76c", "x": 23.144874572753906, "y": -3.807415246963501, "label": 0, "group": 194, "code": "test_case=int(input())\n\nfor _ in range(test_case):\n    t,answer=list(map(int, input().split(' ')))\n    rank=list(map(int, input().split(' ')))\n\n    count=0\n\n    # m=max()\n    while True:\n        m=max(rank)\n        p=rank.pop(0)\n        if p==m:\n            count+=1\n            if answer==0:\n                print(count)\n                break\n            else:\n                answer-=1  \n            \n        else:\n            rank.append(p)\n            answer-=1\n            if answer==-1:\n                answer=len(rank)-1\n"}, {"id": 46011169, "name": "\uc11c\ud61c\ubbf8", "x": 24.41193962097168, "y": 16.333410263061523, "label": 0, "group": 194, "code": "import sys\ntestcase = int(input())\nfor q in range(testcase):\n    n,m = sys.stdin.readline().split()\n    imp = sys.stdin.readline().split()\n    for i in range(len(imp)):\n        imp[i] = int(imp[i])\n    impar = sorted(list(set(imp)))\n    impar.reverse()\n    m = int(m)\n\n    count = 0\n    jfix = 0\n    for i in range(impar.index(imp[m])+1):\n        for j in range(jfix, jfix + len(imp)):\n            if imp[j%len(imp)] == impar[i]:\n                count += 1\n                jfix = j\n                if j%len(imp) == m:\n                    print(count)\n                    break"}, {"id": 39169185, "name": "\uc2ec\uc131\uc8fc", "x": -11.29443645477295, "y": -12.803777694702148, "label": 0, "group": 195, "code": "import sys\n\n# sys.stdin.readline().rstrip()\nfor _ in range(int(sys.stdin.readline())):\n    n, m = map(int, sys.stdin.readline().split())\n    l = list()\n    cnt = 0\n    for i in sys.stdin.readline().split():\n        l.append(i)\n    remain = list(reversed(sorted(l)))\n    p = 0\n    length = len(l)\n    importance = remain.pop(0)\n    while True:\n        if importance == l[p]:\n            cnt += 1\n            if p < m:\n                m -= 1\n            elif p == m:\n                print(cnt)\n                break\n            l.pop(p)\n            length -= 1\n            importance = remain.pop(0)\n        else:\n            p += 1\n        if p == length:\n            p = 0\n"}, {"id": 22382578, "name": "\uad8c\ubbfc\uc625", "x": -4.984321594238281, "y": -10.397392272949219, "label": 0, "group": 195, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 23412474, "name": "\uc774\uc9c0\ubbfc", "x": -21.56201934814453, "y": -12.528785705566406, "label": 0, "group": 195, "code": "import sys\nrep=int(sys.stdin.readline())\nfor loop in range(rep):\n    n,m=list(map(int,sys.stdin.readline().split()))\n    queue=list(map(int,sys.stdin.readline().split()))\n    ans,targetPri=1,queue[m]\n    count={9:0,8:0,7:0,6:0,5:0,4:0,3:0,2:0,1:0}\n    for x in queue: count[x]+=1\n    for p in count:\n        if count[p]>0:\n            maxPri=p\n            break\n    for p in count:\n        if p==targetPri: break\n        ans+=count[p]\n    lastIdx=n-1\n    if maxPri==targetPri: lastIdx-=1\n    while maxPri>targetPri:\n        for i in range(lastIdx,lastIdx-n,-1):\n            if queue[i%n]==maxPri:\n                lastIdx=(i-1)%n\n                break\n        for i in range(maxPri-1,0,-1):\n            if count[i]>0:\n                maxPri=i\n                break\n    for i in range(lastIdx+2,lastIdx+n+2):\n        if i%n==m:break\n        if queue[i%n]==targetPri: ans+=1\n    print(ans)"}, {"id": 26554905, "name": "\uc131\uc720\uacbd", "x": -0.1174735277891159, "y": -24.5057315826416, "label": 0, "group": 195, "code": "for _ in range(int(input())):\n    count = 0\n    n,crr = map(int,input().split())\n    que = list(map(int,input().split()))\n    while crr > -1:\n        while crr:\n            if que[0] < max(que):\n                que.append(que[0])\n            else:\n                count += 1\n            del que[:1]\n            crr -= 1\n        if que[crr] < max(que):\n            que.append(que[crr])\n            del que[:1]\n            crr = len(que)-1\n        else:\n            count += 1\n            crr -= 1\n    print(count)"}, {"id": 31516942, "name": "\ub178\uc2b9\uc2dd", "x": -6.573827266693115, "y": -7.280736446380615, "label": 0, "group": 196, "code": "import sys\ntest=int(sys.stdin.readline())\nfor _ in range(test):\n    print_length,point=map(int,sys.stdin.readline().split(' '))\n    s=list(map(int,sys.stdin.readline().split(' '))) \n    count=0\n    s_=[0 for _ in range(print_length)] \n    s_[point]=1\n    while True:\n        if s[0]==max(s):\n            count+=1\n            if s_[0]==1:\n                print(count)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]\n        \n"}, {"id": 36606331, "name": "\uc804\ud558\uc740", "x": -4.1291327476501465, "y": 0.6627448201179504, "label": 0, "group": 196, "code": "import sys\ninput = sys.stdin.readline\nn = int(input())\nfor _ in range(n):\n    i,j = map(int,input().split())\n    ranks = list(map(int,input().split()))\n    idx = list(range(i))\n    idx[j] = -1\n    order = 0\n    while True:\n        if ranks[0] == max(ranks):\n            order += 1\n            \n            if idx[0] == -1:\n                print(order)\n                break\n            else:\n                ranks.pop(0)\n                idx.pop(0)\n        else:\n            ranks.append(ranks.pop(0))\n            idx.append(idx.pop(0))\n    "}, {"id": 22670866, "name": "\uc2e0\uc815\uc219", "x": 25.935945510864258, "y": -2.566405773162842, "label": 0, "group": 196, "code": "from sys import stdin\ntest = int(stdin.readline())\n\nfor i in range(test):\n    n, idx = map(int, stdin.readline().split())\n    arr = list(map(int, stdin.readline().split()))\n\n    m = max(arr)\n    count = 0\n\n    while True:\n        first = arr.pop(0)\n        if first == m:\n            count += 1\n            if idx == 0:\n                break\n            else:\n                idx -= 1\n            m = max(arr)\n        else:\n            arr.append(first)\n            if idx == 0:\n                idx = len(arr) - 1\n            else:\n                idx -= 1\n\n    print(count)\n"}, {"id": 36589808, "name": "\uc815\uc2dc\uc900", "x": -8.511526107788086, "y": -7.942587375640869, "label": 0, "group": 196, "code": "t = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    li = list(map(int, input().split()))\n    li_ = [0] * n\n    li_[m] = 1\n    cnt = 0\n    while True:\n        if (li[0] == max(li)):\n            cnt += 1\n            if (li_[0] == 1):\n                print(cnt)\n                break\n            else:\n                del li[0]\n                del li_[0]\n        else:\n            li.append(li[0])\n            del li[0]\n            li_.append(li_[0])\n            del li_[0]\n\n#4 2\n#li =  [1 2 3 4]    [1,2,3]\n#li_ = [0,0,1,0]    [0,0,1]"}, {"id": 39775906, "name": "\ub958\ubc94\ud638", "x": -19.471200942993164, "y": 21.674177169799805, "label": 0, "group": 197, "code": "T= int(input())\n\nfor tc in range(1,T+1):\n    N,S = map(int,input().split())              # N= \ubb38\uc11c\uc758 \uac1c\uc218, S = S\ubc88\uc9f8 \ubb38\uc11c\uac00 \uc5b8\uc81c \ucd9c\ub825\ub418\ub294\uc9c0 \ud30c\uc545\n    ip = list(map(int,input().split()))\n    cnt = 0\n    bp = 0                                      #break point\n    while bp == 0:\n        max_ip = 0\n        temp = []\n        for i in ip:            #\ucd5c\ub300\uac12 \ucc3e\uae30, \ubcf5\uc0ac\n            temp.append(i)\n            if i > max_ip:\n                max_ip = i\n\n        for i in range(N):\n            if ip[i] == max_ip:\n                cnt += 1\n                temp[i] = -1\n                max_ip = max(temp)  #\uadc0\ucc2e\uc544\uc11c max\n                if i == S:\n                    bp = 1\n                    break\n        ip = temp\n    print(cnt)"}, {"id": 42481401, "name": "\ud558\ud76c\uc601", "x": 16.36461067199707, "y": 11.516887664794922, "label": 0, "group": 197, "code": "import sys\ninput=sys.stdin.readline\n\nT=int(input())\nfor _ in range(T):\n    N,M=map(int, input().split())\n    priority=list(map(int, input().split()))\n    docLocation=[0 for _ in range(N)]\n    docLocation[M]=1\n    cnt=0\n    while True:\n        if priority[0]==max(priority):\n            cnt+=1\n            if docLocation[0]==1:\n                print(cnt)\n                break\n            else:\n                del priority[0]\n                del docLocation[0]\n        else:\n            priority.append(priority[0])\n            docLocation.append(docLocation[0])\n            del priority[0]\n            del docLocation[0]"}, {"id": 22930307, "name": "\ubc31\ud615\uc6b0", "x": -5.95618200302124, "y": -6.915908336639404, "label": 0, "group": 197, "code": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 22010278, "name": "\uc870\uc138\uc815", "x": 4.935538291931152, "y": -1.6835250854492188, "label": 0, "group": 197, "code": "import sys\ns = sys.stdin.readline\nfor _ in range(int(s())):\n    n, m = map(int, s().split())\n    pos = list(range(n))\n    que = list(map(int, s().split()))\n    \n    cnt = 0\n\n    while True:\n        if que[0] != max(que):\n            que.append(que.pop(0))\n            pos.append(pos.pop(0))\n        elif pos[0] == m:\n            print(cnt + 1)\n            break\n        else:\n            que.pop(0)\n            pos.pop(0)\n            cnt += 1"}, {"id": 36881783, "name": "\uae40\ub3d9\uc644", "x": 24.715259552001953, "y": 39.96821212768555, "label": 0, "group": 198, "code": "import sys\n\nt = int(input())\nfor i in range(t):\n\tres = 0\n\tn, m = map(int, sys.stdin.readline().split())\n\tarr = list(map(int, sys.stdin.readline().split()))\n\tarr_copy = list(range(len(arr)))\n\tarr_copy[m] = 'find'\n\twhile arr:\n\t\tmax_value = max(arr)\n\t\twhile arr[0] != max_value:\n\t\t\tarr.append(arr.pop(0))\n\t\t\tarr_copy.append(arr_copy.pop(0))\n\t\tarr.pop(0)\n\t\ttmp = arr_copy.pop(0)\n\t\tres += 1\n\t\tif tmp == 'find':\n\t\t\tprint(res)\n\t\t\tbreak"}, {"id": 41241620, "name": "\uc9c0\ucc3d\uc6b1", "x": 7.589493274688721, "y": 23.343645095825195, "label": 0, "group": 198, "code": "result = []\n\nfor _ in range(int(input())):\n  n, trace = map(int, input().split())\n  li = list(map(int, input().split()))\n  count = 1\n  while True:\n    if trace != 0:\n      if li[0] != max(li):\n        li.append(li.pop(0))\n      else:\n        del li[0]\n        count += 1\n      trace -= 1\n    else:\n      if li[0] == max(li):\n        break\n      else:\n        li.append(li.pop(0))\n        trace = len(li) - 1\n  result.append(count)\n  \n\nfor count in result:\n  print(count)"}, {"id": 32739207, "name": "\ud0c1\ub0a8\uc120", "x": -9.710811614990234, "y": 6.847393989562988, "label": 0, "group": 198, "code": "from sys import stdin, stdout\n\ndef IN():\n    return stdin.readline().rstrip()\ndef OUT(d):\n    stdout.write(\"%d\\n\" % d)\n\nT = int(IN())\n\nfor i in range(T):\n    N, M = map(int, IN().split())\n    queue = list(map(int, IN().split()))\n    maxlist = sorted(queue)\n    ans = 0\n\n    while True:\n        if queue[0] == maxlist[-1]:\n            ans += 1\n            if M == 0:\n                OUT(ans)\n                break\n            del(queue[0])\n            del(maxlist[-1])\n            N -= 1\n            M -= 1\n            continue\n\n        queue.append(queue.pop(0))\n        M -= 1\n\n        if M < 0:\n            M = N-1"}, {"id": 19084590, "name": "\uc124\ud76c\ud638", "x": -1.5898665189743042, "y": -26.129770278930664, "label": 0, "group": 198, "code": "def solution():\n    result = []\n    \n    for case in range(int(input())):\n        num, idx = list(map(int, input().split()))\n        queue = list(map(int, input().split()))\n        \n        print_num = 0\n        while queue:\n            if queue[0] == max(queue):\n                queue.pop(0)\n                print_num += 1\n                num -= 1\n                if idx == 0:\n                    break\n            else:\n                curr = queue.pop(0)\n                queue.append(curr)\n            idx = (idx - 1) % num\n        \n        result.append(print_num)\n        \n    for r in result:\n        print(r)\n        \nsolution()"}, {"id": 27939854, "name": "\uc0ac\uacf5\uc2dc\uc900", "x": 12.00786018371582, "y": 5.78529691696167, "label": 0, "group": 199, "code": "t = int(input())\nl = 0\n\nwhile l<t :\n    n,m = map(int,input().split())\n    pri_list = list(map(int,input().split()))\n    count = 1\n    i = 0\n    num_prt = m\n    max_num_list = sorted(pri_list)\n\n    max_num = max_num_list.pop()\n\n    while True :\n        if pri_list[i] != max_num :\n            pri_list.append(pri_list[i])\n            if num_prt == i :\n                num_prt = len(pri_list)-1\n            i+= 1\n\n        else :\n            if num_prt == i :\n                print(count)\n                break\n            pri_list[i] = -1\n            i+=1\n            count += 1\n            max_num = max_num_list.pop()\n\n    l+=1"}, {"id": 10953757, "name": "\uacf5\uc608\uc9c0", "x": 14.175675392150879, "y": 9.676088333129883, "label": 0, "group": 199, "code": "T=int(input())\nfor i in range(T):\n    queue=[]\n    cnt=0\n    N,M=map(int,input().split())\n    queue=input().split()\n    ans=[0]*N\n    ans[M]=1\n    while(True):\n        if queue.index(max(queue)) == 0:\n            del queue[0]\n            cnt += 1\n            if ans[0] == 1:\n                print(cnt)\n                break\n            else:\n                del ans[0]\n\n        else:\n            queue.append(queue[0])\n            del queue[0]\n            ans.append(ans[0])\n            del ans[0]\n"}, {"id": 33108773, "name": "\uc774\ub3d9\uc6b1", "x": -19.042266845703125, "y": 15.217558860778809, "label": 0, "group": 199, "code": "import sys\n\ntest_cases = int(sys.stdin.readline())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, sys.stdin.readline().split()))\n    imp = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(n))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n    \n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))    "}, {"id": 34409902, "name": "\uc2e0\uad6c", "x": 4.318430423736572, "y": -3.1950087547302246, "label": 0, "group": 199, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n    check = [0 for _ in range(N)]\n    check[M] = 1\n    cnt = 0\n    while True:\n        if queue[0] == max(queue):\n            cnt += 1\n            if check[0] != 1:\n                queue.pop(0)\n                check.pop(0)\n            else:\n                print(cnt)\n                break\n        else:\n            queue.append(queue.pop(0))\n            check.append(check.pop(0))"}, {"id": 17599722, "name": "\ubb38\uc9c4\uc120", "x": 1.196806788444519, "y": -4.039741039276123, "label": 0, "group": 200, "code": "import sys\nfrom collections import deque\ndef input():\n    return sys.stdin.readline()\nT=int(input())\nfor i in range(T):\n    n,q=list(map(int,input().split()))\n    cnt=0\n    stack=list(map(int,input().split()))\n    high=sorted(stack)\n    queue=deque()\n    for i in range(n):\n        queue.append(i)\n    while True:\n        if high[-1]==stack[queue[0]]:\n            high.pop()\n            temp=queue.popleft()\n            cnt+=1\n            if temp==q:\n                print(cnt)\n                break\n        else:\n            queue.append(queue.popleft())\n"}, {"id": 29938445, "name": "\ucd5c\ubbfc\uc2dd", "x": 20.362762451171875, "y": -2.1012401580810547, "label": 0, "group": 200, "code": "def solution(cnt, target_idx, priority_arr):\n    target_priority = priority_arr[target_idx]\n    # \ubc94\uc704 \uc904\uc774\uae30\n    indices = [idx for idx in range(cnt) if priority_arr[idx] >= target_priority]\n    priorities = [p for p in priority_arr if p >= target_priority]\n    printing_counter = 0\n    while True:\n        max_priority = max(priorities)\n        check_idx = indices.pop(0)\n        check_priority = priorities.pop(0)\n        if check_priority == max_priority:\n            printing_counter = printing_counter + 1\n            if check_idx == target_idx:\n                break\n        else:\n            indices.append(check_idx)\n            priorities.append(check_priority)\n    return printing_counter\n\n\nif __name__ == '__main__':\n    test_cnt = int(input())\n    for i in range(test_cnt):\n        paper_count, index_to_find = list(map(int, input().split()))\n        priorities = list(map(int, input().split()))\n        print_order = solution(paper_count, index_to_find, priorities)\n        print(print_order)\n"}, {"id": 46233519, "name": "\ubd09\uc6a9\ud658", "x": 7.922608852386475, "y": -15.201480865478516, "label": 0, "group": 200, "code": "import sys\nn = int(sys.stdin.readline())\nfor _ in range(n):\n    m, index = map(int, sys.stdin.readline().split())\n    priority = list(map(int, sys.stdin.readline().split()))\n    priority_sort = sorted(priority, reverse=True)\n    count = 0\n    while priority:\n        a = priority.pop(0)\n        if a == priority_sort[0]:\n            count += 1\n            priority_sort.pop(0)\n            if not index:\n                print(count)\n                break\n        else:\n            priority.append(a)\n            if not index:\n                index += len(priority)\n        index -= 1"}, {"id": 13743860, "name": "\uae40\uc120\uc544", "x": -0.8922111988067627, "y": -2.801206588745117, "label": 0, "group": 200, "code": "start=int(input())\nfor i in range(start):\n    File=input().split()\n    File_sheets=int(File[0])\n    File_target=int(File[1])\n    Q=input().split()\n    target = [0 for i in range(File_sheets)]\n    target[File_target] = 'T'\n    size=0\n    while size<=File_sheets:\n        if Q[0]==max(Q):\n            Q.pop(0)\n            result=target.pop(0)\n            size+=1\n            if result=='T':\n                print(size)\n                break\n        else:\n            Q.append(Q.pop(0))\n            target.append(target.pop(0))"}, {"id": 27028955, "name": "\ud55c\ubb38\ud61c", "x": 21.315826416015625, "y": 7.535789966583252, "label": 0, "group": 201, "code": "T = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    queue = list(map(int, input().split()))\n    idx = [False] * N\n    idx[M] = True\n    count = 0\n\n    while (True):\n        if queue[0] == max(queue):\n            count += 1\n            if (idx[0] == True):\n                print(count)\n                break\n            else :\n                queue.pop(0)\n                idx.pop(0)\n        else :\n            queue.append(queue.pop(0))\n            idx.append(idx.pop(0)) "}, {"id": 39263280, "name": "\uc774\uc8fc\ud61c", "x": -20.21401023864746, "y": 18.334381103515625, "label": 0, "group": 201, "code": "import sys\n\n\ndef solution():\n    a = int(sys.stdin.readline())\n    for i in range(a):\n        m, n = map(int, sys.stdin.readline().split())\n        arr = list(map(int, sys.stdin.readline().split()))\n        answer = 0\n\n        while True:\n            if n == 0: #n\uc774 \uc81c\uc77c \uc55e\uc5d0 \uc788\uc744 \ub54c\n                if arr[0] == max(arr): #\uc6b0\uc120\uc21c\uc704\uac00 \uc9f1\uc77c \ub54c\n                    answer += 1\n                    break\n                else: # \uc6b0\uc120\uc21c\uc704\uac00 \ubc00\ub9b4 \ub54c\n                    n = len(arr)-1\n                    arr.append(arr.pop(0))\n            else: #\uc81c\uc77c \uc55e\uc774 \uc544\ub2d0 \ub54c\n                if arr[0] == max(arr): # \uc81c\uc77c \uc55e\uc774 \uc9f1\uc77c \ub54c\n                    answer += 1\n                    arr.pop(0)\n                    n -= 1\n                else: #\uc81c\uc77c \uc55e\uc774 \ucc10\ub530\uc77c \ub54c\n                    arr.append(arr.pop(0))\n                    n -= 1\n\n        print(answer)\n\n\n\n\nif __name__ == '__main__':\n    solution()"}, {"id": 17031029, "name": "\uc774\ud604\uc6b0", "x": 29.176780700683594, "y": 7.814849853515625, "label": 0, "group": 201, "code": "test_case = int(input())\n\nfor i in range(test_case):\n    N, M = list(map(int, input().split()))\n    queue = list(map(int, input().split()))\n    queue = [(i, idx) for idx, i in enumerate(queue)]\n    count = 0\n    while True:\n        if queue[0][0] == max(queue)[0]:\n            count +=1\n            if queue[0][1] == M:\n                print(count)\n                break\n            else:\n                queue.pop(0)\n        else:\n            queue.append(queue.pop(0))\n"}, {"id": 46317707, "name": "\uc815\uc18c\ubbfc", "x": -10.041967391967773, "y": -12.797928810119629, "label": 0, "group": 201, "code": "T = int(input())\n\nfor _ in range(T):\n    N,M = map(int, input().split())\n    l = list(map(int, input().split()))\n    l2 = []\n    max_l = max(l)\n    for i in range(len(l)):\n        l2.append(i)\n    cnt = 1\n    while True:\n        while max_l != l[0]:\n            a = l.pop(0)\n            l.append(a)\n            b = l2.pop(0)\n            l2.append(b)\n        if l2.pop(0) == M:\n            print(cnt)\n            break\n        else:\n            cnt += 1\n            l.pop(0)\n            max_l = max(l)\n            continue\n\n\n\n"}, {"id": 42671738, "name": "\ud558\uc131\ud601", "x": -19.681922912597656, "y": -19.066776275634766, "label": 0, "group": 202, "code": "import sys\nn=int(input())\nresult=[]\ndef queue(N,M,ip):\n    queue=[]\n    result=1\n    for i in range(N):\n        queue.append(ip[i])\n    while True:\n        temp=1\n        current_ip=queue[0] # 1\n        for i in range(1,len(queue)): # 1,2,3\n            if queue[i]>current_ip: # 2 > 1\n                queue.pop(0)\n                queue.append(current_ip)\n                if M!=0:\n                    M-=1\n                elif M==0:\n                    M=len(queue)-1\n                temp=0\n                break\n            else:\n                continue\n        if temp==1:\n            if M==0:\n                return result\n            result+=1\n            queue.pop(0)\n            M-=1\nfor i in range(n):\n    N, M = map(int,sys.stdin.readline().split())\n    ip=list(map(int,sys.stdin.readline().split()))\n    result.append(queue(N,M,ip))\nfor i in result:\n    print(i)"}, {"id": 39211975, "name": "\uc190\uc9c0\uc544", "x": -22.088930130004883, "y": 22.19793701171875, "label": 0, "group": 202, "code": "\n\n# \ub9ac\uc2a4\ud2b8\ub97c \ub791 \uc704\uce58\ub97c \ub123\uc73c\uba74 \uc22b\uc790\uac00 \ub098\uc634\ndef func(list, position):\n    count = 0\n\n    while True:\n        # \uc6d0\ud558\ub294 \uac12 \ubcf4\ub2e4 \ud070 \uc6b0\uc120\uc21c\uc704\uac00 \uc788\uc73c\uba74 \ub4a4\ub85c \ub123\uc5b4\ub460\n        if list[0] < max(list):\n            list.append(list.pop(0))\n            if position == 0:\n                position = len(list) - 1\n            else:\n                position -= 1\n        # \uc791\uac70\ub098 \uac19\uc73c\uba74 \ubf51\uc74c , \ub9cc\uc77c \ubf51\uc740\uac8c \ub0b4\uac00 \uc6d0\ud558\ub294 \uac12\uc774\uba74 while\ubb38 \uc885\ub8cc\n        else:\n            list.pop(0)\n            count += 1\n            if position == 0:\n                break\n            else:\n                position -= 1\n\n    return count\n\n#\uc785\ub825\nimport sys\ninput = sys.stdin.readline\n\nn = int(input()) #\ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4\nanswer=[] #\ub2f5\uc744 \ub2f4\uc544\ub458 \ubc30\uc5f4\n\nfor i in range(n):\n    x,y = map(int,input().split())\n    temp = list(map(int,input().split())) # x\ub9cc\ud07c\uc758 \uae38\uc774\uc758 \ubc30\uc5f4 \ub9cc\ub4ec\n    answer.append(func(temp,y))\n\n\n\nfor i in answer:\n    print(i)"}, {"id": 24911194, "name": "\uc124\uc720\uc815", "x": 24.819271087646484, "y": -4.983957767486572, "label": 0, "group": 202, "code": "T = int(input())\n\nfor _ in range(T):\n    n, m = map(int, input().split())\n    queue = list(map(int, input().split()))\n    cnt = 0\n    while len(queue):\n        if max(queue) > queue[0]:\n            queue.append(queue.pop(0))\n            if m == 0: \n                m = len(queue)\n            m -= 1\n        else:\n            queue.pop(0)\n            cnt += 1\n            if m == 0: \n                print(cnt)\n                break        \n            m -= 1"}, {"id": 37703232, "name": "\uc5c4\uc9c0\uc6d0", "x": 0.4077163338661194, "y": 1.07105553150177, "label": 0, "group": 202, "code": "import sys\n\nf_input = int(sys.stdin.readline())\n\nfor _ in range(f_input):\n    printing = list(map(int, sys.stdin.readline().split()))\n    print_list = list(range(printing[0]))\n    imp = list(map(int, sys.stdin.readline().split()))\n    print_list[printing[1]] = 'target'\n    \n    order = 0\n    while True:\n        if imp[0] == max(imp):\n            order += 1\n            if print_list[0] == 'target':\n                print(order)\n                break\n            else:\n                print_list.pop(0)\n                imp.pop(0)\n        else:\n            print_list.append(print_list.pop(0))\n            imp.append(imp.pop(0))"}, {"id": 35084745, "name": "\uc2e0\ucca0\uc9c4", "x": 8.779826164245605, "y": 11.613351821899414, "label": 0, "group": 203, "code": "import sys\ninput = sys.stdin.readline\n\n\ndef Print(N, M, Imp):\n    count = 0\n\n    while True:\n        if Imp[0] == max(Imp):\n            Imp.pop(0)\n            count += 1\n            if M == 0:\n                break\n            else:\n                M -= 1\n        else:\n            Imp.append(Imp.pop(0))\n            if M == 0:\n                M = len(Imp) - 1\n            else:\n                M -= 1\n\n    return count\n\n\nK = int(input())\n\nfor i in range(K):\n    N, M = map(int, input().split())\n    Imp = list(map(int, input().split()))\n    print(Print(N, M, Imp))\n"}, {"id": 20743409, "name": "\uac10\uc6b0\uc131", "x": 20.010032653808594, "y": -4.721093654632568, "label": 0, "group": 203, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    k = q[m]\n    cs = [[] for _ in range(10)]\n    for i, e in enumerate(q):\n        cs[e].append(i)\n    s, i = 1, -1\n    for j in range(9, k, -1):\n        l = cs[j]\n        if l:\n            s += len(l)\n            cs[j] = [e for e in l if e > i] + [e for e in l if e < i]\n            i = cs[j][-1]\n    l = cs[k]\n    cs[k] = [e for e in l if e > i] + [e for e in l if e < i]\n    s += cs[k].index(m)\n    print(s)"}, {"id": 41901380, "name": "\ud64d\uc885\ud604", "x": 2.0785763263702393, "y": -2.0101051330566406, "label": 0, "group": 203, "code": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    lst = [0] * n\n    lst[m] = True\n    cnt = 0\n    while True:\n        if a[0] == max(a):\n            cnt += 1\n            if lst[0] == True:\n                print(cnt)\n                break\n            else:\n                a.pop(0)\n                lst.pop(0)\n        else:\n            a.append((a.pop(0)))\n            lst.append((lst.pop(0)))"}, {"id": 39843557, "name": "\uae40\ud604\uc911", "x": -13.743621826171875, "y": -19.92169761657715, "label": 0, "group": 203, "code": "test_case = int(input())\nfor i in range(test_case):\n    N,M = map(int,input().split())\n    data = list(map(int,input().split()))\n    base = data[M]\n    data[M] = 0\n    result = 0\n    if len(data) != 1:\n        for j in range(9):\n            number = 9-j\n            count_number = data.count(number)\n            if count_number != 0 and number > base :\n                for k in range(count_number):\n                    num_index = data.index(number)\n                    new_data = data[num_index:] + data[:num_index]\n                    new_data.pop(0)\n                    result += 1\n                    data = new_data                   \n            elif number == base :\n                for k in range(1,base):\n                    count_number2 = data.count(k)\n                    if count_number2 != 0:\n                        for l in range(count_number2):\n                            data.remove(k)\n                result = result + 1 + data.index(0)\n                print(result)\n                break\n                \n                  \n    else: print(1)\n        \n            \n            \n        \n    \n    \n    "}, {"id": 24576377, "name": "\ud55c\uc740\ube44", "x": 4.453532695770264, "y": -25.127708435058594, "label": 0, "group": 204, "code": "from sys import stdin\n\n\ndef printer():\n    n = int(stdin.readline().rstrip())\n    for _ in range(n):\n        m, index = map(int, stdin.readline().rstrip().split(' '))\n        queue = list(map(int, stdin.readline().rstrip().split(' ')))\n        cnt = 0\n\n        while queue:\n            if queue[0] < max(queue):\n                queue.append(queue.pop(0))\n                if index == 0:\n                    index = len(queue) - 1\n                else:\n                    index = index - 1\n            else:\n                queue.pop(0)\n                cnt = cnt + 1\n                if index == 0:\n                    print(cnt)\n                    break\n                else:\n                    index = index - 1\n\n\nprinter()"}, {"id": 36569019, "name": "\uae40\uc815\ud0dc", "x": 4.029942989349365, "y": 13.432515144348145, "label": 0, "group": 204, "code": "import sys \nnum=int(sys.stdin.readline())\ndef solution(priorities, location):\n    li=[x for x in range(len(priorities))]\n    \n    i=0\n    while i!=len(priorities)-1:\n        if priorities[i]>=max(priorities[i+1:]):\n            i+=1\n        else:\n            li1=[li.pop(i)]\n            li=li+li1\n            priorities1=[priorities.pop(i)]\n            priorities=priorities+priorities1\n    \n    answer = li.index(location)+1\n    return answer\nfor _ in range(num):\n    location=int(sys.stdin.readline().split()[1])\n    priorities=list(map(int,sys.stdin.readline().split()))\n    print(solution(priorities, location))\n"}, {"id": 21322200, "name": "\uc815\uc77c\uc6b0", "x": 8.35759162902832, "y": 4.496779918670654, "label": 0, "group": 204, "code": "num_t = int(input()) # the number of tc\n\nfor t in range(num_t):\n    n, m = list(map(int,input().split(' '))) # N. M\n    pr = list(map(int,input().split(' '))) # priority\n    idx = [i for i in range(n)]\n    x = 0 # order\n    \n    while len(pr):\n        if pr[0]==max(pr):\n            x+=1\n            pr.pop(0)\n            if idx.pop(0)==m:\n                print(x)\n                break\n        else:\n            pr.append(pr.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 19609326, "name": "\uc131\uc7ac\uc2dd", "x": 21.62323570251465, "y": -1.5165367126464844, "label": 0, "group": 204, "code": "import sys\n\ndef sortOrder(printOrder, importance):\n    initList = printOrder\n    orderedList = []\n\n    while initList:\n        for i in initList:\n            if importance[initList[0]] < importance[i]:\n                temp = initList.pop(0)\n                initList.append(temp)\n                break\n            if len(initList) == 1 or i == initList[-1]:\n                orderedList.append(initList.pop(0))\n    return orderedList\n\n\ncase = int(sys.stdin.readline().strip())\nfor _ in range(case):\n    n, m = map(int, sys.stdin.readline().split())\n    importance = list(map(int, sys.stdin.readline().split()))\n    printOrder = [i for i in range(n)]\n    orderedList = sortOrder(printOrder, importance)\n    place = 1 + orderedList.index(m)\n    print(place)"}, {"id": 28205665, "name": "\uc624\ub9cc\uc11d", "x": -38.69053268432617, "y": -4.164235591888428, "label": 0, "group": 205, "code": "class Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n    \nclass PrintQueue:\n    def __init__(self):\n        self.head = None\n        self.tail = None\n        self.target = None\n        self.priorityArr = [0] * 10\n        \n    def addToTail(self, node, isTarget=False):\n        if self.tail is not None:    \n            self.tail.next = node\n            self.tail = node\n        else:\n            self.tail = node\n            self.head = node\n        \n        self.priorityArr[node.data] += 1\n        if isTarget:\n            self.target = node\n    \n    def removeFromHead(self):\n        node = self.head\n        self.head = self.head.next\n        self.priorityArr[node.data] -= 1\n        return node\n                \n    def isLargePriorityExist(self, priority):\n        for i in range(priority + 1, 10):\n            if self.priorityArr[i] > 0:\n                return True\n        return False\n    \n    def rearrange(self):\n        while self.isLargePriorityExist(self.head.data):\n            self.addToTail(self.removeFromHead())\n        \nCases = int(input())\nanswers = []\nfor TC in range(Cases):\n    N, M = map(int, input().split())\n    documents = list(map(int, input().split()))\n\n    Queue = PrintQueue()\n    for i in range(len(documents)):\n        Queue.addToTail(Node(documents[i]), i == M)\n    \n    answer = 0\n    while True:\n        Queue.rearrange()\n        printed = Queue.removeFromHead()\n        answer += 1\n        if printed == Queue.target:\n            break\n\n    answers.append(answer)\n\nfor ans in answers:\n    print(ans)"}, {"id": 19801951, "name": "\ud55c\uc9c0\ubbfc", "x": -22.54372215270996, "y": 0.5317261219024658, "label": 0, "group": 205, "code": "def rotate(L, N):\n    return L[N:]+L[:N]\n\ndef check():\n    global Q, Q_val\n    if Q[0]==Q_val[-1]:\n        return True\n    else:\n        return False\n\nTC=int(input())\nfor _ in range(TC):\n    N,M=map(int,input().split())\n    Q=list(map(int,input().split()))\n    Q_pos=[i for i in range(N)]\n    Q_val=list(set(Q))\n    Q_val=sorted(Q_val)\n    target = Q.index(Q_val[-1])\n    cnt=1\n    now=Q_pos[0]\n    while now!=M or Q[0]!=Q_val[-1]:\n        if check():\n            del Q[0], Q_pos[0]\n            if Q_val[-1] not in Q:\n                del Q_val[-1]\n            cnt+=1\n        else:\n            target=Q.index(Q_val[-1])\n            Q=rotate(Q, target)\n            Q_pos=rotate(Q_pos, target)\n        now = Q_pos[0]\n    print(cnt)"}, {"id": 12296690, "name": "\ucd5c\uac15\ud76c", "x": -27.61863136291504, "y": 24.12380599975586, "label": 0, "group": 205, "code": "'''\n\uccab \uc904\uc5d0 test case\uc758 \uc218\uac00 \uc8fc\uc5b4\uc9c4\ub2e4. \n\uac01 test case\uc5d0 \ub300\ud574\uc11c \ubb38\uc11c\uc758 \uc218 N(100\uc774\ud558)\uc640 \n\uba87 \ubc88\uc9f8\ub85c \uc778\uc1c4\ub418\uc5c8\ub294\uc9c0 \uad81\uae08\ud55c \ubb38\uc11c\uac00 \ud604\uc7ac Queue\uc758 \uc5b4\ub5a4 \uc704\uce58\uc5d0 \uc788\ub294\uc9c0\ub97c \uc54c\ub824\uc8fc\ub294 M(0\uc774\uc0c1 N\ubbf8\ub9cc)\uc774 \uc8fc\uc5b4\uc9c4\ub2e4. \n\n\ub2e4\uc74c\uc904\uc5d0 N\uac1c \ubb38\uc11c\uc758 \uc911\uc694\ub3c4\uac00 \uc8fc\uc5b4\uc9c0\ub294\ub370, \n\uc911\uc694\ub3c4\ub294 1 \uc774\uc0c1 9 \uc774\ud558\uc774\ub2e4. \uc911\uc694\ub3c4\uac00 \uac19\uc740 \ubb38\uc11c\uac00 \uc5ec\ub7ec \uac1c \uc788\uc744 \uc218\ub3c4 \uc788\ub2e4. \uc704\uc758 \uc608\ub294 N=4, M=0(A\ubb38\uc11c\uac00 \uad81\uae08\ud558\ub2e4\uba74), \n\uc911\uc694\ub3c4\ub294 2 1 4 3\uc774 \ub41c\ub2e4.\n\n3\n1 0\n5\n4 2\n1 2 3 4\n6 0\n1 1 9 1 1 1\n'''\nimport sys\nrnd = int(sys.stdin.readline())\nsols = []\nfor _ in range(rnd):\n    size, ni = map(int, sys.stdin.readline().split())\n    ipts = list(map(int, sys.stdin.readline().split()))\n    mirr = [i for i in range(len(ipts))]\n    cnt = 1\n    while 1 :\n        tc = ipts.index(max(ipts))\n        if mirr[tc] == ni :\n            break\n        i = 0\n        while i < tc :\n            ipts.append(ipts.pop(0))\n            mirr.append(mirr.pop(0))\n            i += 1\n        ipts.pop(0)\n        mirr.pop(0)\n        cnt += 1\n    sols.append(cnt)\nprint(*sols, sep='\\n')"}, {"id": 48245383, "name": "\uc11c\uc900\uc601", "x": 11.150967597961426, "y": 8.940916061401367, "label": 0, "group": 205, "code": "import sys\ninput = sys.stdin.readline\n\ncase_num = int(input())\nans_list = []\nfor i in range(case_num):\n    N, M = map(int, input().split())\n    importance_list = list(map(int, input().split()))\n    importance_idx = [0 for _ in range(N)]\n    importance_idx[M] = 1\n\n    count = 0\n    while True:\n        if importance_list[0] == max(importance_list):\n            count += 1\n            if importance_idx[0] == 1:\n                ans_list.append(count)\n                break\n            else:\n                del importance_list[0]\n                del importance_idx[0]\n        else:\n            importance_list.append(importance_list[0])\n            del importance_list[0]\n            importance_idx.append(importance_idx[0])\n            del importance_idx[0]\n\nfor ans in ans_list:\n    print(ans)"}, {"id": 21387616, "name": "\ubc15\uc218\uc9c4", "x": 25.908571243286133, "y": 6.464128494262695, "label": 0, "group": 206, "code": "TEST_CASE = int(input())\n\nfor _ in range(TEST_CASE):\n    N, M = map(int, input().split())\n    weight_list = str.strip(input())\n\n    if len(weight_list) == 1:\n        print(1)\n        continue\n    weight_list = list(map(int, weight_list.split()))\n\n    for i in range(len(weight_list)):\n        weight_list[i] = (i, weight_list[i])\n\n    max_value = max(weight_list, key=lambda weight: weight[1])\n    print_count = 1\n    while True:\n        if weight_list[0] != max_value:\n            weight_list.append(weight_list.pop(0))\n        else :\n            data = weight_list.pop(0)\n            if data[0] != M:\n                print_count += 1\n            else :\n                print(print_count)\n                break\n            max_value = max(weight_list, key=lambda weight: weight[1])\n"}, {"id": 10281284, "name": "\uc815\uc740\uc6b0", "x": -2.3863062858581543, "y": 1.7359232902526855, "label": 0, "group": 206, "code": "import sys\n\nN = int(sys.stdin.readline().strip(\"\\n\"))\n\nfor n in range(N):\n    size, target = sys.stdin.readline().split()\n    printerQueue = sys.stdin.readline().split()\n    size = int(size)\n    target = int(target)\n\n    # (value, index) tuple\n    order = list(zip(printerQueue, [n for n in range(size)]))\n    count = 0\n    while True:\n        if printerQueue[0] == max(printerQueue):\n            count += 1\n            if order[0][1] == target:\n                sys.stdout.write(str(count) + \"\\n\")\n                break\n            else:\n                order.pop(0)\n                printerQueue.pop(0)\n        else:\n            order.append(order.pop(0))\n            printerQueue.append(printerQueue.pop(0))"}, {"id": 17139990, "name": "\ub178\ud0dc\uc740", "x": -17.542016983032227, "y": -4.013818740844727, "label": 0, "group": 206, "code": "def pro(lst):\n    global tar\n    cnt = 0\n    while 1:\n        # print(lst)\n        maxi = max(lst)\n        # print(tar)\n        if lst[0] == maxi:\n            cnt += 1\n            if tar == 0:\n                return cnt\n            lst.pop(0)\n            tar -= 1\n        else:\n            tmp = lst.pop(0)\n            if tar == 0:\n                tar = len(lst)\n            else:\n                tar -= 1\n            lst.append(tmp)\n\n\ntest = int(input())\nfor testCase in range(1, 1 + test):\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n\n    tar = m\n    ret = pro(lst)\n\n    print(ret)\n"}, {"id": 18399921, "name": "\uad8c\uc728", "x": -15.610718727111816, "y": -3.5532615184783936, "label": 0, "group": 206, "code": "import sys\n\n\ndef isHigher(arr):\n    if len(arr) == 1:\n        return False\n    piv = arr[0][1]\n    for i in range(1, len(arr)):\n        if arr[i][1] > piv:\n            return True\n    return False\n\n\nt = int(sys.stdin.readline())\nfor _ in range(t):\n\n    n, m = map(int, sys.stdin.readline().split())\n    papers = list(map(int, sys.stdin.readline().split()))\n    enum = list(enumerate(papers))\n    count = 0\n    while True:\n        if isHigher(enum):\n            temp = enum[0]\n            enum.pop(0)\n            enum.append(temp)\n\n        elif not isHigher(enum):\n            if enum[0][0] == m:\n                count += 1\n                print(count)\n                break\n            enum.pop(0)\n            count += 1\n"}, {"id": 18159826, "name": "\uae40\uad8c", "x": 19.30901527404785, "y": -10.561615943908691, "label": 0, "group": 207, "code": "for t in range(int(input())):\n    N,M=map(int,input().split())\n    que = list(map(int,input().split()))\n    num=0\n    for idx,value in enumerate(que):\n        que[idx] = [idx,value]\n    while True:\n        for i in range(1,len(que)):\n            if que[0][1]<que[i][1]:\n                X=que.pop(0)\n                que.append(X)\n                break\n        else:\n            num+=1\n            X=que.pop(0)\n            if X[0]==M:\n                break\n    print(num)\n"}, {"id": 8011022, "name": "\uc870\uc2b9\uc6b0", "x": -13.741196632385254, "y": 8.972846984863281, "label": 0, "group": 207, "code": "N = int(input())\n\ndef numfinder(N):\n    return N[0]\n\nfor x in range(N):\n    ans = 1 #\ucd9c\ub825\ud560 \ub2f5\n    ipt = [int(i) for i in input().split()] # N\uacfc M \uc785\ub825\ubc1b\uae30\n    num = ipt[0]\n    q = [[int(i),False] for i in input().split()]\n    q[ipt[1]][1] = True\n    maxnum = max(q, key=numfinder)[0]\n    while 1:\n        if q[0][0] == maxnum:\n            if q[0][1] == True:\n                break\n            else:\n                q.pop(0)\n                ans += 1\n                maxnum = max(q, key=numfinder)[0]\n        else:\n            q.append(q.pop(0))\n    print(ans)"}, {"id": 18207947, "name": "\uc0ac\uacf5\uc138\uc740", "x": 24.228214263916016, "y": 12.884921073913574, "label": 0, "group": 207, "code": "from collections import deque\nimport sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n\n    chk = [True if i == m else False for i in range(n)]\n\n    cnt = 1\n    while arr:\n        i = arr.index(max(arr))\n        arr = arr[i:] + arr[:i]\n        chk = chk[i:] + chk[:i]\n\n        arr.pop(0)\n        if chk.pop(0):\n            print(cnt)\n            break\n        cnt += 1"}, {"id": 26283854, "name": "\uc548\ud604\uae30", "x": -1.245500087738037, "y": -0.11494673043489456, "label": 0, "group": 207, "code": "import sys\n\nt = int(sys.stdin.readline())\nfor i in range(t):\n    page_count, cur_page = map(int,sys.stdin.readline().split())\n    importance = list(map(int,sys.stdin.readline().split()))\n    pages = list(range(page_count))\n    cnt = 1\n    while True:\n        if importance[0] == max(importance):\n            if pages[0] == cur_page:\n                print(cnt)\n                break\n            else:\n                pages.pop(0)\n                importance.pop(0)\n                cnt += 1\n        back = pages[:importance.index(max(importance))]\n        pages = pages[importance.index(max(importance)):] + back\n        back = importance[:importance.index(max(importance))]\n        importance = importance[importance.index(max(importance)):] + back"}, {"id": 8861721, "name": "\uc804\uc9c0\ud604", "x": 29.295591354370117, "y": 5.6964287757873535, "label": 0, "group": 208, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = ['T' if i == m else 0 for i in range(n)]\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 36555951, "name": "\uc190\ud558\uc9c4", "x": 25.51978874206543, "y": 39.70777893066406, "label": 0, "group": 208, "code": "import sys\nT=int(sys.stdin.readline())\n\nfor _ in range(T):\n\tN, flag = map(int,sys.stdin.readline().split())\n\tprinter = list(map(int,sys.stdin.readline().split()))\n\tidx = list(range(N))\n\torder = 0\n\twhile 1:\n\t\tif max(printer) == printer[0]:\n\t\t\torder += 1\n\t\t\tif flag == idx[0]:\n\t\t\t\tprint(order)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tprinter.pop(0)\n\t\t\t\tidx.pop(0)\n\t\telse:\n\t\t\tprinter.append(printer.pop(0))\n\t\t\tidx.append(idx.pop(0))"}, {"id": 29708134, "name": "\ucd5c\uba85\uc6d0", "x": 9.383430480957031, "y": 15.432520866394043, "label": 0, "group": 208, "code": "import sys\ninput=sys.stdin.readline\nt=int(input())\n\nfor i in range(t):\n    n,idx=map(int,input().split())\n    pq=list(map(int,input().split()))\n    loc=[0]*len(pq)\n    loc[idx]=1\n    while pq:\n        if pq[0] != max(pq):\n            pq.append(pq.pop(0))\n            loc.append(loc.pop(0))\n        else:\n            pq.pop(0)\n            if loc.pop(0) == 1:\n                print(n-len(pq))\n                break"}, {"id": 20578349, "name": "\uc774\uc11c\uc9c4", "x": -20.236724853515625, "y": -2.5124735832214355, "label": 0, "group": 208, "code": "from sys import stdin\n\n\nclass Queue:\n    def __init__(self, data):\n        self.queue = data\n        self.head = 0\n        self.tail = len(data) - 1\n\n\ndef next_print(document_list):\n    q = Queue(document_list)\n    max_priority = 0\n    max_pos = 0\n    for cur in range(q.head, q.tail + 1):\n        document = q.queue[cur]\n        if document[1] > max_priority:\n            max_priority = document[1]\n            max_pos = cur\n\n    return [document_list[max_pos], document_list[max_pos+1:] + document_list[:max_pos]]\n\n\nfor _ in range(int(stdin.readline())):\n    N, M = map(int, stdin.readline().split())\n    priority_list = stdin.readline().split()\n    document_list = []\n    print_count = 1\n\n    for index, num in enumerate(priority_list):\n        document_list.append((index, int(num)))\n\n    while True:\n        printed_document, next_document_list = next_print(document_list)\n\n        if printed_document[0] == M:\n            print(print_count)\n            break\n\n        if len(next_document_list) == 0:\n            break\n\n        print_count += 1\n        document_list = next_document_list\n"}, {"id": 18621522, "name": "\uc870\uc740\ud61c", "x": -16.73809242248535, "y": 16.57567024230957, "label": 0, "group": 209, "code": "T = int(input())\n\nfor _ in range(T):\n    # N : \ubb38\uc11c\uc758 \uc218\n    # M : \uad81\uae08\ud55c \ubb38\uc11c\uc758 \ud604\uc7ac \uc704\uce58\n    N, M = map(int, input().split())\n    I = list(map(int, input().split()))\n    \n    print_list = []\n    for i in range(N):\n        print_list.append([I[i], i])\n    \n    count = 0\n    while True:\n        temp_document = print_list.pop(0)\n        important_number = temp_document[0]\n        result = False\n        for document in print_list:\n            if document[0] > important_number:\n                print_list.append(temp_document)\n                result = True\n                break\n            \n        if result:\n            continue\n        count += 1\n        \n        if temp_document[1] == M:\n            print(count)\n            break\n                "}, {"id": 42770668, "name": "\uc624\uc120\uc625", "x": 3.4742794036865234, "y": -24.591541290283203, "label": 0, "group": 209, "code": "import sys\n\nT = int(input())\nfor _ in range(T):\n    N, idx = map(int, sys.stdin.readline().rstrip().split())\n    arr = list(map(int, sys.stdin.readline().rstrip().split()))\n\n    i = 0\n    while True:\n        if idx == 0:\n            if arr[0] != max(arr):\n                arr.append(arr.pop(0))\n                idx = len(arr) - 1\n            else:\n                i += 1\n                break\n        else:\n            idx -= 1\n            if arr[0] != max(arr):\n                arr.append(arr.pop(0))\n            else:\n                arr.pop(0)\n                i += 1\n    print(i)"}, {"id": 39002912, "name": "\uc720\uc544\uc778", "x": -27.19728660583496, "y": 25.052034378051758, "label": 0, "group": 209, "code": "# \ubb38\uc81c \uc8fc\uc18c : https://www.acmicpc.net/problem/1966\n# \ubb38\uc81c \ubd84\ub958 : \uad6c\ud604, \uc790\ub8cc \uad6c\uc870, \uc2dc\ubbac\ub808\uc774\uc158, \ud050\n# \ud480\uc774 \ubc29\ubc95 : (\uc778\ub371\uc2a4, \uc911\uc694\ub3c4) \ub85c \uc774\ub8e8\uc5b4\uc9c4 \ub9ac\uc2a4\ud2b8A\uc640 \uc911\uc694\ub3c4\ub97c \uae30\uc900\uc744 \uc815\ub82c\ud55c \ub610 \ub2e4\ub978 \ub9ac\uc2a4\ud2b8B\ub97c 1\uac1c \ub9cc\ub4e0\ub2e4.\n#           \uadf8\ub9ac\uace0 A\ub9ac\uc2a4\ud2b8\uc758 0\ubc88\uc9f8\uc758 \uc911\uc694\ub3c4\uac00 B\uc758 -1\ubc88\uc9f8 \uc911\uc694\ub3c4\uc640 \uac19\ub2e4\uba74 B\uc758 -1\ubc88\uc9f8\ub294 pop\ud55c\ub2e4.\n#           \ub610\ud55c A\ub9ac\uc2a4\ud2b8\uc758 0\ubc88\uc9f8\ub3c4 pop\uc744 \ud558\ub294\ub370 \uadf8 \uacb0\uacfc\uac12\uc758 \uc778\ub371\uc2a4\uac00 M\uacfc \uac19\ub2e4\uba74 \ubc18\ubcf5\uc744 \uba48\ucd94\uace0 \uba87\ubc88\uc9f8\ub85c \n#           \ucd9c\ub825\ub418\ub294\uc9c0 \ubc18\ud658.\n\nimport sys\n\nfor t in range(int(sys.stdin.readline())):\n    N, M = map(int, sys.stdin.readline().split())\n    Priority = [(i, P) for i, P in enumerate(sys.stdin.readline().split())]\n    sort_P = sorted(Priority, key=lambda x : x[1])\n    i = 0\n    while True:\n        if Priority[0][1] == sort_P[-1][1]:\n            i += 1\n            sort_P.pop()\n            if Priority.pop(0)[0] == M:\n                break\n        else:\n            Priority.append(Priority.pop(0))\n\n    print( i )"}, {"id": 28233102, "name": "\uae40\ucc3d\ud638", "x": 19.835996627807617, "y": -13.276302337646484, "label": 0, "group": 209, "code": "t = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split())\n    importances = list(map(int, input().split()))\n    documents = [i for i in range(n)]\n\n    printout, res = -1, 0\n    mx = max(importances)\n    while printout != m: \n        front = importances.pop(0)\n        document = documents.pop(0)\n\n        if front < mx:\n            importances.append(front)\n            documents.append(document)\n        else:\n            printout = document\n            res += 1\n            if importances:\n                mx = max(importances)\n            \n    print(res)\n"}, {"id": 7219359, "name": "\ucd94\uc900\ud604", "x": -11.81961441040039, "y": -24.32642364501953, "label": 0, "group": 210, "code": "class printerqueue :\n    case = int(input())\n\n    i = 0\n    while i < case :\n        count = 0;\n        inst = input().split()\n        cnt = int(inst[0])\n        pos = int(inst[1])\n        priority = input().split()\n\n        while 1 :\n            comp = 0\n            for pri in priority :\n                if priority[0] < pri :\n                    comp = 1\n                    break\n            if comp :\n                tmp = priority.pop(0)\n                priority.append(tmp)\n                if pos == 0 :\n                    pos = len(priority) - 1\n                else :\n                    pos -= 1\n            else :\n                priority.pop(0)\n                count += 1\n                if pos == 0 :\n                    print(count)\n                    break\n                else :\n                    pos -= 1\n        i += 1\n"}, {"id": 34399315, "name": "\uc774\uc120\uade0", "x": -17.713451385498047, "y": 15.032705307006836, "label": 0, "group": 210, "code": "test_cases = int(input())\n\nfor _ in range(test_cases):\n    n,m = list(map(int, input().split( )))\n    imp = list(map(int, input().split( )))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    # \uc21c\uc11c\n    order = 0\n    \n    while True:\n        # \uccab\ubc88\uc9f8 if: imp\uc758 \uccab\ubc88\uc9f8 \uac12 = \ucd5c\ub313\uac12?\n        if imp[0]==max(imp):\n            order += 1\n                        \n            # \ub450\ubc88\uc9f8 if: idx\uc758 \uccab \ubc88\uc9f8 \uac12 = \"target\"?\n            if idx[0]=='target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))      "}, {"id": 12745886, "name": "\ubb38\uac00\uc601", "x": 6.857391357421875, "y": 2.8385539054870605, "label": 0, "group": 210, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 29865460, "name": "\uae40\uc2b9\uc6b0", "x": -21.49317169189453, "y": 2.4299845695495605, "label": 0, "group": 210, "code": "#1933/ \ud504\ub9b0\ud130 \ud050\nimport sys\ninput=sys.stdin.readline\ndef find_print(M,imp_list):\n    count=0\n    max_val=max([i[1] for i in imp_list])\n    while True:\n        if imp_list[0][1]==max_val: #\ube60\uc838\uc57c\ud568\n            if imp_list[0][0]==M:\n                return count+1\n            else:\n                count+=1\n                imp_list.pop(0)\n                max_val=max([i[1] for i in imp_list])\n        else: #\uc548\ube60\uc838\uc57c\ud568\n            temp=imp_list[0]\n            imp_list=imp_list[1:]\n            imp_list.append(temp)\n    \n      \nanswer=[]\nTOTAL=int(input())\nfor _ in range(TOTAL):\n    N,M=map(int,input().split())\n    important=list(map(int,input().split()))\n    imp_list=[]\n    for i in range(N):\n        imp_list.append((i,important[i]))\n    answer.append(find_print(M,imp_list))\nfor a in answer:\n    print(a)"}, {"id": 15523985, "name": "\ud669\ubbf8\uc601", "x": -14.492006301879883, "y": -21.933504104614258, "label": 0, "group": 211, "code": "T = int(input())\n\nfor tc in range(1, 1+T):\n    N, M = map(int, input().split())\n    li = list(map(int, input().split()))\n    for idx in range(len(li)):\n        li[idx] = [li[idx], idx]\n    cnt = 0\n    f = 0\n    while True:\n        max_v = 0\n        for i in range(len(li)):\n            if max_v < li[i][0]:\n                max_v = li[i][0]\n        value = [0, 0]\n        while value[0] != max_v:\n            value = li.pop(0)\n\n            if value[0] == max_v:\n                if value[1] == M:\n                    print(cnt+1)\n                    f = 1\n                    break\n                else:\n                    cnt += 1\n                    break\n            else:\n                li.append(value)\n        if f:\n            break\n"}, {"id": 7422208, "name": "\ud45c\ud604\uc9c4", "x": 16.315814971923828, "y": 13.943002700805664, "label": 0, "group": 211, "code": "import sys\nread = sys.stdin.readline\n\ntc = int(read())\nfor _ in range(tc):\n    N, M = map(int, read().split())\n    queue = list(map(int, read().split()))[::-1]\n    M = N - M - 1\n    squeue = sorted(queue)\n    cnt = 0\n    while len(queue) > 0:\n        while queue[-1] != squeue[-1]:\n            queue.insert(0, queue[-1])\n            queue.pop()\n            M = (M+1) % len(queue)\n        if M == len(queue)-1:\n            print(cnt+1)\n            break\n        queue.pop()\n        squeue.pop()\n        cnt += 1\n"}, {"id": 41183160, "name": "\uc784\ud615\uc2dd", "x": 4.1235222816467285, "y": 2.5691442489624023, "label": 0, "group": 211, "code": "import sys\ninput = sys.stdin.readline\n\nfor i in range(int(input())):\n    a, b = map(int, input().split(' '))\n    c = list(map(int, input().split(' ')))\n    d = [0 for j in range(a)]\n    d[b] = 'e'\n\n    count = 0\n    while True:\n        if c[0] == max(c):\n            count += 1\n            if d[0] == 'e':\n                print(count)\n                break\n            else:\n                c.pop(0)\n                d.pop(0)\n        else:\n            c.append(c.pop(0))\n            d.append(d.pop(0))"}, {"id": 25405006, "name": "\uc815\ub824\uc6d0 ", "x": -4.161843299865723, "y": -11.218522071838379, "label": 0, "group": 211, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 26469706, "name": "\ud6c4\uc9c0\uc774 \ubbf8\ub098", "x": 22.57896614074707, "y": -13.127196311950684, "label": 0, "group": 212, "code": "num_case = int(input())\nfor _ in range(num_case):\n    num_docs, target_index = map(int, input().split())\n    priorities = list(map(int, input().split()))\n    docs = [i for i in range(num_docs)]\n    count = 1\n    while True:\n        max_prior = max(priorities)\n        max_index = priorities.index(max_prior)\n        priorities = [*priorities[max_index+1:], *priorities[:max_index]]\n        if docs[max_index] == target_index:\n            print(count)\n            break\n        else:\n            docs = [*docs[max_index+1:], *docs[:max_index]]\n            count += 1"}, {"id": 26921803, "name": "\uc774\uc2dc\uc601", "x": -20.96678924560547, "y": 10.554020881652832, "label": 0, "group": 212, "code": "import sys\nK=int(sys.stdin.readline())\nfor i in range(K):\n    N,M=map(int,sys.stdin.readline().split())\n    Plist=list(map(int,sys.stdin.readline().split())) #Priority list\n    # print(Plist)\n    Rlist=[i for i in range(N)] #\uc2e4\uc81c \uc6d0\uc18c \ub9ac\uc2a4\ud2b8\n    FindE=Rlist[M] #FindE \ucc3e\uace0\uc790 \ud558\ub294 \uc6d0\uc18c\n    # print(Rlist)\n    Ptlist=[]  #\ucd9c\ub825 \uc21c\uc11c \ub2f4\uae30\ub294 \ub9ac\uc2a4\ud2b8\n\n    # while not Plist==[]:\n    #     o=max(Plist)\n    #     while not Plist[0]==o:\n    #         Plist.append(Plist[0])\n    #         Plist.pop(0)\n    #     Ptlist.append(Plist[0])\n    #     Plist.pop(0)\n    # print(Ptlist)\n    # print(Plist)\n\n    while not Plist==[]:\n        o=max(Plist)\n        while not Plist[0]==o:\n            Plist.append(Plist[0])\n            Plist.pop(0)\n            Rlist.append(Rlist[0])\n            Rlist.pop(0)\n        Ptlist.append(Rlist[0])\n        Plist.pop(0)\n        Rlist.pop(0)\n    \n    print(Ptlist.index(FindE)+1)"}, {"id": 36529025, "name": "\ud55c\uc9c0\uc6b0", "x": 13.203140258789062, "y": -6.543736934661865, "label": 0, "group": 212, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int,input().split())\n    imp_list = list(map(int,input().split()))\n    cnt = 0\n    doc = imp_list[m]\n    imp_list[m] = 0\n    while doc < max(imp_list):\n        M = imp_list.index(max(imp_list))\n        for _ in range(M):\n            imp_list.append(imp_list.pop(0))\n        imp_list.pop(0)\n        cnt += 1\n    while imp_list.count(doc) != 0:\n        if imp_list.index(doc) < imp_list.index(0):   \n            imp_list.remove(doc)\n            cnt += 1\n        else:\n            break\n    print(cnt+1)"}, {"id": 41645605, "name": "\uc774\ubb38\uc2dd", "x": -7.380883693695068, "y": -14.971710205078125, "label": 0, "group": 212, "code": "import sys\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    x, y = map(int, sys.stdin.readline().split())\n    \n    queue = list(map(int, sys.stdin.readline().split()))\n    trace = [0 for j in range(x)]\n    trace[y] = 1\n    \n    printnum = 0\n\n    while True:\n        document = queue[0]\n        dtrace = trace[0]\n        if document < max(queue):\n            queue.pop(0)\n            trace.pop(0)\n            queue.append(document)\n            trace.append(dtrace)\n        else:\n            queue.pop(0)\n            trace.pop(0)\n            printnum += 1\n            if dtrace == 1:\n                print(printnum)\n                break\n"}, {"id": 43384821, "name": "\uc591\ub3d9\uadfc", "x": 4.911368370056152, "y": -21.165685653686523, "label": 0, "group": 213, "code": "import sys\n\nN = int(sys.stdin.readline())\n\nfor i in range(N):\n    count = 0\n    a, b = map(int, sys.stdin.readline().split())\n    queue = list(map(int, sys.stdin.readline().split()))\n\n    while b != -1:\n        if queue[0] == max(queue):\n            del queue[0]\n            b -= 1\n            count += 1\n        else:\n            queue.append(queue[0])\n            del queue[0]\n\n            if b == 0:\n                b = len(queue) - 1\n            else:\n                b -= 1\n\n    print(count)"}, {"id": 27367049, "name": "\uae40\uae30\ubc94", "x": 11.678462028503418, "y": 2.0014801025390625, "label": 0, "group": 213, "code": "T = int(input())\nfor _ in range(T):\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    s = sorted(arr, reverse=True)\n\n    j = 0\n    c = 0\n    for i in range(n):\n        while arr[j] != s[i]:\n            j += 1\n            if j >= n:\n                j = 0\n        c += 1\n        if j == m:\n            break\n        j += 1\n        if j >= n:\n            j = 0\n    print(c)\n"}, {"id": 46628805, "name": "\ud558\uc815\ucca0", "x": -10.258678436279297, "y": -4.110325336456299, "label": 0, "group": 213, "code": "from sys import stdin\n\nT = int(stdin.readline())\n\nfor i in range(T):\n    N, M = map(int, stdin.readline().split())\n    a = [i for i in range(1, N + 1)]\n    b = list(map(int, stdin.readline().split()))\n    chk = a[M]\n    cnt = 0\n    while len(a) != 0:\n        if b.index(max(b)) != 0:\n            for j in range(b.index(max(b))):\n                a.append(a[0])\n                b.append(b[0])\n                del a[0], b[0]\n        else:\n            cnt += 1\n            if chk == a[0]:\n                break\n            del a[0], b[0]\n    print(cnt)"}, {"id": 31468756, "name": "\ud55c\uc740\uc815", "x": -3.441359281539917, "y": -9.741534233093262, "label": 0, "group": 213, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 34380700, "name": "\uc9c0\ud604\uc6b0", "x": 8.76339340209961, "y": 11.167509078979492, "label": 0, "group": 214, "code": "def fn(M, In):\n    In = [[In[i], i] for i in range(len(In))]\n    \n    cnt = 1\n\n    while True:\n        index = 0\n        Max = 0\n        for i in range(len(In)):\n            if Max < In[i][0]:\n                Max = In[i][0]\n                index = i\n\n        if In[index][1] == M:\n            return cnt\n        else:\n            cnt += 1\n            In = In[index+1:] + In[:index] \n\nre = int(input())\n\nlst = list()\nfor i in range(re):\n    N, M = map(int, input().split())\n    In = list(map(int, input().split()))\n    \n    a = fn(M, In)\n    lst.append(a)\n\nfor i in lst:\n    print(i)"}, {"id": 27902841, "name": "\ud669\ubcf4\uc778\uc601", "x": -23.49934196472168, "y": 24.534854888916016, "label": 0, "group": 214, "code": "t = int(input())\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    priority = list(map(int, input().split()))\n    que = list([0 for _ in range(n)])\n    count = 0  # \ucd9c\ub825\uac12\uc744 \uc800\uc7a5\ud558\ub294 \ubcc0\uc218\n    que[m] = 1  # \uad81\uae08\ud55c \ubb38\uc11c \uc704\uce58 \uc800\uc7a5\n\n    while True:\n        if priority[0] == max(priority): # priority\uc758 \uccab\ubc88\uc9f8 \uc694\uc18c\uac00 \ucd5c\ub300\uc911\uc694\ub3c4\n            count += 1  # count 1 \uc99d\uac00\n\n            if que[0] != 1: # \ucd5c\ub300 \uc911\uc694\ub3c4\uc774\uc9c0\ub9cc \uc6b0\ub9ac\uac00 \ucc3e\uace0\uc790 \ud558\ub294 \uac12\uc774 \uc544\ub2d8\n                que.pop(0)  # \ud050\uc5d0\uc11c \ube8c\n                priority.pop(0) # \uc6b0\uc120\uc21c\uc704 \ub9ac\uc2a4\ud2b8\uc5d0\uc11c\ub3c4 \ube8c\n            else: # \ucd5c\ub300 \uc911\uc694\ub3c4\uc774\uace0 \uc6b0\ub9ac\uac00 \ucc3e\uace0\uc790 \ud558\ub294 \uac12\uc784\n                print(count) #\ucd9c\ub825\n                break # \uc885\ub8cc\n        else: # \ucd5c\ub300 \uc911\uc694\ub3c4\uac00 \uc544\ub2d0 \ub54c\n            priority.append(priority.pop(0)) # \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\uc5d0\uc11c \ube7c\uc11c \ub4a4\ub85c \ubcf4\ub0c4\n            que.append(que.pop(0))  # \ud050\uc5d0\uc11c\ub3c4 \ube7c\ub0b4\uace0 \ub4a4\ub85c \ubcf4\ub0c4\n\n\n"}, {"id": 26480498, "name": "\ubcf5\uc0c1\uc6b0", "x": 7.429981708526611, "y": 8.601115226745605, "label": 0, "group": 214, "code": "def solution2(list, index):\n    chk = [0 for index in range(len(list))]\n    chk[index] = 1\n    num = 1\n    while len(list) != 0:\n        if list[0] == max(list):\n            list.pop(0)\n            if chk.pop(0) == 1:\n                return str(num)\n            num += 1\n        else:\n            list.append(list.pop(0))\n            chk.append(chk.pop(0))\n\nresult = []\nfor i in range(int(input())):\n    case, index = map(int, input().split(' '))\n    lists = list(map(int, input().split(' ')))\n\n    result.append(solution2(lists, index))\n\nprint('\\n'.join(result))\n\n# list = [1, 1, 9, 1, 1, 1]\n\n\n\n"}, {"id": 12696193, "name": "\uc774\uc2b9\uae30", "x": -22.599227905273438, "y": -2.1824727058410645, "label": 0, "group": 214, "code": "def prioprint(quelen, target, queue):\n    count=0\n    targetinde=target\n    for i in range(9,0,-1):\n        for j in range(0,queue.count(i)):\n            count += 1\n            hiprio=queue.index(i)\n            # for debug\n            # print(queue)\n            # print(targetinde)\n            # print(hiprio)\n            # print(count)\n            if hiprio==targetinde:\n\n                return count\n            else:\n                cutted=len(queue[hiprio+1:])\n                queue=queue[hiprio+1:]+queue[:hiprio]\n                if targetinde>hiprio:\n                    targetinde -= hiprio + 1\n                else:\n                    targetinde+=cutted\n    return count\n\ntestcases=int(input())\nfor i in range(testcases):\n    quelen, target=map(int,input().split(\" \"))\n    queue=list(map(int,input().split(\" \")))\n    print(prioprint(quelen, target, queue))"}, {"id": 25844639, "name": "\ucd5c\uc9c0\uc6d0", "x": -13.097559928894043, "y": 9.498185157775879, "label": 0, "group": 215, "code": "import sys\nT=int(sys.stdin.readline())\n\nfor _ in range(T):\n    N,M=map(int,sys.stdin.readline().split())\n    w=list(map(int,sys.stdin.readline().split()))\n    q=[]\n    for i in range(len(w)):\n        q.append([i,w[i]])\n    use=[]\n    while q:\n        check=False\n        idx,cnt=q.pop(0)\n        #\ud604\uc7ac \ubb38\uc11c\ubcf4\ub2e4 \uc911\uc694\ub3c4\uac00 \ub192\uc740 \ubb38\uc11c \uccb4\ud06c\n        for w in q:\n            if cnt<w[1]:\n                q.append([idx,cnt])\n                check=True\n                break\n        if not check:\n            use.append(idx)\n    print(use.index(M)+1)"}, {"id": 23584417, "name": "\ud55c\uc608\uc6d0", "x": 0.2721623480319977, "y": 3.689709186553955, "label": 0, "group": 215, "code": "test = int(input())\n\nfor _ in range(test):\n    n,m = map(int, input().split( ))\n    imp = list(map(int,input().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    order = 0\n\n\n    while True:\n        if imp[0] == max(imp):\n            order += 1\n\n            if idx[0] == 'target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))\n"}, {"id": 21609821, "name": "\ubcf5\ud6a8\uc131", "x": 1.361542820930481, "y": -23.729169845581055, "label": 0, "group": 215, "code": "T = int(input())\n\nfor t in range(T):\n    N, M = map(int, input().split())\n    priority = list(map(int, input().split()))\n\n    cnt = 0\n    i = 0\n    while 1:\n        if max(priority) == priority[i]:\n            cnt += 1\n            if i == M:\n                print(cnt)\n                break\n            else:\n                priority.pop(i)\n                M -= 1\n        else:\n            tmp = priority.pop(i)\n            priority.append(tmp)\n            if i == M:\n                M = N - (cnt + 1)\n            else:\n                M -= 1"}, {"id": 19952823, "name": "\ud55c\ud61c\ub9b0", "x": -30.384841918945312, "y": -7.470682144165039, "label": 0, "group": 215, "code": "class Queue:\n  def __init__(self):\n    self.data = []\n \n  def size(self):\n    return len(self.data)\n \n  def isEmpty(self):\n    return self.size() == 0\n \n  def enqueue(self,item):\n    self.data.append(item)\n  \n  def dequeue(self):\n    if self.isEmpty():\n      print('\ube48\ud050\uc784')\n    else:return self.data.pop(0)\n \n  def peek(self):\n    if self.isEmpty():\n      print('\ube48\ud050\uc784')\n    else:\n      return self.data[0]\n \nn = int(input())\nwhile n:\n  l, ind = map(int, input().split())\n  arr = list(map(int, input().split()))\n  q = Queue()\n  iq = Queue()\n  for i in arr:\n    q.enqueue(i)\n  for i in range(l):\n    iq.enqueue(i)\n  ans = 0\n  while True:\n    p = q.dequeue()\n    for i in q.data:\n      if p < i:\n        q.enqueue(p)\n        iq.enqueue(iq.dequeue())\n        break\n    else: \n      ans += 1 \n      if ind == iq.dequeue(): \n        break\n  print(ans)\n  n-=1\n"}, {"id": 37109610, "name": "\uc774\uc7a5\uc6b0", "x": 1.2899527549743652, "y": 13.130908012390137, "label": 0, "group": 216, "code": "import sys\ninput = sys.stdin.readline\ndef search(q, r, x, y):\n    num = 1\n    for i in r:\n        try:\n            s = q.index(i,s,x)\n        except:\n            s = q.index(i)\n        if s == y:\n            return num\n        q.pop(s)\n        if s < y:\n            y -= 1\n        num += 1\n        x -= 1\n\nn = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    p = list(map(int, input().split()))\n    M = sorted(p, reverse = True)\n    print(search(p, M, a, b))"}, {"id": 20889522, "name": "\uae40\ud0dc\uc6b0", "x": 15.479166030883789, "y": -11.844249725341797, "label": 0, "group": 216, "code": "import sys\n\ndef flow(Q, Q2):\n    M = max(Q)\n    while (True):\n        index = Q2.pop(0)\n        item = Q.pop(0)\n\n        if M is item:\n            break\n\n        Q.append(item)\n        Q2.append(index)\n\n    return index, item\n\nT = int(input())\nfor _ in range(T):\n    n, m = map(int, sys.stdin.readline().split())\n    test_case = list(map(int, sys.stdin.readline().split()))\n    index_list = list(range(len(test_case)))\n\n    num = 0\n    while(True):\n        i, j = flow(test_case, index_list)\n        num += 1\n        if i == m:\n            break\n\n    print(num)"}, {"id": 31012666, "name": "\uacf5\ud615\uc9c4", "x": 14.93937873840332, "y": 2.7520201206207275, "label": 0, "group": 216, "code": "case = int(input())\n\nresult = []\n\nfor i in range(case):\n\n    n, m = list(map(int, input().split(\" \")))\n    queue = list(map(int, input().split(\" \")))\n    \n    k = queue[m]\n    max_value = max(queue)\n    count = 1\n\n    while True:\n        \n        if max_value == k and m == 0:\n            break\n        else:\n            data = queue[0]\n            queue.pop(0)\n            if max_value == data:\n                max_value = max(queue)\n                count += 1\n            else:\n                queue.append(data)\n            if m == 0:\n                m = len(queue) - 1\n            else:\n                m -= 1\n\n    result.append(str(count))\n\nprint(\"\\n\".join(result))\n"}, {"id": 25370271, "name": "\uc11c\ub300\ud55c", "x": 5.962055683135986, "y": -5.573725700378418, "label": 0, "group": 216, "code": "import sys\ninput = sys.stdin.readline\n\ntest_case = int(input())\n\nfor _ in range(test_case):\n    n,m = map(int,input().split())\n    queue = list(map(int,input().split()))\n    goalqueue = [0] * n\n    goalqueue[m] = 1\n    cnt = 0\n    for i in range(n):\n        while queue[0] != max(queue):\n            queue.append(queue.pop(0))\n            goalqueue.append(goalqueue.pop(0))\n        cnt += 1\n        queue.pop(0)\n        if 1 == goalqueue.pop(0):\n            break\n    print(cnt)"}, {"id": 21407800, "name": "\ud45c\uc6a9\uc218", "x": -5.690487861633301, "y": -9.556266784667969, "label": 0, "group": 217, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 28091366, "name": "\uc6d0\ube5b\ub098", "x": 15.651412010192871, "y": 3.3323776721954346, "label": 0, "group": 217, "code": "tn = int(input())\nresult = []\n\nfor _ in range(tn):\n    n, idx = map(int, input().split())\n    queue = list(map(int, input().split()))\n    cnt = 0\n    \n    while queue:\n        if queue[0] == max(queue):\n            queue.pop(0)\n            cnt += 1\n            if idx == 0:\n                break\n            else:\n                idx -= 1\n        else:\n            queue.append(queue.pop(0))\n            if idx == 0:\n                idx = len(queue)-1\n            else:\n                idx -= 1\n    result.append(cnt)\n\nprint(\"\\n\".join(map(str, result)))"}, {"id": 33091895, "name": "\uc774\uc218\uacbd", "x": 19.04684066772461, "y": 11.839941024780273, "label": 0, "group": 217, "code": "import sys\ninput = sys.stdin.readline\n\nk = int(input())\nfor i in range(k):\n    n, index = map(int, input().split())\n    priority = list(map(int, input().split()))\n    checkList = [0 for _ in range(n)]\n    checkList[index] = \"target\"\n\n    count = 0\n    while True:\n        if priority[0] == max(priority):\n            count += 1\n            if checkList[0] == 'target':\n                print(count)\n                break\n            priority.pop(0)\n            checkList.pop(0)\n        else:\n            priority.append(priority.pop(0))\n            checkList.append(checkList.pop(0))\n"}, {"id": 22326845, "name": "\uc1a1\uc2b9\ud5cc", "x": -24.70517921447754, "y": 19.065425872802734, "label": 0, "group": 217, "code": "def solution(where,prior):\n    cnt = 0\n    while True:\n        if prior[0] == max(prior):\n            cnt += 1#\ub9e8\uc55e\uc5d0 \uac12\uc774 max\uc77c\ub54c\ub9cc \ud504\ub9b0\ud2b8 \ub418\uace0 \uc774\ub54c\ub9cc \uce74\uc6b4\ud2b8\ud574\uc57c\ub428\n            if where[0] == 1:\n                return cnt\n            else:\n                prior.pop(0)\n                where.pop(0)\n        else:\n            prior.append(prior[0])\n            where.append(where[0])\n            prior.pop(0)\n            where.pop(0)\n    \n        \n\nT = int(input())\nans = []\nfor _ in range(T):\n    \n    N,M = map(int,input().split())#N=100\uc774\ud558\uc758 \ubb38\uc11c \uac1c\uc218, M=N\ubbf8\ub9cc\uc758 \ubaa9\ud45c\uac12\uc758 \ud604\uc7ac \uc704\uce58\n    prior = list(map(int,input().split()))#1\uc774\uc0c19\uc774\ud558\uc758 \uc911\uc694\ub3c4 N\uac1c \uc8fc\uc5b4\uc9d0\n    where = [0] * N\n    where[M] = 1\n    ans.append(solution(where,prior))\nfor i in ans:\n    print(i)"}, {"id": 48227543, "name": "\ub0a8\uad81\ub3d9\ucca0", "x": -26.056503295898438, "y": -6.253253936767578, "label": 0, "group": 218, "code": "import sys\n#a = list(map(int, sys.stdin.readline().split()))\n\n#a=sys.stdin.readline().strip()\n\n# lines=sys.stdin.readlines()\n#\n# for line in lines:\n#     k=list(map(int,line.split()))\n#\n#     print(k[1]//(k[0]+1))\n\na=int(sys.stdin.readline().strip())\nfirst=[]\nsecond=[]\nfor _ in range(a):\n    first.append(list(map(int, sys.stdin.readline().split())))\n    second.append(list(map(int, sys.stdin.readline().split())))\n\nfor i in range(a):\n    find_index=first[i][1]\n    checker=False\n    number=0\n    while(checker==False):\n        if(max(second[i])==second[i][0]):\n            second[i].pop(0)\n            number+=1\n            if(find_index==0):\n                checker=True\n                print(number)\n            else:\n                find_index-=1\n        else:\n            second[i].append(second[i].pop(0))\n            if(find_index==0):\n                find_index=len(second[i])-1\n            else:\n                find_index-=1\n\n"}, {"id": 11058266, "name": "\uc1a1\uac15\ud638", "x": 11.174738883972168, "y": 15.610769271850586, "label": 0, "group": 218, "code": "n = int(input())\n\nfor i in range(n):\n    M,N = map(int,input().split())\n    idx = [i for i in range(M)]\n    q = list(map(int,input().split()))\n    cnt=1\n    while q:\n        if max(q)!=q[0]:\n            q.append(q.pop(0))\n            idx.append(idx.pop(0))\n            continue\n        q.pop(0)\n        if idx.pop(0)==N:\n            break\n        cnt+=1\n    print(cnt)\n\n\n\n\n"}, {"id": 16385303, "name": "\ubcf5\ud6a8\uc900", "x": 1.207990050315857, "y": -4.273058891296387, "label": 0, "group": 218, "code": "from collections import deque\nimport sys\ninput = sys.stdin.readline\nT = int(input())\nwhile T:\n    N, M = map(int, input().rstrip().split())\n    priority = list(map(int, input().rstrip().split()))\n    q = deque()\n    for i in range(N):\n        q.appendleft((i, priority[i]))\n    priority.sort(reverse=True)\n    turn = 0\n    while True:\n        t = q.pop()\n        if t[1] < priority[turn]:\n            q.appendleft(t)\n        else:\n            if t[0] == M:\n                print(turn+1)\n                break\n            turn += 1\n    T-=1"}, {"id": 24606987, "name": "\uc124\uc724\ube48", "x": -21.3956298828125, "y": 0.9365149736404419, "label": 0, "group": 218, "code": "T=int(input())\n\ndef get_max_priority(priorities,check_printed):\n    pr_max=-1\n    pr_idx=-1\n    for i in range(len(priorities)):\n        if check_printed[i]==True: continue\n        if priorities[i][0] > pr_max:\n            pr_max = priorities[i][0]\n            pr_idx = i\n    return pr_idx\n\nfor i in range(T):\n    # print('===============================')\n    N, M = map(int,input().split())\n    check_printed = [False for _ in range(N)]\n    priorities = []\n    inputs = list(map(int,input().split()))\n    for i in range(len(inputs)):\n        priorities.append([inputs[i],i])\n    cnt=0\n    while cnt<N:\n        # print('priorities:',priorities)\n        # print('check_printed:',check_printed)\n        pr_max = get_max_priority(priorities,check_printed)\n        # print('pr_max:',pr_max)\n        if M == priorities[pr_max][1]:\n            print(cnt+1)\n            break\n        check_printed[pr_max] = True\n\n        priorities = priorities[pr_max+1:] + priorities[:pr_max+1]\n        check_printed = check_printed[pr_max+1:] + check_printed[:pr_max+1]\n\n        cnt+=1\n\n"}, {"id": 42237696, "name": "\uae40\uc724\uc77c", "x": 27.90200424194336, "y": 11.305301666259766, "label": 0, "group": 219, "code": "for _ in range(int(input())):\n    n,target = map(int,input().split())\n    d = {i:k for i,k in enumerate(map(int,input().split()))}\n    a = list(range(n)) \n    front = 0\n    count = 0\n    b = -1\n    while b!=target:\n        front%=len(a)\n        m = max(d.values())\n        while d[a[front]] != m:\n            front = (front+1)%len(a)\n        del d[a[front]]\n        b = a.pop(front)\n        count += 1\n    print(count)"}, {"id": 8790877, "name": "\ud558\ucc3d\ud76c", "x": 0.2431839108467102, "y": 9.788126945495605, "label": 0, "group": 219, "code": "n=int(input());\nfor i in range(n):\n    a=input().split();\n    p=int(a[1])\n    l=int(a[0])\n    n=1;\n    que=list(map(int,input().split(' ')));\n    while(True):\n        temp=que.pop(0);\n        if(len(que)==0):\n            print(l);\n            break;\n        if max(que)>temp:\n            que.append(temp);\n            p=(p-1)%len(que);\n        else:\n            if p==0:\n                print(n);\n                break;\n            p=(p-1)%len(que);        \n            n+=1;\n        \n\n"}, {"id": 42396966, "name": "\ubcf5\ud76c\ucca0", "x": 1.3682174682617188, "y": -25.737028121948242, "label": 0, "group": 219, "code": "for _ in range(int(input())):\n    answer = 0\n    n, m = map(int, input().split())\n    arr = list(input().split())\n\n    mv = max(arr)\n\n    while True:\n        v = arr.pop(0)\n        if v == mv:\n            answer += 1\n            if m == 0:\n                break\n            else:\n                m -= 1\n            mv = max(arr)\n        else:\n            arr.append(v)\n            if m == 0:\n                m = len(arr)-1\n            else:\n                m -= 1\n    print(answer)\n"}, {"id": 44990019, "name": "\ub0a8\uad81\uc778\uc900", "x": 27.255891799926758, "y": 6.930198669433594, "label": 0, "group": 219, "code": "a=int(input())\nfor n in range(a):\n    im=list(map(int,input().split()))\n    pr=list(map(int,input().split()))\n    p=sorted(pr,reverse=True)\n    tf=[1 for _ in range(len(p))]\n    now, answer=0,1\n    for i in p:\n        while True:\n            now%=im[0]\n            if tf[now]==1 and pr[now]==i:\n                if now==im[1]:print(answer)\n                else: tf[now]=0\n                answer+=1\n                break\n            now+=1\n        if now==im[1]:break\n"}, {"id": 36578210, "name": "\uc5d0\ub9ad ", "x": 18.124792098999023, "y": 8.891471862792969, "label": 0, "group": 220, "code": "# testCase\nT = int(input())\n\nfor _ in range(T):\n    # doc number, importance\n    N, M = map(int, input().split())\n\n    # importance list\n    ipt_list = list(map(int, input().split()))\n    idx_list = list(range(len(ipt_list)))\n    idx_list[M] = 'target'\n    cnt = 0\n    while True:\n        if max(ipt_list) == ipt_list[0]:\n            cnt += 1\n            if idx_list[0] == 'target':\n                print(cnt)\n                break\n            else:\n                ipt_list.pop(0)\n                idx_list.pop(0)\n        else:\n            ipt_list.append(ipt_list.pop(0))\n            idx_list.append(idx_list.pop(0))"}, {"id": 40841877, "name": "\ud558\uc8fc\ud76c", "x": -24.871929168701172, "y": -17.836145401000977, "label": 0, "group": 220, "code": "for i in range(int(input())):\n    n, m = map(int, input().split())\n    lst = list(map(int, input().split()))\n    paper = []\n    dict = {}\n    ans = a = 0\n    \n    for i in range(n):\n        paper += [[lst[i], i]]\n        \n    lst.sort(reverse=True)\n    \n    for num in lst:\n        if num in dict:\n            dict[num] += 1\n        else:\n            dict[num] = 1\n        \n    for num in dict.keys():\n        while dict[num]:\n            if paper[0][0] == num:\n                ans += 1\n                dict[num] -= 1\n                if paper[0][1] == m:\n                    a = ans\n                paper.pop(0)\n            else:\n                paper += [paper.pop(0)]\n                \n    print(a)\n    "}, {"id": 31137821, "name": "\ud669\ub3d9\uadfc", "x": -25.32331657409668, "y": 24.382307052612305, "label": 0, "group": 220, "code": "# \ud504\ub9b0\ud130 \ud050\nn = int(input())\nresult=[]\nfor i in range(n):\n    a,b = map(int, input().split())# a\ub294 \ubb38\uc11c\uc758 \uac1c\uc218, b\ub294 \ucd9c\ub825 \uc21c\ubc88\uc744 \uc54c\uace0\uc790\ud558\ub294 \ubb38\uc11c\uc758 \uc704\uce58\n    x= input().split()\n    y=[]\n    #y\ub294 \ucc98\uc74c \uc785\ub825\ubc1b\uc740 \ubb38\uc11c\uc758 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\n    for j in range(a):\n        y.append(x[j])\n    x.sort(reverse=True) #x\ub294 \ubb38\uc11c\uc758 \uc911\uc694\ub3c4 \ub9ac\uc2a4\ud2b8\ub97c \ub0b4\ub9bc\ucc28\uc21c \uc2dc\ud0a8 \uac83\n    position=0 #y\ub97c \uc6d0\ud615\ud050\ub85c \uc0ac\uc6a9\ud558\uae30 \uc704\ud574 \ud604\uc7ac \uc704\uce58\ub97c \ub098\ud0c0\ub0b4\ub294 \ubcc0\uc218\n\n    for j in range(a):# \ubb38\uc11c\uc758 \uac1c\uc218\ub9cc\ud07c \ubc18\ubcf5\n        while 1:\n            if y[position] == x[j]: #\ub9cc\uc57d \ucc3e\uace0\uc788\ub294 \uc911\uc694\ub3c4\uac00 \ub9ac\uc2a4\ud2b8(y)\uc5d0\uc11c \ubc1c\uacac\ub418\uc5c8\ub294\ub370\n                if position==b: #y\uc5d0\uc11c \ubc1c\uacac\ub41c \uc704\uce58\uc640 \ucd9c\ub825 \uc21c\ubc88\uc744 \uc54c\uace0\uc790\ud558\ub294 \ubb38\uc11c\uc758 \uc704\uce58\uac00 \ub3d9\uc77c\ud558\ub2e4\uba74\n                    result.append(j+1) # j+1\ubc88\uc9f8\uc5d0 \ucd9c\ub825\ub418\uc5c8\uc2b5\ub2c8\ub2e4. (\uacb0\uacfc\ub9ac\uc2a4\ud2b8\uc5d0 \ucd94\uac00)\n                # \ud3ec\uc9c0\uc158 \uc99d\uac00 (\uc6d0\ud615\ud050)\n                if position == a - 1:\n                    position = 0\n                else:\n                    position += 1\n                break\n            # \ud3ec\uc9c0\uc158 \uc99d\uac00 (\uc6d0\ud615\ud050)\n            if position == a-1:\n                position=0\n            else:\n                position +=1\n\nfor i in range(n):\n    print(result[i])"}, {"id": 45975074, "name": "\ubb38\uc18c\ub9ac", "x": -21.536300659179688, "y": 20.631317138671875, "label": 0, "group": 220, "code": "import sys\ncase = int(sys.stdin.readline().rstrip('\\n'))\nfor i in range(case):\n    docnum, tgt = sys.stdin.readline().rstrip('\\n').split()\n    docnum, tgt = int(docnum), int(tgt)\n    prior = list(map(int,sys.stdin.readline().rstrip('\\n').split()))\n    tgtprior = prior[tgt]\n    count = 0\n    while True:\n        if max(prior) == prior[0]: #\uc6b0\uc120\uc21c\uc704 \ucd5c\ub300\ubb38\uc11c\uac00 \ud050\uc758 \uc81c\uc77c \uc55e\uc5d0 \uc788\uc74c\n            if tgt == 0: #\uadf8 \ubb38\uc11c\uac00 \ud0c0\uac9f\uc778 \uacbd\uc6b0\n                count+=1\n                break\n            else:\n                prior.pop(0) #\uc544\ub2cc \uacbd\uc6b0\n                count +=1\n                tgt -= 1\n        else: #\uc6b0\uc120\uc21c\uc704 \ucd5c\ub300 \ubb38\uc11c\uac00 \uc911\uac04\uc5d0 \uc788\ub294 \uacbd\uc6b0\n            if tgt ==0: #\uc9c0\uae08 \ud050 \uc81c\uc77c \uc55e\uc774 \ud0c0\uac9f\uc778 \uacbd\uc6b0\uc5d0\ub294\n                prior.append(prior.pop(0)) #\uc55e\uc5d0\uc11c \ube7c\uc11c \ub4a4\uc5d0\ub2e4 \ucd94\uac00\n                tgt = len(prior)-1\n            else :\n                prior.append(prior.pop(0))\n                tgt -=1\n    print(count)"}, {"id": 42792211, "name": "\uc131\uc218\ube48", "x": -35.368812561035156, "y": -2.78403639793396, "label": 0, "group": 221, "code": "class queue:\n\n    class Full(Exception):\n        pass\n\n    class Empty(Exception):\n        pass\n\n    def __init__(self):\n\n        self.start = 0\n        self.end = 0\n        self.stk = []\n\n    def push(self, x):\n        self.stk.append(x)\n        self.end += 1\n\n    def pop(self):\n        if self.empty():\n            raise queue.Empty\n        self.start += 1\n        return self.stk[self.start - 1]\n\n    def size(self):\n        return self.end - self.start\n\n    def empty(self) -> bool:\n        return self.size() <= 0\n\n    def front(self):\n        if self.empty():\n            raise queue.Empty\n        return self.stk[self.start]\n\n    def back(self):\n        if self.empty():\n            raise queue.Empty\n        return  self.stk[self.end - 1]\n\nimport sys\nn = int(sys.stdin.readline())\nfor i in range(n):\n    count = 1\n    q = queue()\n    N, M = map(int,sys.stdin.readline().split())\n    l = list(map(int,sys.stdin.readline().split()))\n    answer = (l[M],M)\n    for i in range(len(l)):\n        q.push((l[i],i))\n    l.sort()\n    while True:\n        if l[-1] == q.front()[0]:\n            if q.front() == answer:\n                print(count)\n                break\n            l.pop()\n            q.pop()\n            count += 1\n        else:\n            q.push(q.pop())\n"}, {"id": 33411433, "name": "\uc9c0\uc131", "x": -3.118471384048462, "y": -22.27855110168457, "label": 0, "group": 221, "code": "num = int(input())\nfor _ in range(num):\n    n, m = map(int, input().split())\n    arr = list(map(int, input().split()))\n    target = m\n    first = max(arr)\n    cnt = 0\n    while True:\n        if arr[0] == first:\n            cnt += 1\n            if target == 0:\n                print(cnt)\n                break\n            else:\n                arr.pop(0)\n                target -= 1\n                first = max(arr)\n        else:\n            arr.append(arr.pop(0))\n            if target == 0:\n                target = len(arr) - 1\n            else:\n                target -= 1"}, {"id": 19267001, "name": "\uc774\uccad\uc544", "x": -6.159452438354492, "y": -4.6173415184021, "label": 0, "group": 221, "code": "import sys \ninput = sys.stdin.readline\n\nt = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    tmp = [0]*n\n    tmp[m] = 1\n    cnt = 0\n    \n    while True:\n        if q[0] == max(q):\n            cnt += 1\n            if tmp[0] == 1:\n                print(cnt)\n                break\n            else:\n                del q[0]\n                del tmp[0]\n        else:\n            q.append(q[0])\n            del q[0]\n            tmp.append(tmp[0])\n            del tmp[0]"}, {"id": 35378708, "name": "\uc624\ub3d9\ucca0", "x": -24.841703414916992, "y": -10.13624095916748, "label": 0, "group": 221, "code": "import sys\nn = int(input())\n\ndef f(x):\n    X = int(x)\n    s[X-1] += 1\n    return X\n\nfor _ in range(n):\n    n, m = map(int, sys.stdin.readline().rstrip('\\n').split())\n    s = [0] * 10\n    l = list(map(f, sys.stdin.readline().rstrip('\\n').split()))\n\n    start = 0\n    end = n\n\n    res = 0\n    t = m\n    #print('s : ',s)\n    while True:\n        if sum(s[l[start]:]) > 0:\n            l.append(l[start])\n\n            if start == t:\n                t = end\n\n            start += 1\n            end += 1\n        else:\n            s[l[start]-1] -= 1\n            res += 1\n\n            if t == start:\n                break\n            start += 1\n        #print('s : ',s)\n        #print('l : ',l)\n        #print('start, end : ',start,end)\n    #print('res : ', res)\n    print(res)\n"}, {"id": 41524400, "name": "\uc81c\uac08\uad11\uc9c4", "x": 10.680323600769043, "y": 24.05474090576172, "label": 0, "group": 222, "code": "import sys\nsi = sys.stdin.readline\nT = int(si())\norder_list = []\n\nfor _ in range(T):\n  n, m = map(int, si().split())\n  imp = list(map(int, si().split()))\n  idx = list(range(n))\n  idx[m] = 'target'\n\n  order = 0\n\n  while True:\n    if imp[0] >= max(imp):\n      order += 1\n      if idx[0] == 'target':\n        order_list.append(order)\n        break\n      imp.pop(0)\n      idx.pop(0)\n    else:\n      imp.append(imp.pop(0))\n      idx.append(idx.pop(0))\n\nfor x in order_list:\n  print(x)"}, {"id": 35673524, "name": "\uc124\uad11\uc120", "x": 5.404830455780029, "y": 20.956398010253906, "label": 0, "group": 222, "code": "N = int(input())\n\ntest_cases = list()\nseq_lists = list()\n\nfor i in range(N):\n  test_case = list(map(int, input().split()))\n  seq_list = list(map(int, input().split()))\n  test_cases.append(test_case)\n  seq_lists.append(seq_list)\n\ndef solve(test_case, seq_list):\n  queue = seq_list\n  tmp_max = max(seq_list)\n  cnt = 1\n  curr_idx = test_case[1]\n\n  while seq_list:\n    if seq_list[0] == tmp_max:\n      seq_list.pop(0)\n      if curr_idx == 0:\n        return cnt\n      cnt += 1\n      curr_idx -= 1\n      tmp_max = max(seq_list)\n\n    else:\n      tmp = seq_list.pop(0)\n      seq_list.append(tmp)\n      if curr_idx != 0:\n        curr_idx -= 1\n      else:\n        curr_idx = len(seq_list)-1\n\n\nfor i in range(N):\n  print(solve(test_cases[i], seq_lists[i]))\n\n\n\n\n\n"}, {"id": 5876493, "name": "\uc2ec\uc6b0\uc601", "x": 25.39594078063965, "y": 12.573293685913086, "label": 0, "group": 222, "code": "for i in range(int(input())):\n  que = []; page, want = map(int, input().split()); count = 0\n  po = list(map(int, input().split()))\n  for j in range(page):\n    que.insert(0, (j, po[j]))\n  while True:\n    if que[-1][1] != max(po): que.insert(0,que.pop())\n    else:\n      if que[-1][0] == want:\n        count += 1; break\n      else: que.pop(); po.remove(max(po)); count += 1\n  print(count)"}, {"id": 27866610, "name": "\ud64d\uc218\ud604", "x": 17.366119384765625, "y": -1.71275794506073, "label": 0, "group": 222, "code": "T = int(input())\n\nans = []\nfor _ in range(T):\n    N, M = map(int,input().split())\n    prior = list(map(int,input().split())) #length == N\n    prior = list(enumerate(prior))\n    cnt=1\n    while True:\n        max_val = max(prior,key=lambda x:x[1])\n        index = prior.index(max_val)\n        prior = prior[index:] + prior[:index]\n        print_val = prior.pop(0)\n    \n        if print_val[0] == M:\n            ans.append(cnt)\n            break\n        cnt+=1\n\nprint(*ans,sep='\\n')\n\n"}, {"id": 27990111, "name": "\uae40\uaddc\uc190", "x": 9.33897590637207, "y": 23.982868194580078, "label": 0, "group": 223, "code": "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor i in range(T):\n  N, M = map(int, input().split())\n  lst = list(map(int, input().split()))\n\n  cnt = 1\n  ans = -1\n  while len(lst):\n    maxv = max(lst)\n    if M == 0 and maxv == lst[0]:\n      print(cnt)\n      break\n    else:\n      if maxv == lst[0]:\n        lst = lst[1:]\n        cnt += 1\n      else:\n        lst = lst[1:] + [lst[0]]\n      M -= 1\n      if M < 0:\n        M = len(lst) - 1\n"}, {"id": 26241215, "name": "\ubd09\uc9c0\uc5f0", "x": 0.5989053845405579, "y": -1.130239725112915, "label": 0, "group": 223, "code": "import sys\n\ntest_n = int(sys.stdin.readline())\n\nfor _ in range(test_n):\n    N, M = map(int, sys.stdin.readline().split())\n    point = list(map(int, sys.stdin.readline().split()))\n    index = [0 for i in range(N)]\n    index[M] = 1\n    cnt = 0\n    while True:\n        if point[0] == max(point):\n            cnt += 1\n            if index[0] == 1:\n                print(cnt)\n                break\n            else:\n                point.pop(0)\n                index.pop(0)\n\n        else:\n            point.append(point.pop(0))\n            index.append(index.pop(0))"}, {"id": 12754186, "name": "\ub958\uc131\uae30", "x": -20.60988998413086, "y": -16.07088851928711, "label": 0, "group": 223, "code": "def print_q(m, q):\n    index = m\n    max_num = max(q)\n    cnt = 0\n    while True:\n        temp = q.pop(0)\n        if temp < max_num:\n            if index == 0:\n                q.append(temp)\n                index = len(q)-1\n            else:\n                q.append(temp)\n                index -= 1\n        else:\n            if index == 0:\n                cnt += 1\n                break\n            index -= 1\n            cnt += 1\n            max_num = max(q)\n    return cnt\n\n\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    print(print_q(m, q))    "}, {"id": 7530451, "name": "\ubc15\ud55c\ubcc4", "x": -35.7220573425293, "y": -2.9482691287994385, "label": 0, "group": 223, "code": "class Queue:\n    def __init__(self):\n        self.queue = []\n\n    def init(self, l):\n        self.queue = l\n\n    def push(self, val):\n        self.queue.append(val)\n\n    def pop(self):\n        if self.queue:\n            return self.queue.pop(0)\n        else:\n            return -1\n\n    def min(self):\n        return min(self.queue)\n\n    def max(self):\n        max1 = -min(self.queue)\n        max2 = max(self.queue)\n        if max1 > max2:\n            return max1\n        else:\n            return max2\n\n    def size(self):\n        return len(self.queue)\n\n    def empty(self):\n        if self.queue:\n            return False\n        else:\n            return True\n\nn = int(input())\n\nfor i in range(n):\n    q = Queue()\n    target = list(map(int, input().split()))[1]\n    li = list(map(int, input().split()))\n    li[target] = -li[target]\n\n    q.init(li)\n    order = 0\n    maxval = q.max()\n    if maxval < 0:\n        maxval = -maxval\n\n    while True:\n        head = q.pop()\n        if head < 0 and maxval == -head:\n            order += 1\n            break\n        elif maxval == head:\n            order += 1\n            maxval = q.max()\n        else:\n            q.push(head)\n\n    print(order)\n"}, {"id": 46229289, "name": "\ubc31\ud0dc\uc6b1", "x": 23.856773376464844, "y": 40.556884765625, "label": 0, "group": 224, "code": "import sys, heapq\n\nt = int(sys.stdin.readline())\nfor i in range(t):\n\tn, m = map(int, sys.stdin.readline().split())\n\tidx_list = list(enumerate((map(int, sys.stdin.readline().split()))))\n\thq = []\n\tfor j in range(n):\n\t\theapq.heappush(hq, -idx_list[j][1])\n\tcnt = 0\n\twhile cnt <= n:\n\t\tif idx_list[0][1] == -hq[0] and m == idx_list[0][0]:\n\t\t\tcnt += 1\n\t\t\tbreak\n\t\telif idx_list[0][1] == -hq[0]:\n\t\t\tdel idx_list[0]\n\t\t\theapq.heappop(hq)\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tidx_list.append(idx_list[0])\n\t\t\tdel idx_list[0]\n\tprint(cnt)"}, {"id": 21871371, "name": "\uc870\uc6b0\uc5f0", "x": 13.908536911010742, "y": 11.989568710327148, "label": 0, "group": 224, "code": "t=int(input())\nfor i in range(t):\n    n,m=map(int,input().split())\n    c=1\n    imp=[[i for i in range(n)],list(map(int,input().split()))]\n    while len(imp)>0:\n        if imp[1][0]!=max(imp[1]):\n            imp[0].append(imp[0][0])\n            imp[1].append(imp[1][0])\n            imp[0].remove(imp[0][0])\n            imp[1].remove(imp[1][0])\n        else:\n            if imp[0][0]==m:\n                print(c)\n                break\n            imp[0].remove(imp[0][0])\n            imp[1].remove(imp[1][0])\n            c+=1"}, {"id": 5521491, "name": "\uac15\uc131\uc5f0", "x": 1.344509243965149, "y": -25.358121871948242, "label": 0, "group": 224, "code": "testcase = int(input())\n\nfor i in range(testcase):\n    n, m = map(int, input().split())\n    priority = list(input().split())\n    p = [int(i) for i in priority]\n    cnt = 0\n\n    while True:\n        if p[0] == max(p):\n            cnt += 1\n            p.pop(0)\n            m -= 1\n            if len(p) == 0:\n                break\n\n            else:\n                if m == -1:\n                    break\n        else:\n            p.append(p.pop(0))\n            if m == 0:\n                m = len(p) - 1\n            else:\n                m -= 1\n\n    print(cnt)\n"}, {"id": 19833879, "name": "\ud45c\uc720\ube48", "x": -14.1904878616333, "y": 1.2897907495498657, "label": 0, "group": 224, "code": "import sys\n\nnum = input()\ninputs = sys.stdin.readlines()\nargs = list(map(str.split, inputs))\nargs = [list(map(int, x)) for x in args]\n\nfor x in range(int(len(args) / 2)):\n    count = 0\n    idx = args[x * 2][1]\n    i = 0\n    while (True):\n        if args[x * 2 + 1][0] >= max(args[x * 2 + 1]):\n            count += 1\n            if idx == 0:\n                print(count)\n                break\n            args[x * 2 + 1].pop(0)\n            idx -= 1\n        else:\n            if idx == 0:\n                idx = len(args[x * 2 + 1]) - 1\n            else:\n                idx -= 1\n            args[x * 2 + 1].append(args[x * 2 + 1].pop(0))\n        i += 1\n"}, {"id": 26355680, "name": "\uc2ec\uc5f0\uc815", "x": 1.4093222618103027, "y": -2.0089454650878906, "label": 0, "group": 225, "code": "import sys\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    lng, idx = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    temp = [0 for i in range(lng)]\n    temp[idx]=1\n    cnt = 0\n    \n    while 1:\n        if arr[0] == max(arr):\n            cnt += 1\n            if temp[0] == 1:\n                print(cnt)\n                break\n            else:\n                arr.pop(0)\n                temp.pop(0)    \n        else:\n            arr.append(arr.pop(0))\n            temp.append(temp.pop(0))"}, {"id": 20718676, "name": "\uac15\ubbf8\ub098", "x": 11.249961853027344, "y": -2.677248239517212, "label": 0, "group": 225, "code": "\ntest_case = int(input())\n\nfor i in range(test_case):\n    q = list()\n    q2 = list()\n    N, M = map(int, input().split())\n\n    NList = list(map(int, input().split()))\n    temp = list()\n\n    for j in range(9, 0, -1):\n        temp.append(NList.count(j))\n\n    for j in range(len(NList)):\n        q.append([j, NList[j]])\n\n    cnt = 1\n    pr = 9\n    for j in temp:\n        cnt2 = j\n        while cnt2 != 0:\n            if q[0][1] == pr:\n                if q[0][0] == M:\n                    print(cnt)\n                cnt2 -= 1\n                cnt += 1\n                q.pop(0)\n            else:\n                temp3 = q.pop(0)\n                q.append(temp3)\n        pr -= 1\n"}, {"id": 18164187, "name": "\uc2ec\uc9c0\ud638", "x": 17.84745216369629, "y": 16.96803855895996, "label": 0, "group": 225, "code": "def operate():\n    count=0\n    while True:\n        if max(priority)==priority[0]:\n            if check[0]==True:\n                break\n            priority.pop(0)\n            check.pop(0)\n            count+=1\n        else:\n            priority.append(priority.pop(0))\n            check.append((check.pop(0)))\n    print(count+1)\n\n\nif __name__ == '__main__':\n    T=int(input())\n    for test_case in range(1, T+1):\n        query=list(map( int, input().split()))\n        priority=list(map(int, input().split()))\n        check=[False for _ in range(query[0])]\n        check[query[1]]=True\n        operate()\n"}, {"id": 43068396, "name": "\uae40\uc2ac\uae30", "x": -13.35463809967041, "y": 13.049220085144043, "label": 0, "group": 225, "code": "# \ud504\ub9b0\ud130 \ud050\n\nimport sys\nfor _ in range(int(input())) :\n    N, M = map(int,sys.stdin.readline().split())\n    que = list(map(int,sys.stdin.readline().split()))\n    idx = list(range(len(que))) # \uc21c\uc11c \uc800\uc7a5\n    idx[M] = 'target'\n\n    pop_num = 0\n    ans = 0\n    while (True) :\n        if que[0] == max(que) :\n            ans += 1\n            if idx[0] == \"target\" :\n                print(ans)\n                break\n\n            else :\n                que.pop(0)\n                idx.pop(0)\n        else :\n            que.append(que.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 16204678, "name": "\ubc15\ud76c\ubcf8", "x": 12.032437324523926, "y": -2.5784730911254883, "label": 0, "group": 226, "code": "from collections import deque\nfrom sys import stdin\n\nT = int(stdin.readline())\n\nfor i in range(T):\n    N, M = map(int, stdin.readline().split())\n    q = deque()\n    ans = []\n\n    inputs = list(map(int, stdin.readline().split()))\n    inputs_sorted = sorted(inputs, reverse=True)\n\n    # print(inputs_sorted)\n\n    for idx, i in enumerate(inputs):\n        temp = [idx] + [i]\n        q.append(temp)\n    # print(q)\n\n    cnt = 1\n    for max_num in inputs_sorted:\n        temp = []\n        while(True):\n            if max_num == q[0][1]:\n                temp = q.popleft()\n                ans.append(temp)\n                break\n            q.rotate(-1)\n\n        if temp[0] == M:\n            print(cnt)\n            break\n\n        cnt += 1\n"}, {"id": 48954420, "name": "\ubd09\uc7ac\ud558", "x": 4.095400810241699, "y": -2.73431396484375, "label": 0, "group": 226, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    priority = list(map(int, input().split()))\n    idx = list(range(n))\n    target = idx[m]\n    cnt = 0\n\n    while priority:\n        if priority[0] == max(priority):\n            cnt += 1\n            if idx[0] == target:\n                print(cnt)\n                break\n            priority.pop(0)\n            idx.pop(0)\n        else:\n            priority.append(priority.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 39240454, "name": "\uc548\uc11c\ud604", "x": 1.891481637954712, "y": 14.017040252685547, "label": 0, "group": 226, "code": "def printer(N, M, imp_list):\n    value_list = list(range(1, N+1))\n    M += 1\n    cnt = 0\n    while True:\n        max_index = imp_list.index(max(imp_list))\n        imp_list = imp_list[max_index:] + imp_list[:max_index]\n        value_list = value_list[max_index:] + value_list[:max_index]\n        imp_list.pop(0)\n        printed = value_list.pop(0)\n        cnt += 1\n        if printed == M:\n            return cnt\n\n\nprint_list = []\ntotal = int(input())\nfor i in range(total):\n    N, M = map(int, input().split())\n    imp_list = list(map(int, input().split()))\n    print_list.append(printer(N, M, imp_list))\n\nfor i in print_list:\n    print(i)"}, {"id": 36873284, "name": "\uc2e0\uad11\ud638", "x": 28.204959869384766, "y": -1.1320370435714722, "label": 0, "group": 226, "code": "def get(): return map(int, input().split())\nfor _ in range(int(input())):\n    N, M = get()\n    q = list(get())\n    while q:\n        m = max(q)\n        i = q.pop(0)\n        if i == m:\n            if M == 0:\n                print(N-len(q))\n                break\n        else:\n            q.append(i)\n        M = (M-1) % len(q)"}, {"id": 12120337, "name": "\uad8c\uc0c1\uc6b0", "x": 6.728748321533203, "y": 2.0901031494140625, "label": 0, "group": 227, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 33321950, "name": "\uc804\uae30\uc601", "x": -10.87543773651123, "y": 5.86798620223999, "label": 0, "group": 227, "code": "import sys\n\ndef main():\n    T = int(sys.stdin.readline())\n    result = []\n    for _ in range(T):\n        N, idx = map(int, sys.stdin.readline().split())\n        nums = list(map(int, sys.stdin.readline().split()))\n        idx_list = list(range(N))\n        cnt = 1\n        max_idx = nums.index(max(nums))\n        \n        while idx != idx_list[max_idx]:\n            nums = nums[max_idx+1:] + nums[:max_idx]\n            idx_list = idx_list[max_idx+1:] + idx_list[:max_idx]\n            max_idx = nums.index(max(nums))\n            cnt += 1\n        result.append(cnt)\n\n    return result\n\nif __name__ == \"__main__\":\n    print('\\n'.join(map(str, main())))"}, {"id": 30193606, "name": "\uc815\ud558\uc601", "x": 18.129928588867188, "y": 5.936418533325195, "label": 0, "group": 227, "code": "test_cases = int(input())\n\nfor i in range(test_cases):\n    n, m = list(map(int, input().split()))\n    importance = list(map(int, input().split()))\n    idx = list(range(len(importance)))\n    idx[m] = 'find'\n    count = 0\n\n    while True:\n        if importance[0] < max(importance):\n            idx.append(idx[0])\n            del idx[0]\n            importance.append(importance[0])\n            del importance[0]\n        elif importance[0] == max(importance):\n            if idx[0] == 'find':\n                count += 1\n                print(count)\n                break\n            else:\n                del idx[0]\n                del importance[0]\n                count += 1\n"}, {"id": 17384763, "name": "\ubc15\ubbfc\uc625", "x": -3.3733973503112793, "y": -10.242356300354004, "label": 0, "group": 227, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 34100177, "name": "\uae40\ub0a8\uc8fc", "x": -13.815813064575195, "y": -14.976221084594727, "label": 0, "group": 228, "code": "import sys\n\nT=int(sys.stdin.readline())\nfor i in range(T):\n    N,M=map(int,sys.stdin.readline().split())\n    doc=list(map(int,sys.stdin.readline().split()))\n    doc2=[]\n    cnt=0\n    for i in range(N):\n        doc2.append([i,doc[i]])\n    tmp=doc2[M]\n    while True:\n        flag=True\n        check=max(doc)\n        while True:\n            if(doc2[0]==tmp and check==tmp[1]):\n                flag=False\n                cnt+=1\n                break\n            \n            elif(doc2[0][1]==check):\n                doc2.pop(0)\n                doc.remove(check)\n                cnt+=1\n                break\n            else:\n                doc2.append(doc2.pop(0))\n        if(flag==False):\n            print(cnt)\n            break"}, {"id": 7191101, "name": "\uc774\ud604\uc815", "x": 26.10683822631836, "y": 38.21261978149414, "label": 0, "group": 228, "code": "for _ in range(int(input())):\n\tn, m = map(int, input().split())\n\titems = map(int, input().split())\n\tl = [(item, i) for i, item in enumerate(items)]\n\n\tcnt = 1\n\twhile True:\n\t\tdoc, idx = l.pop(0)\n\n\t\tif any(d > doc for d, i in l):\n\t\t\tl.append((doc, idx))\n\t\telse:\n\t\t\tif idx == m:\n\t\t\t\tprint(cnt)\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tcnt += 1\n\n"}, {"id": 14020837, "name": "\uc7ac\ud76c", "x": -37.241600036621094, "y": -2.7425169944763184, "label": 0, "group": 228, "code": "# 1966.py\n# 2019.07.19\n\n##################### \n\nclass Queue:\n\n    # make data\n    def __init__(self):\n        self.data = []\n        \n    # push_list\n    def push_list(self, lst):\n        for element in lst:\n            self.data.append(int(element))\n\n    # push\n    def push(self, value):\n        self.data.append(value)\n            \n    # pop\n    def pop(self):\n        if len(self.data) > 0:\n            del self.data[0]\n            \n    # max\n    def max(self):\n        return max(self.data)\n\n    # size\n    def size(self):\n        return len(self.data)\n\n\n    # empty\n    def empty(self):\n        if len(self.data) > 0:\n            return False\n            \n        else:\n            return True\n\n    # front\n    def front(self):\n        if len(self.data) > 0:\n            return self.data[0]\n            \n        else:\n            return \"-1\"\n\n#####################\n\n# Get number\nnum = int(input())\n\n# Queue\nque = Queue()\n\nfor i in range(num):\n\n    # \uccab\ubc88\uc9f8 \uc778\uc790\ub294 size \ub450\ubc88\uc9f8 \uc778\uc790\ub294 index\n    answer1 = input().split(' ')\n\n    # \uc911\uc694\ub3c4 list\n    answer2 = input().split(' ')\n\n    # \uccad\uc18c\n    while(not que.empty()):\n        que.pop()\n    \n    # \uc911\uc694\ub3c4 push\n    que.push_list(answer2)\n\n    # \uc778\ub371\uc2a4\n    index = int(answer1[1])\n    number = 1\n                      \n    while not que.empty():\n\n        if que.front() < que.max():\n            que.push(que.front())\n            que.pop()\n\n            if index == 0:\n                index = que.size()-1\n            else:\n                index -= 1\n\n        else:\n            que.pop()\n            \n            if index == 0:\n                print(number)\n                break\n            else:\n                number += 1\n                index -= 1\n        \n"}, {"id": 20844148, "name": "\uc870\uc6a9\uc218", "x": -3.8496742248535156, "y": -9.579750061035156, "label": 0, "group": 228, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 42863928, "name": "\uc724\ud604\ubbfc", "x": -20.7946834564209, "y": -1.2499359846115112, "label": 0, "group": 229, "code": "import sys\n\ndef singleIntegerInput():\n    n = int(sys.stdin.readline())\n\n    return n\n\ndef doubleIntegerInput():\n    a, b = map(int, sys.stdin.readline().split())\n\n    return a, b\n\ndef listIntegerInput():\n    l = list(map(int, sys.stdin.readline().split()))\n\n    return l\n\ndef findInportance(needsIndex, importanceList):\n    count = 1\n\n    while True:\n        maximumImportance = max(importanceList)\n      \n        nowData = importanceList[0]\n\n        if(nowData == maximumImportance):\n            if(needsIndex == 0):\n                return count\n\n            else:\n                del importanceList[0]\n\n                count += 1\n        \n        else:\n            importanceList.append(nowData)\n            del importanceList[0]\n        \n        needsIndex -= 1\n\n        if(needsIndex < 0):\n            needsIndex = len(importanceList) - 1\n\ndef printList(l):\n    for i in l:\n        print(i)\n\ndef main():\n    resultList = []\n\n    case = singleIntegerInput()\n\n    for i in range(0, case):\n        document, needsIndex = doubleIntegerInput()\n        importanceList = listIntegerInput()\n\n        result = findInportance(needsIndex, importanceList)\n\n        resultList.append(result)\n\n    printList(resultList)\n\n# __main()__\nmain()"}, {"id": 45902572, "name": "\ubc15\uc2dc\uc5f0", "x": -14.235038757324219, "y": 19.9457950592041, "label": 0, "group": 229, "code": "from sys import stdin\n\nt = int(stdin.readline())\n\nfor _ in range(t):\n    n, m = map(int, stdin.readline().split())\n\n    idx = [0]*n\n    idx[m]=-1\n\n    printer = list(map(int, stdin.readline().split()))\n\n    cnt=0\n    while 1:    \n        now_max = max(printer)\n        if(printer[0]==now_max): #\ucd5c\ub300\uac12\uc774\uba74 -> \ubf51\uc544\uc57c \ud568\n            cnt+=1\n            \n            if(idx[0]==-1): #\ubaa9\ud45c\uac12\uc774\uba74 print\ud558\uace0 \ub05d\ub0b4\uba74 \ub428\n                print(cnt)\n                break\n            else: #\ucd5c\ub300\uac12\uc774\uc9c0\ub9cc \ubaa9\ud45c\uac12\uc740 \uc544\ub2cc \uacbd\uc6b0\n                printer.pop(0)\n                idx.pop(0)\n\n        else:\n            printer.append(printer.pop(0))\n            idx.append(idx.pop(0))\n"}, {"id": 11337728, "name": "\ud658\ud76c", "x": -38.573970794677734, "y": -4.3426337242126465, "label": 0, "group": 229, "code": "from sys import stdin\n\nclass Document:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\nclass PrinterQueue:\n    def __init__(self):\n        self.first = None\n        self.target = None\n        self.final = None\n\n    def append(self, data):\n        if self.first == None:\n            self.first = Document(data)\n            self.final = self.first\n        else:\n            self.final.next = Document(data)\n            self.final = self.final.next\n\n    def setTarget(self):\n        self.target = self.final\n\n    def link(self):\n        self.final.next = self.first\n\n    def print(self):\n        current = self.first\n        maxPriority = current\n        prev = current\n        current = current.next\n        while(current != self.first):\n            if current.data > maxPriority.data:\n                maxPriority = current\n                self.final = prev\n            prev = current\n            current = current.next\n        if maxPriority == self.target:\n            return 0\n        else:\n            #print(maxPriority)\n            self.final.next = maxPriority.next\n            self.first = maxPriority.next\n            return maxPriority.data\n\n\n\n\n\n\niter = int(stdin.readline())\nfor i in range(iter):\n    numDocs, numTarget = map(int, stdin.readline().split())\n    priorities = list(map(int, stdin.readline().split()))\n    pQueue = PrinterQueue()\n    for j in range(numDocs):\n        pQueue.append(priorities[j])\n        if j == numTarget:\n            pQueue.setTarget()\n    pQueue.link()\n    for j in range(numDocs):\n        if pQueue.print() == 0:\n            print(j+1)\n            break\n\n\n\n"}, {"id": 21502370, "name": "\uc7a5\ud0dc\uc8fc", "x": -15.288521766662598, "y": -12.011042594909668, "label": 0, "group": 229, "code": "a = int(input())\nresult = []\nfor z in range(a):\n    temp = input().split()\n    b = []\n    b.append(int(temp[0]))\n    b.append(int(temp[1]))\n    temp = input().split()\n    c = []\n    for i in range(b[0]):\n        c.append(int(temp[i]))\n    count = 0\n    while True:\n        if c[0] == max(c):\n            count = count + 1\n            del c[0]\n            if b[1] == 0:\n                break\n            else:\n                b[1] = b[1] - 1\n        else:\n            c.append(c[0])\n            del c[0]\n            b[1] = b[1] -1\n            if b[1] < 0:\n                b[1] = len(c)-1\n    result.append(count)\nfor i in result:\n    print(i)\n"}, {"id": 19802015, "name": "\ubd09\uc7ac\uc9c4", "x": -9.700870513916016, "y": 19.250396728515625, "label": 0, "group": 230, "code": "# 1966\ubc88. \ud504\ub9b0\ud130 \ud050\n\nimport sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    n, m = map(int, input().split())\n    paper = list(map(int, input().split()))\n    imp = [0 for i in range(n)]\n    imp[m] = 1\n    cnt = 0\n    while True:\n        if paper[0] == max(paper):\n            cnt += 1\n            if imp[0] == 1:\n                print(cnt)\n                break\n            else:\n                paper.pop(0)\n                imp.pop(0)\n        else:\n            # \ub9e8 \ub4a4\uc5d0 \ub123\uc5b4\uc90c\n            paper.append(paper.pop(0))\n            imp.append(imp.pop(0))\n"}, {"id": 17171767, "name": "\uc870\uc0c1\ud559", "x": -16.862211227416992, "y": 14.500805854797363, "label": 0, "group": 230, "code": "T=int(input())\nfor t in range(T):\n    N,idx=map(int,input().split())    \n    li=(list(map(int, input().split(' '))))\n    ans=0\n    check=[0]*N\n    check[idx]='T'\n    if N==1:\n        print(1)\n        continue\n    if len(list(set(li)))==1:\n        print(idx+1)\n        continue\n    while True:\n        #print(li,check)\n        if li[0]==max(li): ##\uac00\uc7a5 \ud070 \uc218 \uc77c\ub54c\n            ans=ans+1\n            if check[0]=='T':\n                print(ans)\n                break\n            else:\n                li.pop(0)\n                check.pop(0)\n        else: ##\uc544\uc9c1 \ud070 \uc218\uac00 \ub0a8\uc544\uc788\uc744\ub54c\n            li.append(li.pop(0))\n            check.append(check.pop(0))\n\n    "}, {"id": 43081334, "name": "\uc0ac\uac15", "x": -18.744388580322266, "y": -18.19663429260254, "label": 0, "group": 230, "code": "import sys\n\nT=int(sys.stdin.readline())\n\nfor i in range(T):\n    lst=[]\n    TF=1\n    num=0\n    N, M=map(int, sys.stdin.readline().split())\n    lst=list(map(int, sys.stdin.readline().split()))\n\n    while 1:\n        lst_sorted=sorted(lst)\n        #print('<<<<< lst_sorted', lst_sorted, '>>>>>')\n        max_=lst_sorted[-1]\n        #print('--------- max', max_, 'lst', lst, '---------')\n        while 1:\n            if lst[0]!=max_:\n                temp=lst[0]\n                del lst[0]\n                lst.append(temp)\n                M-=1\n                if M==-1:\n                    M+=len(lst)\n            elif lst[0]==max_:\n                #print('=[del]=', lst[0])\n                del lst[0]\n                num+=1\n                if M==0:\n                    TF=0\n                break\n            #print('--#####-- lst', lst, 'M', M, 'num', num, '--#####--')\n\n        if TF==0:\n            break\n        M-=1\n    \n    print(num)\n    #print('<--------------------', i, 'end --------------------------->')"}, {"id": 45483526, "name": "\uc774\uc7ac\ud6c8", "x": 23.63584327697754, "y": 0.01824796572327614, "label": 0, "group": 230, "code": "import sys\nT = int(sys.stdin.readline().split()[0])\nfor _ in range(T):\n    N,M = map(int, sys.stdin.readline().split())\n    imprt = list(map(int, sys.stdin.readline().split()))\n    target = [0 for i in range(N)]\n    target[M] = 1\n    \n    order = 1\n    while True:\n        if imprt[0] == max(imprt):\n            del imprt[0]\n            removed = target.pop(0)\n            if removed==1:\n                break\n            else:\n                order+=1\n        else:\n            imprt.append(imprt.pop(0))\n            target.append(target.pop(0))\n    print(order)"}, {"id": 31011126, "name": "\uc774\uae30\uc6b0", "x": -4.756834983825684, "y": -10.002833366394043, "label": 0, "group": 231, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 10892136, "name": "\uc774\uc2b9\ud6a8", "x": 28.835702896118164, "y": 0.5364118814468384, "label": 0, "group": 231, "code": "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    l = [*map(int, input().split())]\n    order = 1\n\n    while l:\n        first = l.index(max(l))\n        if first == 0:\n            if m == 0:\n                print(order)\n                break\n            else:\n                l.pop(0)\n                order += 1\n        else:\n            l.append(l.pop(0))\n        m = (m - 1) % len(l)\n"}, {"id": 45510497, "name": "\uc131\uc11d\ud6c8", "x": 15.940815925598145, "y": -0.2957305610179901, "label": 0, "group": 231, "code": "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    cnt = 0\n    n, m = map(int, input().split())\n    li = list(map(int, input().split()))\n    M = max(li)\n    \n    p = li[m]\n    \n    q = [(i, li[i]) for i in range(n)]\n    \n    while(True):        \n        last = q.pop(0)\n        if last[1] != M:\n            q.append(last)\n        else:\n            cnt += 1\n            li.remove(last[1])\n            \n            if last == (m, p):\n                print(cnt)\n                break\n            \n            M = max(li)\n"}, {"id": 27279943, "name": "\ud669\uc815\uc74c", "x": 6.873381614685059, "y": -2.2363221645355225, "label": 0, "group": 231, "code": "t=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    pos=list(map(int,input().split()))\n    idx=list(range(n))\n    idx[m]='target'\n    index=0\n    while True:    \n        if pos[0]==max(pos):\n            index+=1\n            if idx[0]=='target':\n                print(index)\n                break\n            else:\n                pos.pop(0)\n                idx.pop(0)\n        else:\n            pos.append(pos.pop(0))\n            idx.append(idx.pop(0))        \n"}, {"id": 21914762, "name": "\uc870\uc778\uc131", "x": -22.741308212280273, "y": -7.267906665802002, "label": 0, "group": 232, "code": "def print_q(n,m):\n    queue =input().split()\n    a=1\n    b=m\n    c=queue[m]\n    while True:\n        if queue[0]== max(queue)and (queue[0] != c or b !=0):\n            del queue[0]\n            a=a+1\n            b=b-1\n            \n        elif b==0 and queue[b]== max(queue):\n            print(a)\n            break\n        else:\n            queue.append(queue[0])\n            del queue[0]  \n            b=b-1\n\n            if b==-1:\n                b=n-a\n\n\nnumber=int(input())\ni=0\nfor i in range(number):\n    x=input().split()\n    m=map(int,x)\n    num,indexnum =m\n    print_q(num,indexnum)"}, {"id": 21984195, "name": "\ubcf5\uc2b9\ud6c8", "x": 23.83616065979004, "y": 9.196547508239746, "label": 0, "group": 232, "code": "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n,index = map(int, input().split(\" \"))\n    que = list(map(int,input().split(\" \")))\n    for i in enumerate(que) :\n        if i[0]==index:\n            index=i\n        que[i[0]] = i\n        \n    i=0\n    while que:\n        big = max(que, key = lambda x : x[1])\n        i+=1\n        if big == index:\n            print(i)\n            break\n        a = que.index(big)\n        que = que[a+1:] + que[:a]\n"}, {"id": 30393603, "name": "\uc720\uc778\uc601", "x": -2.369859457015991, "y": -3.304112195968628, "label": 0, "group": 232, "code": "import sys\nt=int(input())\nfor _ in range(t):\n    n, m = map(int, sys.stdin.readline().split())\n    joo=list(map(int,sys.stdin.readline().split()))\n    standard=list(range(n))\n    standard[m]='t'\n    count=0\n    i=0\n    while True:\n        if max(joo)==joo[i]:\n            count+=1\n            if standard[0]=='t':\n                print(count)\n                break\n            else:\n                del joo[0]\n                del standard[0]\n        else:\n            joo.append(joo.pop(0))\n            standard.append(standard.pop(0))"}, {"id": 19965927, "name": "\uace0\ucc3d\uc9c4", "x": -30.453102111816406, "y": -7.420132160186768, "label": 0, "group": 232, "code": "class ArrayQueue:\n  def __init__(self):\n    self.data = []\n  \n  def size(self):\n    return len(self.data)\n\n  def isEmpty(self):\n    return self.size()==0\n\n  def enqueue(self, item):\n    self.data.append(item)\n\n  def dequeue(self):\n    if self.isEmpty():\n      print(\"\ube48 \ud050\uc784\")\n    else:\n      return self.data.pop(0)\n\n  def peek(self):\n    if self.isEmpty():\n      print(\"\ube48 \ud050\uc784\")\n    else:\n      return self.data[0]\n\n#\ud504\ub9b0\ud130 \ud050\nnum = int(input())\nfor i in range(num):\n  n,m = map(int,input().split())\n  arr = list(map(int,input().split()))\n  ma = max(arr)\n  q = ArrayQueue()\n  index = 0\n  for i in range(0,n):\n    q.enqueue(i)\n  while not q.isEmpty():\n    tmp = q.dequeue()\n    if arr[tmp] != ma :\n      q.enqueue(tmp)\n    else:\n      index += 1\n      arr[tmp] *= -1\n      ma = max(arr)\n      if tmp == m:\n        break\n  print(index)"}, {"id": 39758777, "name": "\uc7a5\uc724\uc8fc", "x": 0.1445562094449997, "y": -0.8930597901344299, "label": 0, "group": 233, "code": "import sys\n\ntestcase = int(sys.stdin.readline().rstrip())\n\nfor i in range(testcase):\n    n, m = map(int, sys.stdin.readline().split())\n    document = list(map(int, sys.stdin.readline().split()))\n    chk = [0 for _ in range(n)]\n    chk[m] = 1 # target\n    cnt = 0\n\n    while document:\n        if document[0] == max(document):\n            cnt += 1\n            if chk[0] == 1:\n                print(cnt)\n                break\n            else:\n                chk.pop(0)\n                document.pop(0)\n        else:\n            chk.append(chk.pop(0))\n            document.append(document.pop(0))"}, {"id": 19517716, "name": "\uc724\uc131\ud658", "x": -19.04643440246582, "y": -14.392484664916992, "label": 0, "group": 233, "code": "def Queue(queueList, queueCountList, number) :\n    maxqueue = max(queueList)\n    answer = 0\n    count = 0\n    while len(queueList) != 0 :\n        if queueList[0] < maxqueue :\n            queueList.insert(len(queueList), queueList[0])\n            queueCountList.insert(len(queueCountList), queueCountList[0])\n            queueList.remove(queueList[0])\n            queueCountList.remove(queueCountList[0])\n        elif queueList[0] >= maxqueue :\n            queueList.remove(queueList[0])\n            if queueCountList[0] == number :\n                count = count + 1\n                answer = count\n                queueList = []\n                break\n            queueCountList.remove(queueCountList[0])\n            count = count + 1\n            if queueList == [] :\n                continue\n            else :\n                maxqueue = max(queueList)\n    print(answer)\n\n\na = int(input())\n\nfor count in range(a) :\n    insert = input()\n    insert = list(map(int, insert.split()))\n    N = insert[0]\n    M = insert[1]\n    queue = input()\n    queue = list(map(int, queue.split()))\n    queueCount = []\n\n    for i in range(N) :\n        queueCount.append(i)\n\n    maxqueue = max(queue)\n\n    Queue(queue, queueCount, M)"}, {"id": 29112759, "name": "\uae40\uc625\ube48", "x": -23.012104034423828, "y": 19.597124099731445, "label": 0, "group": 233, "code": "#1966 \ud504\ub9b0\ud130 \ud050\n#\ud050\uc758 \uc131\uc9c8\uc740 FIFO\ub77c\ub294 \uc0ac\uc2e4\uc744 \uc774\uc6a9\ud558\uace0, \ub611\uac19\uc740 INDEX\uc758 \ub9ac\uc2a4\ud2b8\ub97c \ud65c\uc6a9\ud574\uc11c \uc0ac\uc6a9\ud568.(\ub515\uc154\ub108\ub9ac\ub294 \uc21c\uc11c\uac00 \uc5c6\uc5b4 \ud65c\uc6a9 \ubd88\uac00)\nimport sys\nN = int(sys.stdin.readline())\nfor i in range(N):\n    K, M = map(int, sys.stdin.readline().split())\n    pr = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(len(pr)))\n    order = 0\n    while True:\n        if pr[0] == max(pr):\n            order += 1\n            if idx[0] == M:\n                break\n            else:\n                pr.pop(0)\n                idx.pop(0)\n        else:\n            pr.append(pr.pop(0))\n            idx.append(idx.pop(0))\n    print(order)"}, {"id": 28607246, "name": "\ubb38\ucc44\uc6d0", "x": -24.065275192260742, "y": 13.31839370727539, "label": 0, "group": 233, "code": "n = int(input())\nfor _ in range(n):\n    N, M = input().split()\n    data_list = list(map(int, input().split()))\n    N = int(N)\n    M = int(M)\n    # 6 0\n    # 1 1 9 1 1 9 8\n\n    #\ucd9c\ub825 \uc21c\uc11c\ub97c \uc81c\uc791\ud574\ubcf4\uc790\n    #max\uc778 \uac12\uc758 data_list\ub0b4\uc5d0\uc11c\uc758 \uc778\ub371\uc2a4\ub97c \ucc3e\uace0 + \uc2e4\uc81c\ub85c remove\ub41c \uc778\ub371\uc2a4\ub97c \ucc3e\uc790\n    final_max_dict = [{'index_data_list' : 'pop_index' }] # \uc5ec\uae30\ub2e4\uac00 append \ud558\ub294 \ubc29\uc2dd\n    item_own_dict = []\n    count = 0\n\n    #\uc0dd\uc131\n\n    for item_index in range(len(data_list)):\n        item_own_index = item_index\n        item_own_hierarchy = data_list[item_index]\n        item_own_dict_piece = [item_own_index,count]\n        item_own_dict.append(item_own_dict_piece)\n        \n    item_new_dict = {}\n\n    # print('data_list', data_list)\n    # print('item_onw_dict', item_own_dict)\n    while len(data_list) > 0:\n        stand_data = max(data_list)\n        stand_data_index = data_list.index(stand_data)\n        left = data_list[:stand_data_index]\n        right = data_list[stand_data_index+1:]\n        left_own = item_own_dict[:stand_data_index]\n        right_own = item_own_dict[stand_data_index+1:]\n        data_list = right + left\n        count += 1\n        item_own_dict[stand_data_index][1] = count\n        item_new_dict[item_own_dict[stand_data_index][0]] = item_own_dict[stand_data_index][1]\n        # item_new_dict.append(item_own_dict[stand_data_index])\n        item_own_dict = right_own + left_own\n        \n        # print('stand_data_index', stand_data_index)\n        # print('data_list : ' , data_list)\n        # print('item_new_dict : ', item_new_dict)\n        \n    print(item_new_dict[M])\n\n\n\n\n\n\n"}, {"id": 17045786, "name": "\uc548\uc724\ud61c", "x": 0.8284000754356384, "y": -18.19293212890625, "label": 0, "group": 234, "code": "T = int(input())\nfor t in range(T):\n    N,M = list(map(int,input().split()))\n    A = list(map(int,input().split()))\n    count = 0\n    p = 0\n    while True:\n        i = 0\n        for i in range(len(A)):\n            if A[i]==max(A):\n                if i==M:\n                    print(count+1)\n                    p = 1\n                    break\n                else:\n                    A[i]=0\n                    count += 1\n        if p==1:\n            break"}, {"id": 25918477, "name": "\uae40\uc720\uc815", "x": -21.272239685058594, "y": 3.680372714996338, "label": 0, "group": 234, "code": "# \uc791\uc131\uc77c\uc790 20210201\n# \ubb38\uc81c\uba85 : \ubc31\uc900 [1966] \ud504\ub9b0\ud130 \ud050\n\nimport sys\ndef solution(n,order,printList):\n    answer=0\n    orderList=[]\n    for i in range(len(printList)):\n        orderList.append(i)\n    i=0\n    while True:\n        if max(printList)==printList[i]:\n            answer+=1\n            if order==orderList[i]:\n                print(answer)\n                return\n            del printList[i]\n            del orderList[i]\n        else:\n            printListTmp=printList[i]\n            orderListTmp=orderList[i]\n            del printList[i]\n            del orderList[i]\n            printList.append(printListTmp)\n            orderList.append(orderListTmp)\n            \n\nif __name__==\"__main__\":\n    testCase=int(sys.stdin.readline())\n\n    for i in range(testCase):\n        n,order=map(int,sys.stdin.readline().split())\n        printList=list(map(int,sys.stdin.readline().split()))\n        solution(n,order,printList)"}, {"id": 47809994, "name": "\uae40\uc815\ud654", "x": 0.19101157784461975, "y": -17.913970947265625, "label": 0, "group": 234, "code": "T = int(input())\nfor _ in range(T):\n    N, M = map(int, input().split())\n    arr = list(map(int, input().split()))\n    m = max(arr)\n    i = j = I = 0\n    R = True\n    n = 1\n    while R:\n        for j in range(N):\n            k = (i+j) % N\n            if arr[k] == m:\n                if k == M:\n                    print(n)\n                    R = False\n                else:\n                    n += 1\n                    I = k\n        i = I\n        m -= 1"}, {"id": 14766771, "name": "\uc2e0\ubbfc\uc544", "x": 13.989073753356934, "y": -9.01816177368164, "label": 0, "group": 234, "code": "tc = int(input())\nfor t in range(tc):\n    n, m = map(int, input().split())\n\n    words = list(map(int, input().split()))\n    re = [i for i in range(1, n+1)]\n    key = re[m]\n\n    final = []\n    while words:\n\n        if words[0] >= max(words):\n            num = words.pop(0)\n            str_num = re.pop(0)\n            final.append(str_num)\n        else:\n            num = words.pop(0)\n            words.append(num)\n            str_num = re.pop(0)\n            re.append(str_num)\n\n    print(final.index(key)+1)"}, {"id": 17775615, "name": "\uac15\uacbd\uc900", "x": 19.408004760742188, "y": 15.921119689941406, "label": 0, "group": 235, "code": "#1966\n\nt = int(input())\nfor _ in range(t):\n    N, M = map(int, input().split())\n    temp = [[i, n] for n,i in enumerate(map(int,input().split()))]\n    i = 0\n    max_ = max(temp,key = lambda x: x[0])\n    while True:\n        if temp[0][0] < max_[0]:\n            temp.append(temp.pop(0))\n        else:\n            i += 1\n            if temp.pop(0)[1] == M:\n                break\n            max_ = max(temp,key = lambda x: x[0])\n    print(i)     "}, {"id": 12392053, "name": "\ub0a8\uad81\ud76c\uc900", "x": 1.903315782546997, "y": -7.200124263763428, "label": 0, "group": 235, "code": "T = int(input())\nfor tc in range(T):\n    N, M = map(int, input().split())\n    prior = list(map(int, input().split()))\n    index = list(range(N))\n    prior = list(zip(prior, index))\n    target = prior[M][1]\n    cnt = 0\n    while True:\n        front = prior[0][0]\n        exist = 0\n        for i in range(1, len(prior)):\n            if prior[i][0] > front:\n                exist = 1\n                break\n        if exist:\n            prior.append(prior.pop(0))\n        else:\n            cnt += 1\n            prints = prior.pop(0)\n            if target == prints[1]:\n                print(cnt)\n                break"}, {"id": 22201686, "name": "\ucd5c\uc9c4\uc2e4", "x": 15.219001770019531, "y": -6.829290866851807, "label": 0, "group": 235, "code": "t = int(input())\n\nfor _ in range(t):\n    n, m = map(int, input().split(' '))\n    d = list(map(int, input().split(' ')))\n    order = sorted(d, reverse=True)\n    max_index = 0\n    q = [(i, idx) for idx, i in enumerate(d)]\n    count = 0\n\n    while True:\n        if q[0][0] == order[max_index]:\n            count += 1\n            max_index += 1\n            if q[0][1] == m:\n                print(count)\n                break\n            else:\n                q.pop(0)\n        else:\n            q.append(q.pop(0))"}, {"id": 45323209, "name": "\ub0a8\uc0c1\ubbf8", "x": -10.470032691955566, "y": -18.13222312927246, "label": 0, "group": 235, "code": "import sys\ninput = sys.stdin.readline\n\nnum = int(input())\nresult = []\n\nfor i in range(num):\n    paper, want = map(int, input().split())\n    important = list(map(int, input().split()))\n    index = []\n\n    for p in range(paper):\n        index.append(p)\n\n    count = 1\n    while True:\n        if important[0] != max(important):\n            tmp = important.pop(0)\n            important.append(tmp)\n            tmp2 = index.pop(0)\n            index.append(tmp2)\n\n        elif important[0] == max(important):\n            if index[0] == want:\n                break\n            else:\n                important.pop(0)\n                index.pop(0)\n                count += 1\n    result.append(count)\n\nfor i in result:\n    print(i)"}, {"id": 32269721, "name": "\uac15\ud604\ud638", "x": -6.906374931335449, "y": -27.255088806152344, "label": 0, "group": 236, "code": "import sys\nT = int(sys.stdin.readline()) # test case\n\nfor _ in range(T):\n    N, M = map(int, sys.stdin.readline().split()) # N = number of documents # M = target document\n    lst = list(map(int, sys.stdin.readline().split())) # priorities\n    targetSeq = 1\n    while len(lst) > 0:\n        maxPrior = max(lst)\n        if M == 0:\n            if lst[0] >= maxPrior:\n                lst.pop(0)\n                break\n            else:\n                temp = lst.pop(0)\n                lst.append(temp)\n                M = len(lst) - 1\n        else:\n            if lst[0] >= maxPrior:\n                lst.pop(0)\n                targetSeq += 1\n            else:\n                temp = lst.pop(0)\n                lst.append(temp)\n            M -= 1\n\n\n    print(targetSeq)"}, {"id": 48420479, "name": "\ubc15\uc9c0\ube48", "x": -2.8705382347106934, "y": 5.0131120681762695, "label": 0, "group": 236, "code": "# BOJ_1966 \ud504\ub9b0\ud130 \ud050\n# 2022-08-28\n\nT = int(input())\n\nfor t in range(T):\n    N, M = map(int, input().split())\n    numbers = list(map(int, input().split()))\n\n    idx = []\n    for i in range(N):\n        idx.append(i)\n\n    cnt = 0\n    while 1:\n        if numbers[idx[0]] >= max(numbers):\n            numbers[idx[0]] = 0\n            cnt += 1\n            if idx[0] == M:\n                print(cnt)\n                break\n            idx.pop(0)\n\n        else:\n            idx.append(idx.pop(0))"}, {"id": 25240020, "name": "\uc784\ubb38\uc219", "x": -24.0842342376709, "y": 20.82586097717285, "label": 0, "group": 236, "code": "#\uc870\uc0ac\ud560 \ud69f\uc218 \uc124\uc815\ntest_case=int(input())\n#\ucd08\uae30\uac12 \uc9c0\uc815. \ubb38\uc11c\uc218 n, \ud655\uc778\ud560 \uc778\ub371\uc2a4m, \uc6b0\uc120\uc21c\uc704 \ubc30\uc5f4imp,\uc6b0\uc120\uc21c\uc704\uc758 \uc778\ub371\uc2a4 idx\nfor _ in range(test_case):\n    n,m=list(map(int,input().split()))\n    imp=list(map(int,input().split()))\n    idx=list(range(len(imp)))\n    idx[m]='target'\n    \n    #\uc21c\uc11c \uac12\n    order=0\n    while True:\n        #1.\uc6b0\uc120\uc21c\uc704 \ub192\uc744\ub54c\n        if imp[0]==max(imp):\n            order+=1#\uc21c\uc11c\uc99d\uac00\n            #2.\ud0c0\uac9f\uc77c \ub54c\n            if idx[0]=='target':\n                #\ucd9c\ub825 \ud6c4 \ub9ac\ud134\n                print(order)\n                break\n            else:#\ud0c0\uac9f\uc740 \uc544\ub2d0\ub54c\n                imp.pop(0)\n                idx.pop(0)\n        else:#\uc6b0\uc120\uc21c\uc704\ub3c4 \ub0ae\uace0 \ud0c0\uac9f\ub3c4 \uc544\ub2d0\ub54c\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))\n    \n    \n    \n    "}, {"id": 44288640, "name": "\ubd09\ubcd1\uc218", "x": -11.9082612991333, "y": -10.624815940856934, "label": 0, "group": 236, "code": "caseNum = int(input())\nfor x in range(caseNum):\n    n, m = map(int, input().split(\" \"))\n    arr = list(map(int, input().split(\" \")))\n    \n    enumArr = list(enumerate(arr))\n    target = enumArr[m]\n    arr.sort(reverse=True)\n\n    index = 0\n    count = 0\n    while True:\n        if enumArr[index][1] == arr[0]:\n            count += 1\n            if enumArr[index] == target:\n                print(count)\n                break\n            arr.pop(0)\n            enumArr.pop(index)\n            index -= 1\n        if (index == len(enumArr) - 1):\n            index = 0\n        else:\n            index += 1"}, {"id": 18140127, "name": "\uc774\ub3c4\uc900", "x": -38.00606155395508, "y": -4.280248165130615, "label": 0, "group": 237, "code": "class node:\n    def __init__(self, data, next_node=None, key=False):\n        self.data = data\n        self.next_node = next_node\n        self.key = key\n\n\nclass c_queue:\n    def __init__(self, data=None, key=False):\n        self.head = node(data, key=key)\n        self.head.next_node = self.head\n        self.tail = self.head\n        self.priority = [data]\n        if data == None:\n            self.len = 0\n        else:\n            self.len = 1\n\n    def sort(self):\n        self.priority.sort()\n\n    def enqueue(self, data, key=False):\n        if self.len == 0:\n            self.__init__(data, key)\n            return\n        self.tail.next_node = node(data, self.head, key)\n        self.tail = self.tail.next_node\n        self.len += 1\n        self.priority.append(data)\n\n    def dequeue(self):\n        if self.len == 1:\n            data = self.head.data\n            key = self.head.key\n            self.__init__()\n            return data, key\n        data = self.head.data\n        key = self.head.key\n        self.head = self.head.next_node\n        self.tail.next_node = self.head\n        self.len -= 1\n        self.priority.pop()\n        return data, key\n\n    def __len__(self):\n        return self.len\n\n    def next(self, n=1):\n        for i in range(n):\n            self.tail = self.head\n            self.head = self.head.next_node\n        return self\n\n    def isempty(self):\n        if self.len == 0:\n            return True\n        else:\n            return False\n\n\nQ = int(input())\nfor _ in range(Q):\n    N, M = [int(i) for i in input().split()]\n    circle_queue = c_queue()\n    for i, x in enumerate(input().split()):\n        if i == M:\n            circle_queue.enqueue(int(x), True)\n        else: circle_queue.enqueue(int(x))\n    circle_queue.sort()\n    key = False\n    return_value = 0\n    while not key:\n        if circle_queue.head.data == circle_queue.priority[-1]:\n            return_value += 1\n            data, key = circle_queue.dequeue()\n        else: circle_queue.next()\n    print(return_value)"}, {"id": 21537521, "name": "\ud64d\uc2dc\uc5b8", "x": -5.367303848266602, "y": -20.139930725097656, "label": 0, "group": 237, "code": "import sys\ninput=sys.stdin.readline\nc=int(input())\n\nfor _ in range(0,c):\n    N, M = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n\n    m=M\n    i=1\n\n    if N == 1:\n        print(1)\n        continue\n    \n    while l:\n        if l[0] == max(l):\n            if m == 0:\n                print(i)\n                break\n            m-=1\n            i+=1\n            l.pop(0)\n            \n        else:\n            if m == 0:\n                m=len(l)-1\n            else: m-=1\n            l.append(l.pop(0))\n\n        \n"}, {"id": 27431033, "name": "\uc131\uc815\ud658", "x": -5.125040531158447, "y": -24.969436645507812, "label": 0, "group": 237, "code": "for tc in range(1, int(input())+1):\n    n, m = map(int, input().split())\n    queue = list(map(int, input().split()))\n    ps = list(range(n))\n    cnt = 0\n    while 1:\n        e = queue.pop(0)\n        p = ps.pop(0)\n        if queue:\n            if e >= max(queue):\n                cnt += 1\n                if p == m:\n                    break\n            else:\n                queue.append(e)\n                ps.append(p)\n        else:\n            cnt += 1\n            break\n    print(cnt)"}, {"id": 18560005, "name": "\uc784\ud638", "x": -12.423134803771973, "y": -10.311567306518555, "label": 0, "group": 237, "code": "test_case = int(input())\nresult = list()\n\nfor i in range(test_case):\n    N, M = list(map(int, input().split(\" \")))\n    data = list(map(int, input().split(\" \")))\n    target_index = M\n    popped = 0\n    max_data = max(data)\n    while data:\n        if data[0] != max(data):\n            temp = data[0]\n            data.pop(0)\n            data.append(temp)\n            if target_index == 0:\n                target_index = len(data) - 1\n            else:\n                target_index -= 1\n        else:\n            if target_index == 0:\n                result.append(str(popped+1))\n            data.pop(0)\n            popped += 1\n            target_index -= 1\n\nprint(\"\\n\".join(result))"}, {"id": 20032656, "name": "\uc548\ubcd1\uc6b1", "x": -16.046321868896484, "y": -1.6778110265731812, "label": 0, "group": 238, "code": "def rotate(l, n):\n    return l[n:] + l[:n]\n\n\ndef turn(c, d):\n    if c[0] == max(c):\n        return c, d\n    else:\n        return rotate(c, c.index(max(c))), rotate(d, c.index(max(c)))\n\n\nn = int(input())\nc = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    c = list(map(int, input().split()))\n    f = c[b]  # \ubcf4\ub958\n    d = [0 for j in range(len(c))]\n    d[b] = 1\n    print_cnt = 0\n    q=True\n    while q:\n        if c[0] == f and d[0] == 1 and c[0] >= max(c):\n            print_cnt += 1\n            print(print_cnt)\n            q=False\n\n        elif c[0] == max(c):\n            del c[0], d[0]\n            print_cnt += 1\n\n        else:\n            c, d = turn(c, d)\n\n\n\n\n\n"}, {"id": 15286618, "name": "\ubd09\uc724\ucca0", "x": -13.479157447814941, "y": 16.378955841064453, "label": 0, "group": 238, "code": "n= int(input())\nfor i in range(n):\n    N, M = list(map(int, input().split()))\n    Rank = list(map(int, input().split()))\n    num, count, cycle = 0, 0, 0  #num\uc740 \uac80\uc0ac\ud55c \ud69f\uc218, count\ub294 print\ud55c \ud69f\uc218, cycle = \ud55c\ubc14\ud034 \ub3cc\uc558\uc744 \ub54c \ucd94\uac00\ud574\uc8fc\ub294 \uac83.\n    while count < N:\n        if max(Rank) == Rank[0]:\n            Rank.pop(0)\n            count += 1\n            if num == M + cycle:\n                cnt = count\n                break\n            num += 1\n        else:\n            Rank.append(Rank.pop(0))\n            if num == M + cycle:\n                cycle += len(Rank)\n            num += 1\n    print(cnt) "}, {"id": 15573806, "name": "\uc7a5\uc9c4\uc601", "x": 19.421459197998047, "y": 8.096333503723145, "label": 0, "group": 238, "code": "T = int(input())\n\nfor i in range(T):\n    cnt = 0\n    num, b = map(int, input().split())\n    waiting = list(map(int, input().split()))\n    to_find = waiting[b]\n    key = [0 for _ in range(num)]\n    key[b] = 'KEY'\n    while True:\n        if waiting[0] == max(waiting):\n            cnt +=1\n            if key[0] == 'KEY':\n                print(cnt)\n                break\n            else:\n                waiting.pop(0)\n                key.pop(0)\n        else:\n            waiting.append(waiting.pop(0))\n            key.append(key.pop(0))\n"}, {"id": 46958568, "name": "\uad8c\ub300\uc77c", "x": 9.247428894042969, "y": 21.502342224121094, "label": 0, "group": 238, "code": "number = int(input());\n\nfor _ in range(number):\n  a,b = map(int, input().split())\n  arr = list(map(int, input().split()))\n  r = 1\n  while arr:\n    if arr[0] >= max(arr):\n      arr.pop(0)\n      if b == 0:\n        print(r)\n        break\n      else:\n        b -= 1\n        r += 1\n\n    else:\n      arr.append(arr.pop(0))\n      if b == 0: \n        b = len(arr) - 1\n      else:\n        b -= 1"}, {"id": 40497450, "name": "\uae40\uc720\uc601", "x": 14.899298667907715, "y": 1.9894222021102905, "label": 0, "group": 239, "code": "test_num = int(input())\nresults = []\n\nfor test in range(test_num):\n    n, m = list(map(int, input().split(\" \")))\n    cnt = 1\n    important_docs = list(map(int, input().split(\" \")))[:n]\n\n    for idx in range(n):\n        max_idx = important_docs.index(max(important_docs))\n        pre = important_docs[:max_idx]\n        post = important_docs[max_idx + 1:]\n        \n        if max_idx == m:\n            results.append(f\"{cnt}\")\n            break\n        elif m < max_idx:\n            m = len(post) + m\n        elif m > max_idx:\n            m -= (max_idx + 1)\n\n        post.extend(pre)\n        important_docs = post\n        cnt += 1\n\nprint(\"\\n\".join(results))"}, {"id": 12594549, "name": "\uac15\uc2dc\ud638", "x": 0.029990121722221375, "y": -23.463573455810547, "label": 0, "group": 239, "code": "T = int(input())\n\nfor _ in range(T):\n    N, num = map(int, input().split())\n    queuelist = list(map(int, input().split()))\n    count = 0\n    while True:\n        idx = queuelist.index(max(queuelist))\n        if idx != 0:\n            for i in range(idx):\n                temp = queuelist.pop(0)\n                queuelist.append(temp)\n                if num == 0:\n                    num = len(queuelist)-1\n                else:\n                    num -= 1\n        queuelist.pop(0)\n        count += 1\n        if num == 0:\n            break\n        num -= 1\n    print(count)\n\n"}, {"id": 11660250, "name": "\uc548\ud0dc\uc6c5", "x": 20.0303897857666, "y": 4.175093173980713, "label": 0, "group": 239, "code": "t = int(input())\nfor q in range(t):\n    n,m = map(int,input().split())\n    quimp = list(map(int,input().split()))\n    qun = [x for x in range(n)]\n    cnt = 1\n    for i in range(n):\n        maxa = max(quimp)\n        maxap = -1\n        l = len(quimp)\n        for j in range(len(quimp)):\n            if maxa == quimp[j]:\n                maxap = j\n                break\n        if qun[maxap] == m:\n            break\n        quimp = quimp[min(l,maxap+1):] + quimp[:maxap]\n        qun = qun[min(l,maxap+1):] + qun[:maxap]\n        cnt += 1\n    print(cnt)"}, {"id": 18461758, "name": "\uc774\uc9c4\uc6b1", "x": 0.7972397208213806, "y": -23.687355041503906, "label": 0, "group": 239, "code": "T = int(input())\n\nfor t in range(T):\n    N, M = map(int, input().split())\n    queue = [int(x) for x in input().split()]\n    cnt = i = 0\n    tmp = M\n\n    while True:\n        if queue[0] == max(queue):\n            queue.pop(0)\n            cnt += 1\n            if tmp == 0:\n                break\n        else:\n            queue.append(queue.pop(0))\n        \n        if tmp == 0:\n            tmp = len(queue) - 1\n        else:\n            tmp -= 1\n    \n    print(cnt)"}, {"id": 36247372, "name": "\uc0ac\uacf5\ud6a8\uc8fc", "x": -10.369974136352539, "y": 2.2349367141723633, "label": 0, "group": 240, "code": "# 1966 - \ud504\ub9b0\ud130 \ud050\n\nimport sys\n\ndef solve():\n    T = int(input())\n    \n    for _ in range(T):\n        N, M = map(int, sys.stdin.readline().strip().split())\n        n_list = list(map(int, sys.stdin.readline().strip().split()))\n        count = 0\n        while True:\n            if max(n_list) != n_list[0]:\n                if M == 0:\n                    M = len(n_list)\n                n_list.append(n_list.pop(0))\n            else:\n                count += 1\n                if M == 0:\n                    break\n                n_list.pop(0)\n            M -= 1\n        print(count)\n\nsolve()\n"}, {"id": 29444119, "name": "\uc548\uc724\uc77c", "x": 1.5919265747070312, "y": 20.244287490844727, "label": 0, "group": 240, "code": "import sys\ninput=sys.stdin.readline\nfor _ in range(int(input())):\n    N,M=map(int,input().split())\n    l=[*map(int,input().split())]\n    d=c=b=0;k=max(l);v=l[M]\n    c+=l.count(v)\n    for j in range(M+1):\n        if l[j]==v:b+=1\n    while k!=v:\n        n=0\n        while (e:=l.pop(0)):\n            if v==e:n+=1\n            if e==k:k=max(l);break\n            l.append(e)\n        if n>=b:b=c-n+b\n        else:b=b-n\n        d+=1\n    print(d+b)"}, {"id": 5835726, "name": "\ubd09\uc9c4\uc120", "x": -28.216217041015625, "y": 25.239057540893555, "label": 0, "group": 240, "code": "\"\"\"\n1. \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uc218 \ubc1b\uae30\n2. \ud14c\uc2a4\ud2b8 \ucf00\uc774\uc2a4 \uc785\ub825 2\uc904\ubc1b\uae30\n3. Split\ud558\uc5ec N, M int\ub85c \ucd94\ucd9c\n4. Split\ud558\uc5ec N\uac1c\uc758 \ubb38\uc11c \uc911\uc694\ub3c4\uac12 \ub9ac\uc2a4\ud2b8 Qlist[int]\ub85c \ucd94\ucd9c\n5. \uad81\uae08\ud55c \ubb38\uc11c\uc758 \uc704\uce58\ub97c \ucd94\uc801\ud560 trace int \ubcc0\uc218 \uc0dd\uc131\n6. trace = N\n7. Qlist\uc758 index 0\uc758 \uc911\uc694\ub3c4\uc640 Qlist Max\uac12\uacfc \ube44\uad50\ud55c\ub2e4.\n8. index 0\uc774 \ud06c\ub2e4\uba74 trace\uac12\uacfc \uac19\uc740\uc9c0 \ube44\uad50\ud55c\ub2e4.\n8-1. \uac19\ub2e4\uba74 trace\ucd9c\ub825\ud558\uace0 \uc885\ub8cc\n8-2. \ub2e4\ub974\ub2e4\uba74 \uad81\uae08\ud55c \ubb38\uc11c\uac00 \uc544\ub2c8\ubbc0\ub85c pop\ud558\uace0 trace -1\ud55c\ub2e4.\n9. index 0\uc774 \uc791\ub2e4\uba74 trace\uac12\uacfc \uac19\uc740\uc9c0 \ube44\uad50\ud55c\ub2e4\n9-1. \uac19\ub2e4\uba74 index 0\uc744 pop\ud558\uace0 Qlist\uc5d0 \ub2e4\uc2dc Push\ud55c\ub2e4. trace = \ubb38\uc11c\ucd1d\uac2f\uc218 -1\n9-2. \ub2e4\ub974\ub2e4\uba74 index 0\uc744 pop\ud558\uace0 Qlist\uc5d0 \ub2e4\uc2dc Push\ud55c\ub2e4. trace -1\ud55c\ub2e4.\n\"\"\"\n\ncase = int(input())\n\nfor _ in range(case):\n    M, N = input().split()\n    M = int(M)\n    N = int(N)\n    Qlist = list(input().split())\n\n    trace = N\n    Max = max(Qlist)\n\n    count = 1\n\n    while True:\n        if Qlist[0] >= Max:\n            if trace == 0:\n                print(count)\n                break\n            else:\n                pop = Qlist.pop(0)\n                Max = max(Qlist)\n                trace -= 1\n                count += 1\n\n        else:\n            if trace == 0:\n                pop = Qlist.pop(0)\n                Qlist.append(pop)\n                trace = len(Qlist) -1\n            else:\n                pop = Qlist.pop(0)\n                Qlist.append(pop)\n                trace -= 1"}, {"id": 15311239, "name": "\uae40\uba85\ubbfc", "x": -21.013704299926758, "y": -13.170372009277344, "label": 0, "group": 240, "code": "# coding=utf-8\nN = int(input())\nfor i in range(N):\n    a = list(map(int, input().split(' ')))\n    b = list(map(int, input().split(' ')))\n    check = [1 for j in range(len(b))]\n    start = 0\n    end = a[0]-1\n    count = 1\n    while True:\n        max = b[start]\n        id_max = start\n        if start < end:\n            for j in range(start, end+1):\n                if b[j] > max and check[j]:\n                    max = b[j]\n                    id_max = j\n        else:  #start > end\n            for j in range(start, a[0]):\n                if b[j] > max and check[j]:\n                    max = b[j]\n                    id_max = j\n            for j in range(0, end+1):\n                if b[j] > max and check[j]:\n                    max = b[j]\n                    id_max = j\n        for j in range(end, start):\n            if b[j] > max and check[j]:\n                max = b[j]\n                id_max = j\n        if id_max == a[1]:\n            print(count)\n            break\n        check[id_max] = 0\n        count += 1\n        start = id_max\n        end = id_max\n        while check[start] == 0:\n            if start == a[0] - 1:\n                start = 0\n            else:\n                start += 1\n        while check[end] == 0:\n            if end == 0:\n                end = a[0] - 1\n            else:\n                end -= 1\n\n"}, {"id": 17843145, "name": "\ubc30\uc18c\uc740", "x": -2.3073432445526123, "y": -1.2576438188552856, "label": 0, "group": 241, "code": "import sys\n\n# T = int(input())\nT = int(sys.stdin.readline())\n\nfor i in range(T):\n#     N, M = list(map(int, input().split()))\n    N, M = list(map(int, sys.stdin.readline().split()))\n#     imp_arr = list(map(int, input().split()))\n    imp_arr = list(map(int, sys.stdin.readline().split()))\n    flag_arr = [0 for _ in range(N)]\n    flag_arr[M] = 1\n    count = 0\n    if len(imp_arr) == N:\n        while True:\n            if imp_arr[0] == max(imp_arr):\n                count += 1\n                if flag_arr[0] == 1:\n                    print(count)\n                    break\n                else:\n                    del imp_arr[0]\n                    del flag_arr[0]\n            else:\n                imp_arr.append(imp_arr.pop(0))\n                flag_arr.append(flag_arr.pop(0))"}, {"id": 32126588, "name": "\uc870\uc885\uc625", "x": -18.884618759155273, "y": 4.570156574249268, "label": 0, "group": 241, "code": "\"\"\"Solution code for \"BOJ 1966. \ud504\ub9b0\ud130 \ud050\".\n\n- Problem link: https://www.acmicpc.net/problem/1966\n- Solution link: http://www.teferi.net/ps/problems/boj/1966\n\"\"\"\n\nimport sys\n\n\ndef main():\n    T = int(sys.stdin.readline())\n    for _ in range(T):\n        def dist_from_last_index(index):\n            dist = index - last_index\n            return dist if dist >= 0 else dist + N\n\n        N, M = [int(x) for x in sys.stdin.readline().split()]\n        priorities = [int(x) for x in sys.stdin.readline().split()]\n        max_priority = max(priorities)\n\n        indexes_by_priority = [[] for _ in range(max_priority + 1)]\n        for i, p in enumerate(priorities):\n            indexes_by_priority[p].append(i)\n\n        last_index = 0\n        answer = 0\n        for p in range(max_priority, priorities[M], -1):\n            if not (indexes := indexes_by_priority[p]):\n                continue\n            answer += len(indexes)\n            last_index = max(indexes, key=dist_from_last_index)\n        target_dist = dist_from_last_index(M)\n        answer += sum(1 for i in indexes_by_priority[priorities[M]]\n                      if dist_from_last_index(i) <= target_dist)\n\n        print(answer)\n\n\nif __name__ == '__main__':\n    main()\n"}, {"id": 34081125, "name": "\uace0\ubcd1\uace4", "x": 8.79747486114502, "y": -5.6388258934021, "label": 0, "group": 241, "code": "n = int(input())\nfor i in range(n):\n    a, b = map(int, input().split())\n    t = list(map(int, input().split()))\n    ans = 1\n    t2 = [0]*a\n    t2[b] = 1\n    while True:\n        c = t[0]\n        d = t2[0]\n        if c == max(t):\n            if d == 1:\n                break\n            else:\n                ans += 1\n        else:\n            t.append(c)\n            t2.append(d)\n        c = t.pop(0)\n        d = t2.pop(0)\n    print(ans)"}, {"id": 35809941, "name": "\uc0ac\uacf5\uc724\uc77c", "x": 0.31785908341407776, "y": 2.298704147338867, "label": 0, "group": 241, "code": "import sys\n\nTC = int(sys.stdin.readline().lstrip())\n\nfor _ in range(TC):\n    n, m = list(map(int, sys.stdin.readline().split()))\n    imp = list(map(int, sys.stdin.readline().split()))\n    idx = list(range(len(imp)))\n    idx[m] = 'target'\n\n    order = 0\n\n    while True:\n        if imp[0] == max(imp):\n            order += 1\n            if idx[0] == 'target':\n                print(order)\n                break\n            else:\n                imp.pop(0)\n                idx.pop(0)\n\n        else:\n            imp.append(imp.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 35017828, "name": "\uacf5\ud6a8\uc9c4", "x": -24.596830368041992, "y": -11.328034400939941, "label": 0, "group": 242, "code": "qsize = 1001 #901\ub3c4 \ucda9\ubd84\nQ = [0] * qsize\n\nf = e = 0\ndef reset():\n    global f, e\n    f = e = 0\n\ndef push(num):\n    global e\n    e += 1\n    Q[e] = num\n\ndef popleft():\n    global f\n    f += 1\n    return Q[f]\n\ndef isEmpty():\n    global f, e\n    if f == e:\n        return True\n    else:\n        return False\n\nfor tc in range(int(input())):\n    N, M = map(int, input().split())\n    nums = list(map(int, input().split()))\n    reset()\n    important = [0] * 10\n    for i, num in enumerate(nums):\n        push((i, num))\n        important[num] += 1\n\n    for m in range(9, 0, -1):\n        if important[m]:\n            most_important = m\n            break\n    cnt = 0\n    while not isEmpty():\n        i, num = popleft()\n        if num == most_important:\n            cnt += 1\n            if i == M:\n                break\n            important[num] -= 1\n            if not important[num]:\n                for m in range(num - 1, 0, -1):\n                    if important[m]:\n                        most_important = m\n                        break\n        else:\n            push((i, num))\n    \n    print(cnt)\n"}, {"id": 32418885, "name": "\ub0a8\ubcf4\uacbd", "x": 21.88534927368164, "y": 17.753623962402344, "label": 0, "group": 242, "code": "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n,m = map(int, input().split())\n    queue = list(map(int, input().split()))\n\n    cnt = 0\n    target = queue[m]\n    queue[m] = -1\n\n    while max(queue) > target:\n        cnt += 1\n        pop = queue.index(max(queue))\n        queue = queue[pop+1:] + queue[:pop]\n\n    print(cnt + queue[:queue.index(-1)].count(target) + 1)\n"}, {"id": 22141533, "name": "\uc720\uc120\ud76c", "x": -15.502615928649902, "y": 1.1233488321304321, "label": 0, "group": 242, "code": "loop = int(input())\n\ndef solve(m, docs):\n    index = m\n    count = 0\n    list = docs\n\n    while True:\n        if list[0] < max(list):\n            list.append(list[0])\n            del list[0]\n            if index == 0:\n                index = len(list) -1\n            else:\n                index -=1\n        else:\n            del list[0]\n            count+=1\n            if index == 0:\n                break\n            else:\n                index -=1\n    return count\n\n\nanswer = []\n\nfor i in range(loop):\n    m = list(map(int, input().split(' ')))[1]\n    docs = list(map(int, input().split(' ')))\n    answer.append(solve(m, docs))\n\nfor a in answer:\n    print(a)"}, {"id": 28281633, "name": "\uc548\uc2e0\uc6b0", "x": -18.620203018188477, "y": -17.281448364257812, "label": 0, "group": 242, "code": "import sys\n\n\nT = int(sys.stdin.readline())\ni = 0\nwhile i < T:\n    N, M = map(int, sys.stdin.readline().split())\n    imp_list = list(map(int, sys.stdin.readline().split()))\n    target = imp_list[M]\n    cnt = 0\n    while True:\n        if M == 0:\n            if target < max(imp_list):\n                imp_list.append(target)\n                del imp_list[0]\n                M = len(imp_list) - 1\n            else:\n                cnt += 1\n                sys.stdout.write(str(cnt) + '\\n')\n                break\n        else:\n            if imp_list[0] < max(imp_list):\n                imp_list.append(imp_list[0])\n                del imp_list[0]\n                M -= 1\n            else:\n                del imp_list[0]\n                cnt += 1\n                M -= 1\n    i += 1"}, {"id": 12986033, "name": "\uc774\uc18c\uc5f0", "x": 28.548139572143555, "y": 0.905332088470459, "label": 0, "group": 243, "code": "for x in range(int(input())):\n    m,n=map(int,input().split())\n    A=list(map(int,input().split()))\n    B=list(range(m))\n    cnt=0\n    while True:\n        b=B.pop(0)\n        if max(A) == A[0]:\n            A.pop(0)\n            cnt+=1\n            if b==n:\n                print(cnt)\n                break\n        else:\n            A.append(A.pop(0))\n            B.append(b)"}, {"id": 30454922, "name": "\uc2ec\uc0c1\ud601", "x": 3.0949175357818604, "y": 12.299054145812988, "label": 0, "group": 243, "code": "import sys\n\ninput = sys.stdin.readline\n\n\ndef sol1966():\n    answer = []\n    for t in range(int(input())):\n        n, m = map(int, input().split())\n        docs = [*map(int, input().split())]\n        turn = 1\n        while True:\n            i = docs.index(max(docs))\n            if i == m:\n                break\n            docs = docs[i+1:] + docs[:i]\n            m = m-i-1 if i < m else len(docs)-i+m\n            turn += 1\n        answer.append(str(turn))\n    print('\\n'.join(answer))\n                \n\nif __name__ == '__main__':\n    sol1966()"}, {"id": 47566879, "name": "\ubc15\uacbd\ud604", "x": 24.649038314819336, "y": 1.1836574077606201, "label": 0, "group": 243, "code": "from sys import stdin\n\ndef run(q, ind):\n    ans = 0\n    while len(q) > 0:\n        if q[0] == max(q):\n            ans += 1\n            if ind == 0:\n                break\n            del q[0]\n        else:\n            tmp = q[0]\n            del q[0]\n            q.append(tmp)\n        \n        ind -= 1\n        if ind < 0:\n            ind = len(q)-1\n\n    print(ans)\n\nfor _ in range(int(stdin.readline())):\n    queueLen, queueInd = map(int, stdin.readline().split())\n    queue = list(map(int, stdin.readline().split()))\n\n    run(queue, queueInd)"}, {"id": 30843052, "name": "\ud45c\ub3c4\ud558", "x": -23.160627365112305, "y": 11.491644859313965, "label": 0, "group": 243, "code": "def solution(importance, locations):\n\n    # \uc81c\uc77c \ud070 \uac12\ub9cc \uae30\uc5b5\ud574\n    cache = max(importance)\n\n    turn = 0\n\n    while True:\n        elm = importance[0]\n        loc = locations[0]\n        if cache > elm:\n            importance.append(importance.pop(0))\n            locations.append(locations.pop(0))\n        else:\n            turn += 1\n            if loc == M:\n                return print(turn)\n            importance.pop(0)\n            locations.pop(0)\n            # \uc81c\uc77c \ud070 \uac12 \uad50\uccb4\n            cache = max(importance)\n\n\nimport sys\ninput = sys.stdin.readline\nT = int(input())\n\nfor _ in range(T):\n    N, M = map(int, input().split())\n    # \uac00\uc911\uce58 \ub9ac\uc2a4\ud2b8\n    IMP = []\n    IMP = list(map(int, input().split()))\n    # \uc704\uce58\ucd94\uc801 \ub9ac\uc2a4\ud2b8\n    LOCS = [i for i in range(N)]\n    solution(IMP,LOCS)"}, {"id": 10960262, "name": "\uc624\uc0c1\ud601", "x": -30.213523864746094, "y": -7.581046104431152, "label": 0, "group": 244, "code": "class Queue():\n  def __init__(self):\n    self.list = []\n    self.p_count = 0\n  \n  def enqueue(self, element):\n    self.list.append(element)\n  \n  def dequeue(self):\n    return self.list.pop(0)\n  \n  def empty(self):\n    if len(self.list) == 0:\n      return 0\n    else:\n      return 1\n\nc = int(input())\nans = []\nfor i in range(c):\n  que = Queue()\n  seq = []\n  N, M = map(int, input().split())\n  \n  val = list(map(int, input().split()))\n  for j in range(N):\n    que.enqueue([val[j], 0])\n    seq.append(val[j])\n  \n  seq = sorted(seq)\n  # \uc54c\uace0 \uc2f6\uc740 M\ubc88\uc9f8\ub97c 1\ub85c \ub9cc\ub4e4\uc5b4\uc90c\n  que.list[M][1] = 1\n  \n  while que.empty():\n    val = que.dequeue()\n    if val[0] != seq[-1]:\n      que.enqueue(val)\n    else:\n      seq.pop()\n      que.p_count +=1\n      if val[1] == 1:\n        ans.append(que.p_count)\n      \nfor i in range(c):\n  print(ans[i])\n  \n    "}, {"id": 26254843, "name": "\ud669\uc9c0\ud604", "x": 1.2233593463897705, "y": 15.427210807800293, "label": 0, "group": 244, "code": "def has_bigger(l, p):\n    for i in l:\n        if i > p:\n            return True\n    return False\n\nT = int(input())\n\nfor _ in range(T):\n    N, I = [int(x) for x in input().split()]\n    idx_q = list(range(N))\n    prior_q = [int(x) for x in input().split()]\n    print_q = []\n\n    while not print_q or print_q[-1] != I:\n        if has_bigger(prior_q, prior_q[0]):\n            prior_q.append(prior_q.pop(0))\n            idx_q.append(idx_q.pop(0))\n        else:\n            print_q.append(idx_q.pop(0))\n            prior_q.pop(0)\n\n    print(len(print_q))"}, {"id": 40946557, "name": "\uc870\uc5ec\uc815", "x": 29.44245719909668, "y": 9.248202323913574, "label": 0, "group": 244, "code": "for _ in range(int(input())):\n    N, M = map(int, input().split())\n    t = list(map(int, input().split()))\n\n    st = sorted(t)\n    t = [(v, i) for i, v in enumerate(t)]\n    p = ans = 0\n    mod = len(t)\n\n    while 1:\n        v, i = t[p]\n\n        if v == st[-1]:\n            ans += 1\n            st.pop()\n\n            if i == M:\n                print(ans)\n                break\n\n        p = (p+1)%mod"}, {"id": 46374520, "name": "\ud669\ud604\uc625", "x": 3.383957624435425, "y": 0.3955199420452118, "label": 0, "group": 244, "code": "import sys\ninput = sys.stdin.readline\n\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    docs = list(map(int, input().split()))\n    idx = list(range(len(docs)))\n    idx[m] = 'answer'\n    \n    order = 0\n    \n    while True:\n        if docs[0] == max(docs):\n            order += 1\n\n            if idx[0] == 'answer':\n                print(order)\n                break\n            else:\n                docs.pop(0)\n                idx.pop(0)\n        \n        else:\n            docs.append(docs.pop(0))\n            idx.append(idx.pop(0))"}, {"id": 10774246, "name": "\uc7a5\uc8fc\ud558", "x": 24.32796859741211, "y": 4.1286139488220215, "label": 0, "group": 245, "code": "def solve(n, m, queue) :\n    qu = list(enumerate(queue))\n    pr = sorted(queue, reverse = True)\n    pi, qi = 0, 0\n    while True :\n        if qu[qi][1] < pr[pi] :\n            qu.append(qu[qi])\n            qi += 1\n        elif qu[qi][0] == m :\n            return pi+1\n        else :\n            qi += 1\n            pi += 1\n\ntc = int(input())\nfor t in range(tc) :\n    n, m = map(int, input().split())\n    q = list(map(int, input().split()))\n    print(solve(n,m,q))\n"}, {"id": 30785888, "name": "\uc5c4\ud604\uacbd", "x": -17.406267166137695, "y": 2.6352288722991943, "label": 0, "group": 245, "code": "import sys\n\ndef solution(priorities, location):\n    answer = 0\n    loc = [i for i in range(len(priorities))]\n    while len(priorities) > 0:\n        now = priorities[0]\n        if max(priorities) > now:\n            priorities.append(priorities.pop(0))\n            loc.append(loc.pop(0))\n        else:\n            priorities.pop(0)\n            v = loc.pop(0)\n            answer += 1\n            if v == location:\n                break\n    return answer\n\ntest_case = int(input())\npriority = []\nfor i in range(test_case):\n    N_doc, location = map(int, sys.stdin.readline().rstrip().split())\n    priority = list(map(int, sys.stdin.readline().rstrip().split()))\n    print(solution(priority, location))"}, {"id": 16609262, "name": "\uae40\ud76c\uc120", "x": -5.585503101348877, "y": -17.46234893798828, "label": 0, "group": 245, "code": "num_case=int(input())\nresult=[]\nfor i in range(num_case):\n    n,m=map(int,input().split())\n    q = list(map(int,input().split()))\n    count=0\n    # mx=max(q)\n    while n>0:\n        mx=max(q)\n        if q[0] < mx:\n            q.append(q.pop(0))\n            m-=1\n            if m<0:\n                m=n-1\n        else:\n            q.pop(0)\n            n -= 1\n            m -= 1\n            count += 1\n            if m < 0:\n                break\n    result.append(count)\nfor i in result:\n    print(i)\n"}, {"id": 20134284, "name": "\uc548\uc218\uc815", "x": -17.19426918029785, "y": -19.52459144592285, "label": 0, "group": 245, "code": "import sys\n\ninput = lambda: sys.stdin.readline().rstrip()\n\n\nT = int(input())\nfor _ in range(T):\n    cnt = 0\n    N, M = map(int,input().split())\n    L = list(map(int,input().split()))\n    idx = M\n    while 1:\n        if max(L)==L[0]:\n            if idx==0:\n                L.pop(0)\n                cnt+=1\n                break\n            else:\n                L.pop(0)\n                cnt += 1\n                if idx>0:\n                    idx-=1\n                else:\n                    idx=len(L)-1\n\n        else:\n            L.append(L.pop(0))\n\n            if idx>0:\n                idx-=1\n            else:\n                idx=len(L)-1\n\n\n    print(cnt)"}, {"id": 34701337, "name": "\ud64d\uc11c\uc601", "x": 5.2860918045043945, "y": 0.029697194695472717, "label": 0, "group": 246, "code": "TestCase = int(input())\n\nfor _ in range(TestCase):\n    N, T = list(map(int, input().split()))\n    imp_list = list(map(int, input().split()))\n    chk_list = [0 for _ in range(N)]\n    chk_list[T] = \"Target\"\n    result = 0\n\n    while True:\n        if imp_list[0] == max(imp_list):\n            result += 1\n            if chk_list[0] == \"Target\":\n                print(result)\n                break\n            else:\n                imp_list.pop(0)\n                chk_list.pop(0)\n        else:\n            imp_list.append(imp_list.pop(0))\n            chk_list.append(chk_list.pop(0))"}, {"id": 36832214, "name": "\ubd09\uc2dc\uc6b1", "x": 11.040410995483398, "y": -7.143458366394043, "label": 0, "group": 246, "code": "import sys\ninput = sys.stdin.readline\na = int(input())\n\n\nfor _ in range(a):\n    N,M = map(int,input().split())\n    li = list(map(int,input().split()))\n    result = list(range(0,N))\n    l = []\n    while len(result) != 0 :\n        m = result.pop(0)\n        if li[0] == max(li) :\n            l.append(m)\n            del li[0]\n\n        else :\n            b = li.pop(0)\n            li.append(b)\n            result.append(m)\n    print(l.index(M)+1)"}, {"id": 21557658, "name": "\uc870\ud55c\uc120", "x": -5.0667009353637695, "y": -8.282221794128418, "label": 0, "group": 246, "code": "t = int(input())\n\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 23963345, "name": "\uc2e0\ud604\uc900", "x": -4.392147541046143, "y": -9.08985424041748, "label": 0, "group": 246, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 11293850, "name": "\ub2e4\ub2c8\uc5d8 \ud5e4\ub2c8", "x": -9.233906745910645, "y": -15.707045555114746, "label": 0, "group": 247, "code": "T = int(input())\n\nli_queue = []\n\nfor t in range(T):\n    N, M = map(int, input().split())\n    msg = input().split()\n\n    li_queue.clear()\n    cnt = 1\n    \n    for m in msg:\n        li_queue.append(int(m))\n\n    idx = 0\n    max_value = max(li_queue)\n    max_idx = li_queue.index(max_value)\n\n    while(True):\n        if idx==len(li_queue):\n            idx = 0\n\n        if li_queue[idx] != max_value:\n            idx = max_idx\n            li_queue[idx] = -1\n\n            max_value = 0\n            max_idx = 0\n\n            for temp_idx, temp_value in enumerate(li_queue[idx:]):\n                if temp_value>max_value:\n                    max_value = temp_value\n                    max_idx = temp_idx + idx\n\n            if max_value < max(li_queue):\n                max_value = max(li_queue)\n                max_idx = max_idx = li_queue.index(max_value)\n\n            if M == idx:\n                print(cnt)\n                break\n            idx+=1\n            cnt+=1\n\n        else:\n            if M == idx:\n                print(cnt)\n                break\n            else:\n                li_queue[idx] = -1\n                cnt+=1\n                \n                max_value = 0\n                max_idx = 0\n\n                for temp_idx, temp_value in enumerate(li_queue[idx:]):\n                    if temp_value>max_value:\n                        max_value = temp_value\n                        max_idx = temp_idx + idx\n\n                if max_value < max(li_queue):\n                    max_value = max(li_queue)\n                    max_idx = max_idx = li_queue.index(max_value)\n\n                idx+=1"}, {"id": 29881484, "name": "\ucc9c\uc6b0\ud76c", "x": -3.369408369064331, "y": -10.796956062316895, "label": 0, "group": 247, "code": "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    s = list(map(int, input().split()))\n    s_ = [0 for i in range(n)]\n    s_[m] = 1\n    cnt = 0\n    while True:\n        if s[0] == max(s):\n            cnt += 1\n            if s_[0] == 1:\n                print(cnt)\n                break\n            else:\n                del s[0]\n                del s_[0]\n        else:\n            s.append(s[0])\n            del s[0]\n            s_.append(s_[0])\n            del s_[0]"}, {"id": 41180956, "name": "\uc548\uc885\ucca0", "x": 15.240818977355957, "y": 11.62706470489502, "label": 0, "group": 247, "code": "import sys\n\nn = int(sys.stdin.readline())\n\nfor _ in range(n):\n    h = []\n    x, y = map(int, sys.stdin.readline().split())\n    lst = list(map(int, sys.stdin.readline().split()))\n    lstsub = [False for i in range(x)]\n    lstsub[y] = True\n    cnt = 0\n\n    while True:\n        if lst[0] == max(lst):\n            cnt += 1\n            if lstsub[0] == True:\n                print(cnt)\n                break\n            else:\n                del lst[0]\n                del lstsub[0]\n        else:\n            lst.append(lst[0])\n            lstsub.append(lstsub[0])\n            del lst[0]\n            del lstsub[0]"}, {"id": 7583856, "name": "\ud0c1\uc2b9\uc6a9", "x": 23.912288665771484, "y": 39.374855041503906, "label": 0, "group": 247, "code": "import sys\nread = lambda:sys.stdin.readline()\nt = int(read())\nwhile t:\n\tt -= 1\n\tn, m = map(int, read().split())\n\tli = list(map(int, read().split()))\n\n\tsli = sorted(li, reverse=True)\n\ttask = 1\n\twhile 1:\n\t\tif m == 0 and li[0] == sli[task - 1]:\n\t\t\tprint(task)\n\t\t\tbreak\n\t\telif li[0] == sli[task - 1]:\n\t\t\ttask += 1\n\t\t\tli.pop(0)\n\t\t\tm -= 1\n\t\telse:\n\t\t\tli.append(li.pop(0))\n\t\t\tm -= 1\n\t\t\tif m < 0:m = len(li) - 1\n"}, {"id": 36194616, "name": "\uc870\uaddc\ud658", "x": -18.68391227722168, "y": 9.28788948059082, "label": 0, "group": 248, "code": "import sys\ntemp = int(sys.stdin.readline())\nfor i in range(temp):\n    loaction = 0\n    count = 0\n    N, M = map(int, sys.stdin.readline().split())\n    file = list(map(int,sys.stdin.readline().split()))\n    level = list(set(file))\n    level.sort(reverse = True)\n    if file[M] == level[0]:\n        for j in file[:M+1]:\n            if j == file[M]:\n                count += 1\n    else:\n        location = len(file) - 1 - file[::-1].index(level[0]) # \uac00\uc7a5 \ub192\uc740 \uc911\uc694\ub3c4\uc758 \uac00\uc7a5 \uc624\ub978\ucabd\n        for k in level[1:level.index(file[M])]:\n            if k in file[:location]:\n                location = location - file[location::-1].index(k) # \uc67c\ucabd \uac00\uc7a5 \uc624\ub978\ucabd\uc5d0 \uc788\ub294\uac70\n            else:\n                location = len(file) - file[::-1].index(k) -1 # \ub9e8 \uc624\ub978\ucabd\uc5d0 \uc788\ub294\uac70\n        if M < location:\n            for l in file[:M+1]:\n                if l == file[M]:\n                    count += 1\n            count += file[location:].count(file[M])\n        else:\n            for l in file[location:M+1]:\n                if l == file[M]:\n                    count += 1\n        for i in level[:level.index(file[M])]: \n            count += file.count(i)\n    print(count)\n"}, {"id": 45850676, "name": "\uc131\ud0dc\uc9c4", "x": 3.966846466064453, "y": -2.295356512069702, "label": 0, "group": 248, "code": "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())) :\n    N, M = map(int, input().split())\n    importance = list(map(int, input().split()))\n    number = [i for i in range(N)]\n    temp = number[M]\n\n    cnt = 0\n    while(True) :\n        if importance[0] == max(importance) :\n            cnt += 1\n            if number[0] == temp :\n                print(cnt)\n                break\n            else :\n                importance.pop(0)\n                number.pop(0)\n        \n        else :\n            importance.append(importance.pop(0))\n            number.append(number.pop(0))"}, {"id": 41123089, "name": "\uae40\uae30\ubc94", "x": -13.421507835388184, "y": 13.456549644470215, "label": 0, "group": 248, "code": "import sys\n\nt = int(sys.stdin.readline().rstrip())\nfor _ in range(t):\n    n, i = map(int,sys.stdin.readline().split())\n    queue = list(map(int, sys.stdin.readline().split()))\n    temp = [0 for _ in range(n)] # \ub9ac\uc2a4\ud2b8 \uc548\uc5d0\uc11c for\ubb38 \uc0ac\uc6a9 \uac00\ub2a5\n    temp[i] = 1\n    cnt = 0\n    while True:\n        if(queue[0] == max(queue)):\n            cnt += 1\n            if(temp[0] == 1):\n                    print(cnt)\n                    break\n            else:\n                temp.pop(0)\n                queue.pop(0)\n        else:\n            temp.append(temp.pop(0))\n            queue.append(queue.pop(0))"}, {"id": 15702218, "name": "\uc131\uc6b0\uc11d", "x": 13.354647636413574, "y": -14.074278831481934, "label": 0, "group": 248, "code": "import sys\nread = lambda : sys.stdin.readline()\nanswers = []\nfor _ in range(int(read())):\n    size, index = map(int, read().split(' '))\n    que = list(map(int, read().split(' ')))\n    count = 0\n    while True:\n        if(que[0] == max(que)):\n            x = que.pop(0)\n            count += 1\n            if(index == 0):\n                break\n            else:\n                index = int((index - 1) % len(que))\n        else:\n            que.append(que.pop(0))\n            index = int((index - 1) % len(que))\n    answers.append(count)\nfor answer in answers:\n    print(answer)"}, {"id": 43538248, "name": "\uc625\uc8fc\ud604", "x": 11.84378433227539, "y": -5.316799163818359, "label": 0, "group": 249, "code": "testCase = int(input())\nfor _ in range(testCase):\n    level = 10\n    document = 1\n    printing = 0\n    length, order = map(int, input().split())\n    importance = list(map(int, input().split()))\n    while importance[order] != 0 :\n        level -= 1\n        for k in range(printing, printing+length, 1):\n            if importance[k%length] == level:\n                importance[k%length] = 0\n                if importance[order] != 0:\n                    document +=1\n                printing = k%length+1\n    print(document)"}, {"id": 39423152, "name": "\ubd09\uc7ac\uc724", "x": -1.5031967163085938, "y": -5.306151390075684, "label": 0, "group": 249, "code": "from sys import stdin\nn=int(stdin.readline())\nfor _ in range(n):\n    c=0\n    i=int(stdin.readline().split()[1])\n    Q=list(map(int,stdin.readline().split()))\n    sort=sorted(Q)\n    while 1:\n        if i==0:\n            if Q[0]==sort[-1]:\n                c+=1\n                break\n            else:\n                Q.append(Q.pop(0))\n                i=len(Q)\n        elif Q[0]==sort[-1]:\n            Q.pop(0)\n            sort.pop()\n            c+=1\n        else:\n            Q.append(Q.pop(0))\n        i-=1\n    print(c)"}, {"id": 19904529, "name": "\ub958\uc2b9\ubc94", "x": 7.0393548011779785, "y": 2.210171937942505, "label": 0, "group": 249, "code": "for _ in range(int(input())):\n    array_size, index = map(int, input().split(' '))\n    que = list(map(int, input().split(' ')))\n    chk = [0 for _ in range(array_size)]\n    chk[index] = 'T'\n\n    count = 0\n    while True:\n        if que[0] == max(que):\n            count += 1\n            if chk[0] == 'T':\n                print(count)\n                break\n            else:\n                que.pop(0)\n                chk.pop(0)\n        else:\n            que.append(que.pop(0))\n            chk.append(chk.pop(0))"}, {"id": 21251624, "name": "\uc804\uc724\uc544", "x": -7.520946025848389, "y": -9.020430564880371, "label": 0, "group": 249, "code": "t = int(input())\n\nfor i in range(t):\n    n, m = map(int, input().split(' '))\n    a = list(map(int, input().split(' ')))\n    a_= [0 for i in range(n)]\n\n    a_[m] = 1\n    rank = 0\n\n    while True:\n        if a[0] == max(a):\n            rank += 1\n            if a_[0] == 1:\n                break\n            else:\n                del a[0]\n                del a_[0]\n        else:\n            a.append(a[0])\n            del a[0]\n            a_.append(a_[0])\n            del a_[0]\n\n    print(rank)"}], "centroid": ["31468756"], "labels": [0], "group": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249]}
